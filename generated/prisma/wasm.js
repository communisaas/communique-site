/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, '__esModule', { value: true });

const {
	Decimal,
	objectEnumValues,
	makeStrictEnum,
	Public,
	getRuntime,
	skip
} = require('./runtime/index-browser.js');

const Prisma = {};

exports.Prisma = Prisma;
exports.$Enums = {};

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
	client: '6.10.1',
	engine: '9b628578b3b7cae625e8c927178f15a170e74a9c'
};

Prisma.PrismaClientKnownRequestError = () => {
	const runtimeName = getRuntime().prettyName;
	throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.PrismaClientUnknownRequestError = () => {
	const runtimeName = getRuntime().prettyName;
	throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.PrismaClientRustPanicError = () => {
	const runtimeName = getRuntime().prettyName;
	throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.PrismaClientInitializationError = () => {
	const runtimeName = getRuntime().prettyName;
	throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.PrismaClientValidationError = () => {
	const runtimeName = getRuntime().prettyName;
	throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.Decimal = Decimal;

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
	const runtimeName = getRuntime().prettyName;
	throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.empty = () => {
	const runtimeName = getRuntime().prettyName;
	throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.join = () => {
	const runtimeName = getRuntime().prettyName;
	throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.raw = () => {
	const runtimeName = getRuntime().prettyName;
	throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.validator = Public.validator;

/**
 * Extensions
 */
Prisma.getExtensionContext = () => {
	const runtimeName = getRuntime().prettyName;
	throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.defineExtension = () => {
	const runtimeName = getRuntime().prettyName;
	throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull;
Prisma.JsonNull = objectEnumValues.instances.JsonNull;
Prisma.AnyNull = objectEnumValues.instances.AnyNull;

Prisma.NullTypes = {
	DbNull: objectEnumValues.classes.DbNull,
	JsonNull: objectEnumValues.classes.JsonNull,
	AnyNull: objectEnumValues.classes.AnyNull
};

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
	ReadCommitted: 'ReadCommitted',
	Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
	id: 'id',
	email: 'email',
	name: 'name',
	avatar: 'avatar',
	phone: 'phone',
	street: 'street',
	city: 'city',
	state: 'state',
	zip: 'zip',
	congressional_district: 'congressional_district',
	createdAt: 'createdAt',
	updatedAt: 'updatedAt'
};

exports.Prisma.SessionScalarFieldEnum = {
	id: 'id',
	userId: 'userId',
	expiresAt: 'expiresAt',
	createdAt: 'createdAt'
};

exports.Prisma.TemplateScalarFieldEnum = {
	id: 'id',
	title: 'title',
	description: 'description',
	category: 'category',
	type: 'type',
	deliveryMethod: 'deliveryMethod',
	subject: 'subject',
	preview: 'preview',
	message_body: 'message_body',
	delivery_config: 'delivery_config',
	cwc_config: 'cwc_config',
	recipient_config: 'recipient_config',
	metrics: 'metrics',
	campaign_id: 'campaign_id',
	status: 'status',
	is_public: 'is_public',
	createdAt: 'createdAt',
	updatedAt: 'updatedAt',
	userId: 'userId'
};

exports.Prisma.AccountScalarFieldEnum = {
	id: 'id',
	user_id: 'user_id',
	type: 'type',
	provider: 'provider',
	provider_account_id: 'provider_account_id',
	refresh_token: 'refresh_token',
	access_token: 'access_token',
	expires_at: 'expires_at',
	token_type: 'token_type',
	scope: 'scope',
	id_token: 'id_token',
	session_state: 'session_state',
	created_at: 'created_at',
	updated_at: 'updated_at'
};

exports.Prisma.Congressional_officeScalarFieldEnum = {
	id: 'id',
	office_code: 'office_code',
	state: 'state',
	district: 'district',
	member_name: 'member_name',
	party: 'party',
	is_active: 'is_active',
	last_updated: 'last_updated'
};

exports.Prisma.Template_campaignScalarFieldEnum = {
	id: 'id',
	template_id: 'template_id',
	delivery_type: 'delivery_type',
	recipient_id: 'recipient_id',
	cwc_delivery_id: 'cwc_delivery_id',
	status: 'status',
	sent_at: 'sent_at',
	delivered_at: 'delivered_at',
	error_message: 'error_message',
	metadata: 'metadata',
	created_at: 'created_at',
	updated_at: 'updated_at'
};

exports.Prisma.RepresentativeScalarFieldEnum = {
	id: 'id',
	bioguide_id: 'bioguide_id',
	name: 'name',
	party: 'party',
	state: 'state',
	district: 'district',
	chamber: 'chamber',
	office_code: 'office_code',
	phone: 'phone',
	email: 'email',
	is_active: 'is_active',
	last_updated: 'last_updated'
};

exports.Prisma.User_representativesScalarFieldEnum = {
	id: 'id',
	user_id: 'user_id',
	representative_id: 'representative_id',
	relationship: 'relationship',
	is_active: 'is_active',
	assigned_at: 'assigned_at',
	last_validated: 'last_validated'
};

exports.Prisma.SortOrder = {
	asc: 'asc',
	desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
	JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
	DbNull: Prisma.DbNull,
	JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
	default: 'default',
	insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
	first: 'first',
	last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
	DbNull: Prisma.DbNull,
	JsonNull: Prisma.JsonNull,
	AnyNull: Prisma.AnyNull
};

exports.Prisma.ModelName = {
	User: 'User',
	Session: 'Session',
	Template: 'Template',
	account: 'account',
	congressional_office: 'congressional_office',
	template_campaign: 'template_campaign',
	representative: 'representative',
	user_representatives: 'user_representatives'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
	constructor() {
		return new Proxy(this, {
			get(target, prop) {
				let message;
				const runtime = getRuntime();
				if (runtime.isEdge) {
					message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
				} else {
					message =
						'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' +
						runtime.prettyName +
						'`).';
				}

				message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`;

				throw new Error(message);
			}
		});
	}
}

exports.PrismaClient = PrismaClient;

Object.assign(exports, Prisma);
