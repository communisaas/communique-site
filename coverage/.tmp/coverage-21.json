{"/Users/noot/Documents/communique/src/routes/auth/google/+server.ts":{"path":"/Users/noot/Documents/communique/src/routes/auth/google/+server.ts","statementMap":{"0":{"start":{"line":4,"column":19},"end":{"line":42,"column":1}},"1":{"start":{"line":5,"column":16},"end":{"line":5,"column":31}},"2":{"start":{"line":6,"column":23},"end":{"line":6,"column":45}},"3":{"start":{"line":7,"column":22},"end":{"line":7,"column":83}},"4":{"start":{"line":8,"column":17},"end":{"line":12,"column":3}},"5":{"start":{"line":13,"column":2},"end":{"line":20,"column":5}},"6":{"start":{"line":21,"column":2},"end":{"line":28,"column":5}},"7":{"start":{"line":29,"column":19},"end":{"line":29,"column":51}},"8":{"start":{"line":30,"column":2},"end":{"line":39,"column":3}},"9":{"start":{"line":31,"column":4},"end":{"line":38,"column":7}},"10":{"start":{"line":40,"column":27},"end":{"line":40,"column":115}},"11":{"start":{"line":41,"column":2},"end":{"line":41,"column":45}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":19},"end":{"line":4,"column":20}},"loc":{"start":{"line":4,"column":47},"end":{"line":42,"column":1}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":30,"column":2},"end":{"line":39,"column":3}},"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":39,"column":3}},{"start":{},"end":{}}],"line":30}},"s":{"0":1,"1":12,"2":12,"3":12,"4":12,"5":12,"6":12,"7":12,"8":12,"9":2,"10":12,"11":12},"f":{"0":12},"b":{"0":[2,10]},"inputSourceMap":{"version":3,"sources":["/Users/noot/Documents/communique/src/routes/auth/google/+server.ts"],"sourcesContent":["import { redirect } from '@sveltejs/kit';\nimport { Google } from 'arctic';\nimport { generateState, generateCodeVerifier } from '$lib/server/oauth';\nimport type { RequestHandler } from './$types';\n\nexport const GET: RequestHandler = async ({ cookies, url }) => {\n\tconst state = generateState();\n\tconst codeVerifier = generateCodeVerifier();\n\t\n\tconst redirectUri = `${process.env.OAUTH_REDIRECT_BASE_URL}/auth/google/callback`;\n\t\n\t// Create Google OAuth provider with static redirect URI\n\tconst google = new Google(\n\t\tprocess.env.GOOGLE_CLIENT_ID!,\n\t\tprocess.env.GOOGLE_CLIENT_SECRET!,\n\t\tredirectUri\n\t);\n\t\n\t// Store state and code verifier in cookies for verification\n\tcookies.set('oauth_state', state, {\n\t\tpath: '/',\n\t\tsecure: process.env.NODE_ENV === 'production',\n\t\thttpOnly: true,\n\t\tmaxAge: 60 * 10, // 10 minutes\n\t\tsameSite: 'lax'\n\t});\n\t\n\tcookies.set('oauth_code_verifier', codeVerifier, {\n\t\tpath: '/',\n\t\tsecure: process.env.NODE_ENV === 'production',\n\t\thttpOnly: true,\n\t\tmaxAge: 60 * 10, // 10 minutes\n\t\tsameSite: 'lax'\n\t});\n\t\n\t// Store the return URL if provided\n\tconst returnTo = url.searchParams.get('returnTo');\n\tif (returnTo) {\n\t\tcookies.set('oauth_return_to', returnTo, {\n\t\t\tpath: '/',\n\t\t\tsecure: process.env.NODE_ENV === 'production',\n\t\t\thttpOnly: true,\n\t\t\tmaxAge: 60 * 10, // 10 minutes\n\t\t\tsameSite: 'lax'\n\t\t});\n\t}\n\t\n\tconst authorizationURL = await google.createAuthorizationURL(state, codeVerifier, ['openid', 'profile', 'email']);\n\t\n\tredirect(302, authorizationURL.toString());\n}; "],"mappings":"AAAA,SAAS,gBAAgB;AACzB,SAAS,cAAc;AACvB,SAAS,eAAe,4BAA4B;AAG7C,aAAM,MAAsB,OAAO,EAAE,SAAS,IAAI,MAAM;AAC9D,QAAM,QAAQ,cAAc;AAC5B,QAAM,eAAe,qBAAqB;AAE1C,QAAM,cAAc,GAAG,QAAQ,IAAI,uBAAuB;AAG1D,QAAM,SAAS,IAAI;AAAA,IAClB,QAAQ,IAAI;AAAA,IACZ,QAAQ,IAAI;AAAA,IACZ;AAAA,EACD;AAGA,UAAQ,IAAI,eAAe,OAAO;AAAA,IACjC,MAAM;AAAA,IACN,QAAQ,QAAQ,IAAI,aAAa;AAAA,IACjC,UAAU;AAAA,IACV,QAAQ,KAAK;AAAA;AAAA,IACb,UAAU;AAAA,EACX,CAAC;AAED,UAAQ,IAAI,uBAAuB,cAAc;AAAA,IAChD,MAAM;AAAA,IACN,QAAQ,QAAQ,IAAI,aAAa;AAAA,IACjC,UAAU;AAAA,IACV,QAAQ,KAAK;AAAA;AAAA,IACb,UAAU;AAAA,EACX,CAAC;AAGD,QAAM,WAAW,IAAI,aAAa,IAAI,UAAU;AAChD,MAAI,UAAU;AACb,YAAQ,IAAI,mBAAmB,UAAU;AAAA,MACxC,MAAM;AAAA,MACN,QAAQ,QAAQ,IAAI,aAAa;AAAA,MACjC,UAAU;AAAA,MACV,QAAQ,KAAK;AAAA;AAAA,MACb,UAAU;AAAA,IACX,CAAC;AAAA,EACF;AAEA,QAAM,mBAAmB,MAAM,OAAO,uBAAuB,OAAO,cAAc,CAAC,UAAU,WAAW,OAAO,CAAC;AAEhH,WAAS,KAAK,iBAAiB,SAAS,CAAC;AAC1C;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"70ae542cec195968121ac686a20f23e5f769a2bc"}}