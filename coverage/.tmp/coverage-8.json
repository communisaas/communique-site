{"/Users/noot/Documents/communique/src/lib/types/templateConfig.ts":{"path":"/Users/noot/Documents/communique/src/lib/types/templateConfig.ts","statementMap":{"0":{"start":{"line":2,"column":2},"end":{"line":2,"column":68}},"1":{"start":{"line":2,"column":55},"end":{"line":2,"column":68}},"2":{"start":{"line":3,"column":17},"end":{"line":3,"column":20}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":121}},"4":{"start":{"line":4,"column":94},"end":{"line":4,"column":119}},"5":{"start":{"line":7,"column":2},"end":{"line":7,"column":68}},"6":{"start":{"line":7,"column":55},"end":{"line":7,"column":68}},"7":{"start":{"line":8,"column":17},"end":{"line":8,"column":20}},"8":{"start":{"line":9,"column":2},"end":{"line":9,"column":183}},"9":{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":35}},"11":{"start":{"line":15,"column":2},"end":{"line":15,"column":12}},"12":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"13":{"start":{"line":19,"column":4},"end":{"line":19,"column":27}},"14":{"start":{"line":21,"column":2},"end":{"line":24,"column":4}},"15":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"16":{"start":{"line":28,"column":4},"end":{"line":28,"column":19}},"17":{"start":{"line":30,"column":2},"end":{"line":35,"column":4}},"18":{"start":{"line":38,"column":2},"end":{"line":38,"column":98}},"19":{"start":{"line":41,"column":17},"end":{"line":41,"column":31}},"20":{"start":{"line":42,"column":2},"end":{"line":53,"column":4}}},"fnMap":{"0":{"name":"isValidRecipientConfig","decl":{"start":{"line":1,"column":16},"end":{"line":1,"column":38}},"loc":{"start":{"line":1,"column":44},"end":{"line":5,"column":1}},"line":1},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":83},"end":{"line":4,"column":84}},"loc":{"start":{"line":4,"column":94},"end":{"line":4,"column":119}},"line":4},"2":{"name":"isValidDeliveryConfig","decl":{"start":{"line":6,"column":16},"end":{"line":6,"column":37}},"loc":{"start":{"line":6,"column":43},"end":{"line":10,"column":1}},"line":6},"3":{"name":"extractRecipientEmails","decl":{"start":{"line":11,"column":16},"end":{"line":11,"column":38}},"loc":{"start":{"line":11,"column":57},"end":{"line":16,"column":1}},"line":11},"4":{"name":"extractDeliveryConfig","decl":{"start":{"line":17,"column":16},"end":{"line":17,"column":37}},"loc":{"start":{"line":17,"column":55},"end":{"line":25,"column":1}},"line":17},"5":{"name":"extractTemplateMetrics","decl":{"start":{"line":26,"column":16},"end":{"line":26,"column":38}},"loc":{"start":{"line":26,"column":48},"end":{"line":36,"column":1}},"line":26},"6":{"name":"isValidTemplateMetrics","decl":{"start":{"line":37,"column":9},"end":{"line":37,"column":31}},"loc":{"start":{"line":37,"column":37},"end":{"line":39,"column":1}},"line":37},"7":{"name":"migrateToTypedTemplate","decl":{"start":{"line":40,"column":16},"end":{"line":40,"column":38}},"loc":{"start":{"line":40,"column":55},"end":{"line":54,"column":1}},"line":40}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":2},"end":{"line":2,"column":68}},"type":"if","locations":[{"start":{"line":2,"column":2},"end":{"line":2,"column":68}},{"start":{},"end":{}}],"line":2},"1":{"loc":{"start":{"line":2,"column":6},"end":{"line":2,"column":53}},"type":"binary-expr","locations":[{"start":{"line":2,"column":6},"end":{"line":2,"column":10}},{"start":{"line":2,"column":14},"end":{"line":2,"column":37}},{"start":{"line":2,"column":41},"end":{"line":2,"column":53}}],"line":2},"2":{"loc":{"start":{"line":4,"column":9},"end":{"line":4,"column":120}},"type":"binary-expr","locations":[{"start":{"line":4,"column":9},"end":{"line":4,"column":27}},{"start":{"line":4,"column":31},"end":{"line":4,"column":59}},{"start":{"line":4,"column":63},"end":{"line":4,"column":120}}],"line":4},"3":{"loc":{"start":{"line":7,"column":2},"end":{"line":7,"column":68}},"type":"if","locations":[{"start":{"line":7,"column":2},"end":{"line":7,"column":68}},{"start":{},"end":{}}],"line":7},"4":{"loc":{"start":{"line":7,"column":6},"end":{"line":7,"column":53}},"type":"binary-expr","locations":[{"start":{"line":7,"column":6},"end":{"line":7,"column":10}},{"start":{"line":7,"column":14},"end":{"line":7,"column":37}},{"start":{"line":7,"column":41},"end":{"line":7,"column":53}}],"line":7},"5":{"loc":{"start":{"line":9,"column":9},"end":{"line":9,"column":182}},"type":"binary-expr","locations":[{"start":{"line":9,"column":9},"end":{"line":9,"column":27}},{"start":{"line":9,"column":31},"end":{"line":9,"column":64}},{"start":{"line":9,"column":68},"end":{"line":9,"column":118}},{"start":{"line":9,"column":122},"end":{"line":9,"column":142}},{"start":{"line":9,"column":146},"end":{"line":9,"column":182}}],"line":9},"6":{"loc":{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},{"start":{},"end":{}}],"line":12},"7":{"loc":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},{"start":{},"end":{}}],"line":18},"8":{"loc":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},{"start":{},"end":{}}],"line":27},"9":{"loc":{"start":{"line":38,"column":9},"end":{"line":38,"column":97}},"type":"binary-expr","locations":[{"start":{"line":38,"column":9},"end":{"line":38,"column":21}},{"start":{"line":38,"column":25},"end":{"line":38,"column":48}},{"start":{"line":38,"column":52},"end":{"line":38,"column":65}},{"start":{"line":38,"column":69},"end":{"line":38,"column":97}}],"line":38},"10":{"loc":{"start":{"line":46,"column":16},"end":{"line":46,"column":43}},"type":"binary-expr","locations":[{"start":{"line":46,"column":16},"end":{"line":46,"column":33}},{"start":{"line":46,"column":37},"end":{"line":46,"column":43}}],"line":46},"11":{"loc":{"start":{"line":47,"column":13},"end":{"line":52,"column":5}},"type":"binary-expr","locations":[{"start":{"line":47,"column":13},"end":{"line":47,"column":27}},{"start":{"line":47,"column":31},"end":{"line":52,"column":5}}],"line":47}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"0":[0,0],"1":[0,0,0],"2":[0,0,0],"3":[0,0],"4":[0,0,0],"5":[0,0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0,0],"10":[0,0],"11":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/noot/Documents/communique/src/lib/types/templateConfig.ts"],"sourcesContent":["/**\n * Template Configuration Types - COMPLETE KOLMOGOROV COMPRESSED TYPE SYSTEM\n * \n * This module eliminates ALL 'as any' cancer with mathematically minimal type definitions\n * that capture the complete template ecosystem with zero redundancy.\n */\n\n// CORE CONFIG TYPES - Minimal atomic units\nexport interface RecipientConfig {\n\temails: string[];\n}\n\nexport interface DeliveryConfig {\n\ttiming: 'immediate' | 'scheduled';\n\tfollowUp: boolean;\n\tcwcEnabled?: boolean; // Congressional delivery toggle\n}\n\nexport interface CwcConfig {\n\tenabled: boolean;\n\trouting_code?: string;\n\tpriority?: 'normal' | 'high' | 'urgent';\n\ttracking_enabled?: boolean;\n\toffice_codes?: string[]; // Specific congressional offices\n}\n\n// ANALYTICS & AI TYPES - From schema analysis\nexport interface ContextTags {\n\t[key: string]: string | number | boolean;\n}\n\nexport interface PersonalizationMetrics {\n\tusage_count: number;\n\tpersonalization_rate: number; // % who customize\n\tavg_length?: number;\n\tengagement_score?: number;\n\ttop_themes: string[];\n}\n\nexport interface WritingStyleProfile {\n\ttone_preference?: 'formal' | 'casual' | 'passionate';\n\tlength_preference?: 'concise' | 'detailed' | 'moderate';\n\tpersonal_themes: string[];\n\tengagement_metrics: PersonalizationMetrics;\n}\n\n// COMPLETE METRICS TYPE SYSTEM - All JSON fields typed\nexport interface TemplateMetrics {\n\tsent: number;\n\topened: number;          // Deprecated - not trackable for direct email\n\tclicked: number;         // For direct: recipient count; for congressional: not used\n\tresponded: number;       // For congressional: delivery confirmations; for direct: not used\n\tviews?: number;          // Deep link views\n\t\n\t// Congressional-specific metrics\n\tdistricts_covered?: number;\n\ttotal_districts?: number;\n\tdistrict_coverage_percent?: number;\n\t\n\t// AI/Analytics metrics from schema\n\tpersonalization_rate?: number;\n\teffectiveness_score?: number; // ML-derived\n\tcascade_depth?: number; // User activation chain length\n\tviral_coefficient?: number; // Sharing rate\n\t\n\t// Funnel tracking metrics\n\tfunnel_views?: number;       // Template page views\n\tmodal_views?: number;        // Modal popup views  \n\tonboarding_starts?: number;  // Users who started onboarding\n\tonboarding_completes?: number; // Users who completed onboarding\n\tauth_completions?: number;   // Users who completed authentication\n\tshares?: number;             // Template shares\n}\n\n// TEMPLATE ECOSYSTEM TYPES - Complete schema coverage\nexport interface TemplatePersonalization {\n\tvariable_name: string;\n\tcustom_value: string;\n\tusage_count: number;\n\tlast_used: Date;\n}\n\nexport interface AISuggestion {\n\tvariable_name: string;\n\tcategory: 'personal_story' | 'reasoning' | 'example' | 'context';\n\tsuggestion_text: string;\n\tcontext_tags: ContextTags;\n\teffectiveness_score?: number;\n\tis_active: boolean;\n}\n\nexport interface TemplateAnalytics {\n\tvariable_name: string;\n\tdate: Date;\n\ttotal_uses: number;\n\tpersonalization_rate: number;\n\tavg_length?: number;\n\tengagement_score?: number;\n\ttop_themes: string[];\n}\n\n// USER ACTIVATION NETWORK - Mathematical cascade tracking\nexport interface UserActivation {\n\tuser_id: string;\n\ttemplate_id: string;\n\tsource_user_id?: string; // Functor arrow source\n\tactivation_generation: number; // Category theory morphism depth\n\tactivation_method: 'share' | 'view' | 'referral' | 'discovery';\n\ttimestamp: Date;\n}\n\nexport interface TypedTemplate {\n\tid: string;\n\tslug?: string;\n\ttitle: string;\n\tdescription: string;\n\tcategory: string;\n\ttype: string;\n\tdeliveryMethod: 'email' | 'both';\n\tsubject?: string;\n\tmessage_body: string;\n\tpreview: string;\n\tis_public: boolean;\n\t\n\tdelivery_config: DeliveryConfig;\n\trecipient_config: RecipientConfig;\n\tcwc_config?: CwcConfig;\n\tmetrics: TemplateMetrics;\n\t\n\tcampaign_id?: string;\n\tstatus: 'draft' | 'active' | 'archived';\n\tcreatedAt: Date;\n\tupdatedAt: Date;\n\tuserId?: string;\n\t\n\tpersonalizations?: TemplatePersonalization[];\n\tai_suggestions?: AISuggestion[];\n\tanalytics?: TemplateAnalytics[];\n\tuser_activations?: UserActivation[];\n}\n\nexport interface ResolvedTemplate {\n\tsubject: string;\n\tbody: string;\n\trecipients: string[];\n\tisCongressional: boolean;\n\troutingEmail?: string;\n\tresolution_time: number;\n\tpersonalization_depth: number;\n}\n\n/**\n * Type Guards for Runtime Validation\n */\nexport function isValidRecipientConfig(obj: unknown): obj is RecipientConfig {\n\tif (!obj || typeof obj !== 'object' || obj === null) return false;\n\t\n\tconst record = obj as Record<string, unknown>;\n\treturn 'emails' in record && Array.isArray(record.emails) && \n\t\t   record.emails.every((email: unknown) => typeof email === 'string');\n}\n\nexport function isValidDeliveryConfig(obj: unknown): obj is DeliveryConfig {\n\tif (!obj || typeof obj !== 'object' || obj === null) return false;\n\t\n\tconst record = obj as Record<string, unknown>;\n\treturn 'timing' in record && typeof record.timing === 'string' && \n\t\t   ['immediate', 'scheduled'].includes(record.timing) &&\n\t\t   'followUp' in record && typeof record.followUp === 'boolean';\n}\n\n/**\n * Safe Type Extraction Functions - Replace the 'as any' pattern\n */\nexport function extractRecipientEmails(recipient_config: unknown): string[] {\n\tif (isValidRecipientConfig(recipient_config)) {\n\t\treturn recipient_config.emails;\n\t}\n\treturn [];\n}\n\nexport function extractDeliveryConfig(delivery_config: unknown): DeliveryConfig {\n\tif (isValidDeliveryConfig(delivery_config)) {\n\t\treturn delivery_config;\n\t}\n\treturn {\n\t\ttiming: 'immediate',\n\t\tfollowUp: false\n\t};\n}\n\nexport function extractTemplateMetrics(metrics: unknown): TemplateMetrics {\n\tif (isValidTemplateMetrics(metrics)) {\n\t\treturn metrics;\n\t}\n\t// Default metrics if invalid/null\n\treturn { \n\t\tsent: 0, \n\t\topened: 0, \n\t\tclicked: 0, \n\t\tresponded: 0 \n\t};\n}\n\nfunction isValidTemplateMetrics(obj: unknown): obj is TemplateMetrics {\n\treturn obj !== null && \n\t\t   typeof obj === 'object' && \n\t\t   'sent' in obj && typeof (obj as Record<string, unknown>).sent === 'number';\n}\n\n/**\n * Migration Helper - Convert Legacy Template to Typed Template\n */\nexport function migrateToTypedTemplate(legacyTemplate: unknown): TypedTemplate {\n\tconst legacy = legacyTemplate as Record<string, unknown>;\n\treturn {\n\t\t...legacy,\n\t\tdelivery_config: extractDeliveryConfig(legacy.delivery_config),\n\t\trecipient_config: { emails: extractRecipientEmails(legacy.recipient_config) },\n\t\tcwc_config: legacy.cwc_config || undefined,\n\t\tmetrics: legacy.metrics || {\n\t\t\tsent: 0,\n\t\t\topened: 0,\n\t\t\tclicked: 0,\n\t\t\tresponded: 0\n\t\t}\n\t} as TypedTemplate;\n}"],"mappings":"AA0JO,gBAAS,uBAAuB,KAAsC;AAC5E,MAAI,CAAC,OAAO,OAAO,QAAQ,YAAY,QAAQ,KAAM,QAAO;AAE5D,QAAM,SAAS;AACf,SAAO,YAAY,UAAU,MAAM,QAAQ,OAAO,MAAM,KACpD,OAAO,OAAO,MAAM,CAAC,UAAmB,OAAO,UAAU,QAAQ;AACtE;AAEO,gBAAS,sBAAsB,KAAqC;AAC1E,MAAI,CAAC,OAAO,OAAO,QAAQ,YAAY,QAAQ,KAAM,QAAO;AAE5D,QAAM,SAAS;AACf,SAAO,YAAY,UAAU,OAAO,OAAO,WAAW,YAClD,CAAC,aAAa,WAAW,EAAE,SAAS,OAAO,MAAM,KACjD,cAAc,UAAU,OAAO,OAAO,aAAa;AACxD;AAKO,gBAAS,uBAAuB,kBAAqC;AAC3E,MAAI,uBAAuB,gBAAgB,GAAG;AAC7C,WAAO,iBAAiB;AAAA,EACzB;AACA,SAAO,CAAC;AACT;AAEO,gBAAS,sBAAsB,iBAA0C;AAC/E,MAAI,sBAAsB,eAAe,GAAG;AAC3C,WAAO;AAAA,EACR;AACA,SAAO;AAAA,IACN,QAAQ;AAAA,IACR,UAAU;AAAA,EACX;AACD;AAEO,gBAAS,uBAAuB,SAAmC;AACzE,MAAI,uBAAuB,OAAO,GAAG;AACpC,WAAO;AAAA,EACR;AAEA,SAAO;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,WAAW;AAAA,EACZ;AACD;AAEA,SAAS,uBAAuB,KAAsC;AACrE,SAAO,QAAQ,QACX,OAAO,QAAQ,YACf,UAAU,OAAO,OAAQ,IAAgC,SAAS;AACvE;AAKO,gBAAS,uBAAuB,gBAAwC;AAC9E,QAAM,SAAS;AACf,SAAO;AAAA,IACN,GAAG;AAAA,IACH,iBAAiB,sBAAsB,OAAO,eAAe;AAAA,IAC7D,kBAAkB,EAAE,QAAQ,uBAAuB,OAAO,gBAAgB,EAAE;AAAA,IAC5E,YAAY,OAAO,cAAc;AAAA,IACjC,SAAS,OAAO,WAAW;AAAA,MAC1B,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,WAAW;AAAA,IACZ;AAAA,EACD;AACD;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"250404709a064cf12a3ee1f214c199f9811bf56d"},"/Users/noot/Documents/communique/src/lib/utils/templateResolver.ts":{"path":"/Users/noot/Documents/communique/src/lib/utils/templateResolver.ts","statementMap":{"0":{"start":{"line":3,"column":22},"end":{"line":3,"column":69}},"1":{"start":{"line":4,"column":24},"end":{"line":4,"column":58}},"2":{"start":{"line":5,"column":21},"end":{"line":5,"column":32}},"3":{"start":{"line":6,"column":2},"end":{"line":48,"column":3}},"4":{"start":{"line":7,"column":21},"end":{"line":7,"column":47}},"5":{"start":{"line":8,"column":24},"end":{"line":8,"column":46}},"6":{"start":{"line":9,"column":25},"end":{"line":18,"column":5}},"7":{"start":{"line":19,"column":4},"end":{"line":41,"column":5}},"8":{"start":{"line":20,"column":25},"end":{"line":20,"column":107}},"9":{"start":{"line":20,"column":58},"end":{"line":20,"column":79}},"10":{"start":{"line":21,"column":6},"end":{"line":25,"column":7}},"11":{"start":{"line":22,"column":8},"end":{"line":22,"column":64}},"12":{"start":{"line":23,"column":8},"end":{"line":23,"column":53}},"13":{"start":{"line":24,"column":8},"end":{"line":24,"column":69}},"14":{"start":{"line":26,"column":23},"end":{"line":26,"column":81}},"15":{"start":{"line":26,"column":58},"end":{"line":26,"column":80}},"16":{"start":{"line":27,"column":6},"end":{"line":30,"column":7}},"17":{"start":{"line":28,"column":8},"end":{"line":28,"column":58}},"18":{"start":{"line":29,"column":8},"end":{"line":29,"column":63}},"19":{"start":{"line":31,"column":6},"end":{"line":34,"column":7}},"20":{"start":{"line":32,"column":8},"end":{"line":32,"column":70}},"21":{"start":{"line":33,"column":8},"end":{"line":33,"column":70}},"22":{"start":{"line":36,"column":6},"end":{"line":36,"column":68}},"23":{"start":{"line":37,"column":6},"end":{"line":37,"column":57}},"24":{"start":{"line":38,"column":6},"end":{"line":38,"column":63}},"25":{"start":{"line":39,"column":6},"end":{"line":39,"column":54}},"26":{"start":{"line":40,"column":6},"end":{"line":40,"column":49}},"27":{"start":{"line":42,"column":4},"end":{"line":45,"column":7}},"28":{"start":{"line":43,"column":6},"end":{"line":43,"column":98}},"29":{"start":{"line":44,"column":6},"end":{"line":44,"column":92}},"30":{"start":{"line":47,"column":4},"end":{"line":47,"column":178}},"31":{"start":{"line":49,"column":26},"end":{"line":49,"column":60}},"32":{"start":{"line":50,"column":21},"end":{"line":50,"column":70}},"33":{"start":{"line":52,"column":2},"end":{"line":54,"column":3}},"34":{"start":{"line":53,"column":4},"end":{"line":53,"column":71}},"35":{"start":{"line":55,"column":2},"end":{"line":61,"column":4}},"36":{"start":{"line":64,"column":16},"end":{"line":69,"column":19}},"37":{"start":{"line":70,"column":2},"end":{"line":70,"column":64}},"38":{"start":{"line":73,"column":2},"end":{"line":73,"column":55}}},"fnMap":{"0":{"name":"resolveTemplate","decl":{"start":{"line":2,"column":16},"end":{"line":2,"column":31}},"loc":{"start":{"line":2,"column":48},"end":{"line":62,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":51},"end":{"line":20,"column":52}},"loc":{"start":{"line":20,"column":58},"end":{"line":20,"column":79}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":51},"end":{"line":26,"column":52}},"loc":{"start":{"line":26,"column":58},"end":{"line":26,"column":80}},"line":26},"3":{"name":"(anonymous_3)","decl":{"start":{"line":42,"column":41},"end":{"line":42,"column":42}},"loc":{"start":{"line":42,"column":67},"end":{"line":45,"column":5}},"line":42},"4":{"name":"buildUserAddress","decl":{"start":{"line":63,"column":9},"end":{"line":63,"column":25}},"loc":{"start":{"line":63,"column":32},"end":{"line":71,"column":1}},"line":63},"5":{"name":"escapeRegex","decl":{"start":{"line":72,"column":9},"end":{"line":72,"column":20}},"loc":{"start":{"line":72,"column":29},"end":{"line":74,"column":1}},"line":72}},"branchMap":{"0":{"loc":{"start":{"line":3,"column":22},"end":{"line":3,"column":69}},"type":"binary-expr","locations":[{"start":{"line":3,"column":22},"end":{"line":3,"column":43}},{"start":{"line":3,"column":47},"end":{"line":3,"column":63}},{"start":{"line":3,"column":67},"end":{"line":3,"column":69}}],"line":3},"1":{"loc":{"start":{"line":4,"column":24},"end":{"line":4,"column":58}},"type":"binary-expr","locations":[{"start":{"line":4,"column":24},"end":{"line":4,"column":40}},{"start":{"line":4,"column":44},"end":{"line":4,"column":58}}],"line":4},"2":{"loc":{"start":{"line":6,"column":2},"end":{"line":48,"column":3}},"type":"if","locations":[{"start":{"line":6,"column":2},"end":{"line":48,"column":3}},{"start":{"line":46,"column":9},"end":{"line":48,"column":3}}],"line":6},"3":{"loc":{"start":{"line":7,"column":21},"end":{"line":7,"column":47}},"type":"binary-expr","locations":[{"start":{"line":7,"column":21},"end":{"line":7,"column":30}},{"start":{"line":7,"column":34},"end":{"line":7,"column":47}}],"line":7},"4":{"loc":{"start":{"line":14,"column":16},"end":{"line":14,"column":31}},"type":"binary-expr","locations":[{"start":{"line":14,"column":16},"end":{"line":14,"column":25}},{"start":{"line":14,"column":29},"end":{"line":14,"column":31}}],"line":14},"5":{"loc":{"start":{"line":15,"column":17},"end":{"line":15,"column":33}},"type":"binary-expr","locations":[{"start":{"line":15,"column":17},"end":{"line":15,"column":27}},{"start":{"line":15,"column":31},"end":{"line":15,"column":33}}],"line":15},"6":{"loc":{"start":{"line":16,"column":15},"end":{"line":16,"column":29}},"type":"binary-expr","locations":[{"start":{"line":16,"column":15},"end":{"line":16,"column":23}},{"start":{"line":16,"column":27},"end":{"line":16,"column":29}}],"line":16},"7":{"loc":{"start":{"line":17,"column":20},"end":{"line":17,"column":34}},"type":"binary-expr","locations":[{"start":{"line":17,"column":20},"end":{"line":17,"column":28}},{"start":{"line":17,"column":32},"end":{"line":17,"column":34}}],"line":17},"8":{"loc":{"start":{"line":19,"column":4},"end":{"line":41,"column":5}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":41,"column":5}},{"start":{"line":35,"column":11},"end":{"line":41,"column":5}}],"line":19},"9":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":63}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":28}},{"start":{"line":19,"column":32},"end":{"line":19,"column":63}}],"line":19},"10":{"loc":{"start":{"line":20,"column":25},"end":{"line":20,"column":107}},"type":"binary-expr","locations":[{"start":{"line":20,"column":25},"end":{"line":20,"column":80}},{"start":{"line":20,"column":84},"end":{"line":20,"column":107}}],"line":20},"11":{"loc":{"start":{"line":21,"column":6},"end":{"line":25,"column":7}},"type":"if","locations":[{"start":{"line":21,"column":6},"end":{"line":25,"column":7}},{"start":{},"end":{}}],"line":21},"12":{"loc":{"start":{"line":27,"column":6},"end":{"line":30,"column":7}},"type":"if","locations":[{"start":{"line":27,"column":6},"end":{"line":30,"column":7}},{"start":{},"end":{}}],"line":27},"13":{"loc":{"start":{"line":31,"column":6},"end":{"line":34,"column":7}},"type":"if","locations":[{"start":{"line":31,"column":6},"end":{"line":34,"column":7}},{"start":{},"end":{}}],"line":31},"14":{"loc":{"start":{"line":52,"column":2},"end":{"line":54,"column":3}},"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":54,"column":3}},{"start":{},"end":{}}],"line":52},"15":{"loc":{"start":{"line":52,"column":6},"end":{"line":52,"column":29}},"type":"binary-expr","locations":[{"start":{"line":52,"column":6},"end":{"line":52,"column":21}},{"start":{"line":52,"column":25},"end":{"line":52,"column":29}}],"line":52},"16":{"loc":{"start":{"line":70,"column":9},"end":{"line":70,"column":63}},"type":"cond-expr","locations":[{"start":{"line":70,"column":28},"end":{"line":70,"column":44}},{"start":{"line":70,"column":47},"end":{"line":70,"column":63}}],"line":70}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},"b":{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/noot/Documents/communique/src/lib/utils/templateResolver.ts"],"sourcesContent":["/**\n * Template Resolution Engine - The Bleeding Edge of MVC Transcendence\n * \n * This is where Svelte 5's reactive paradigm transcends traditional MVC:\n * - Model: Reactive $state with direct database integration via Prisma\n * - View: Real-time template interpolation with user context\n * - Controller: Pure functional transforms with zero ceremony\n * \n * We're operating at the intersection of:\n * 1. Congressional API integration (CWC)\n * 2. Real-time user context resolution \n * 3. Zero-copy template interpolation\n * 4. OS-level mailto bridging\n */\n\nimport type { Template } from '$lib/types/template';\nimport { extractRecipientEmails } from '$lib/types/templateConfig';\n\ninterface User {\n\tid: string;\n\tname?: string | null;\n\temail: string;\n\tstreet?: string | null;\n\tcity?: string | null;\n\tstate?: string | null;\n\tzip?: string | null;\n\trepresentatives?: Array<{\n\t\tname: string;\n\t\tparty: string;\n\t\tchamber: string;\n\t\tstate: string;\n\t\tdistrict: string;\n\t}>;\n}\n\ninterface ResolvedTemplate {\n\tsubject: string;\n\tbody: string;\n\trecipients: string[];\n\tisCongressional: boolean;\n\troutingEmail?: string;\n}\n\n/**\n * BLOCK VARIABLE RESOLUTION - The Core Engine\n * \n * This function represents the synthesis of:\n * - Reactive state management (Svelte 5 runes)\n * - Real-time context injection\n * - Congressional district resolution\n * - Template personalization at message-send time\n * \n * Unlike traditional MVC where the View is passive, here the View\n * is a living, breathing transformation of Model data that resolves\n * block variables with actual user context AT THE MOMENT OF INTERACTION.\n */\nexport function resolveTemplate(template: Template, user: User | null): ResolvedTemplate {\n\t// Get the base message content - prefer message_body over preview\n\tconst baseMessage = template.message_body || template.preview || '';\n\t\n\t// Initialize resolution context\n\tlet resolvedSubject = template.subject || template.title;\n\tlet resolvedBody = baseMessage;\n\t\n\tif (user) {\n\t\t// User context resolution - real name, real address, real representatives\n\t\tconst userName = user.name || 'Constituent';\n\t\tconst userAddress = buildUserAddress(user);\n\t\t\n\t\t// Block variable resolution with actual data\n\t\tconst replacements: Record<string, string> = {\n\t\t\t'[Name]': userName,\n\t\t\t'[Your Name]': userName,\n\t\t\t'[Address]': userAddress,\n\t\t\t'[Your Address]': userAddress,\n\t\t\t'[City]': user.city || '',\n\t\t\t'[State]': user.state || '',\n\t\t\t'[ZIP]': user.zip || '',\n\t\t\t'[Zip Code]': user.zip || ''\n\t\t};\n\t\t\n\t\t// Congressional representative resolution\n\t\tif (user.representatives && user.representatives.length > 0) {\n\t\t\t// Primary representative (House member or first in list)\n\t\t\tconst primaryRep = user.representatives.find(r => r.chamber === 'house') || user.representatives[0];\n\t\t\tif (primaryRep) {\n\t\t\t\treplacements['[Representative Name]'] = primaryRep.name;\n\t\t\t\treplacements['[Rep Name]'] = primaryRep.name;\n\t\t\t\treplacements['[Representative]'] = `Rep. ${primaryRep.name}`;\n\t\t\t}\n\t\t\t\n\t\t\t// Senate representatives\n\t\t\tconst senators = user.representatives.filter(r => r.chamber === 'senate');\n\t\t\tif (senators.length > 0) {\n\t\t\t\treplacements['[Senator Name]'] = senators[0].name;\n\t\t\t\treplacements['[Senator]'] = `Sen. ${senators[0].name}`;\n\t\t\t}\n\t\t\tif (senators.length > 1) {\n\t\t\t\treplacements['[Senior Senator]'] = `Sen. ${senators[0].name}`;\n\t\t\t\treplacements['[Junior Senator]'] = `Sen. ${senators[1].name}`;\n\t\t\t}\n\t\t} else {\n\t\t\t// Fallback for users without representative data\n\t\t\treplacements['[Representative Name]'] = 'your Representative';\n\t\t\treplacements['[Rep Name]'] = 'your Representative';\n\t\t\treplacements['[Representative]'] = 'your Representative';\n\t\t\treplacements['[Senator Name]'] = 'your Senator';\n\t\t\treplacements['[Senator]'] = 'your Senator';\n\t\t}\n\t\t\n\t\t// Apply all replacements to subject and body\n\t\tObject.entries(replacements).forEach(([placeholder, value]) => {\n\t\t\tresolvedSubject = resolvedSubject.replace(new RegExp(escapeRegex(placeholder), 'g'), value);\n\t\t\tresolvedBody = resolvedBody.replace(new RegExp(escapeRegex(placeholder), 'g'), value);\n\t\t});\n\t} else {\n\t\t// Non-authenticated user - preserve placeholders but make them instructional\n\t\tresolvedBody = resolvedBody\n\t\t\t.replace(/\\[Name\\]/g, '[Your Name]')\n\t\t\t.replace(/\\[Address\\]/g, '[Your Address]')\n\t\t\t.replace(/\\[Representative Name\\]/g, '[Your Representative\\'s Name]');\n\t}\n\t\n\t// Determine delivery method and routing\n\tconst isCongressional = template.deliveryMethod === 'both';\n\tconst recipients = extractRecipientEmails(template.recipient_config);\n\t\n\tlet routingEmail: string | undefined;\n\tif (isCongressional && user) {\n\t\t// Congressional routing via CWC API\n\t\troutingEmail = `congress+${template.id}-${user.id}@communique.org`;\n\t}\n\t\n\treturn {\n\t\tsubject: resolvedSubject,\n\t\tbody: resolvedBody,\n\t\trecipients,\n\t\tisCongressional,\n\t\troutingEmail\n\t};\n}\n\n/**\n * Build complete user address string\n */\nfunction buildUserAddress(user: User): string {\n\tconst parts = [\n\t\tuser.street,\n\t\tuser.city,\n\t\tuser.state,\n\t\tuser.zip\n\t].filter(Boolean);\n\t\n\treturn parts.length > 0 ? parts.join(', ') : '[Your Address]';\n}\n\n/**\n * Escape string for use in regex\n */\nfunction escapeRegex(string: string): string {\n\treturn string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\n/**\n * INTERACTION DESIGN PARADIGM SHIFT\n * \n * This resolver represents a fundamental shift from traditional web patterns:\n * \n * TRADITIONAL MVC:\n * - Model: Static data stored in database\n * - View: Template rendered once with placeholders\n * - Controller: Routes requests between M and V\n * \n * SVELTE 5 + COMMUNIQUE PARADIGM:\n * - Reactive Model: $state that updates in real-time\n * - Living View: Template resolution happens at interaction moment\n * - Functional Controller: Pure transforms with zero ceremony\n * - OS Integration: Direct mailto bridging with resolved content\n * \n * The user clicks \"Contact Congress\" and in <100ms:\n * 1. Template resolver runs with current user context\n * 2. Block variables resolve to real names, addresses, representatives\n * 3. Congressional routing email generated with user+template ID\n * 4. OS mailto launches with fully personalized message\n * 5. Loading modal bridges the perceptual gap\n * \n * This is interaction design at the speed of thought - no page loads,\n * no form submissions, no server round trips. Just pure reactive\n * transformation from intent to action.\n */"],"mappings":"AAgBA,SAAS,8BAA8B;AAwChC,gBAAS,gBAAgB,UAAoB,MAAqC;AAExF,QAAM,cAAc,SAAS,gBAAgB,SAAS,WAAW;AAGjE,MAAI,kBAAkB,SAAS,WAAW,SAAS;AACnD,MAAI,eAAe;AAEnB,MAAI,MAAM;AAET,UAAM,WAAW,KAAK,QAAQ;AAC9B,UAAM,cAAc,iBAAiB,IAAI;AAGzC,UAAM,eAAuC;AAAA,MAC5C,UAAU;AAAA,MACV,eAAe;AAAA,MACf,aAAa;AAAA,MACb,kBAAkB;AAAA,MAClB,UAAU,KAAK,QAAQ;AAAA,MACvB,WAAW,KAAK,SAAS;AAAA,MACzB,SAAS,KAAK,OAAO;AAAA,MACrB,cAAc,KAAK,OAAO;AAAA,IAC3B;AAGA,QAAI,KAAK,mBAAmB,KAAK,gBAAgB,SAAS,GAAG;AAE5D,YAAM,aAAa,KAAK,gBAAgB,KAAK,OAAK,EAAE,YAAY,OAAO,KAAK,KAAK,gBAAgB,CAAC;AAClG,UAAI,YAAY;AACf,qBAAa,uBAAuB,IAAI,WAAW;AACnD,qBAAa,YAAY,IAAI,WAAW;AACxC,qBAAa,kBAAkB,IAAI,QAAQ,WAAW,IAAI;AAAA,MAC3D;AAGA,YAAM,WAAW,KAAK,gBAAgB,OAAO,OAAK,EAAE,YAAY,QAAQ;AACxE,UAAI,SAAS,SAAS,GAAG;AACxB,qBAAa,gBAAgB,IAAI,SAAS,CAAC,EAAE;AAC7C,qBAAa,WAAW,IAAI,QAAQ,SAAS,CAAC,EAAE,IAAI;AAAA,MACrD;AACA,UAAI,SAAS,SAAS,GAAG;AACxB,qBAAa,kBAAkB,IAAI,QAAQ,SAAS,CAAC,EAAE,IAAI;AAC3D,qBAAa,kBAAkB,IAAI,QAAQ,SAAS,CAAC,EAAE,IAAI;AAAA,MAC5D;AAAA,IACD,OAAO;AAEN,mBAAa,uBAAuB,IAAI;AACxC,mBAAa,YAAY,IAAI;AAC7B,mBAAa,kBAAkB,IAAI;AACnC,mBAAa,gBAAgB,IAAI;AACjC,mBAAa,WAAW,IAAI;AAAA,IAC7B;AAGA,WAAO,QAAQ,YAAY,EAAE,QAAQ,CAAC,CAAC,aAAa,KAAK,MAAM;AAC9D,wBAAkB,gBAAgB,QAAQ,IAAI,OAAO,YAAY,WAAW,GAAG,GAAG,GAAG,KAAK;AAC1F,qBAAe,aAAa,QAAQ,IAAI,OAAO,YAAY,WAAW,GAAG,GAAG,GAAG,KAAK;AAAA,IACrF,CAAC;AAAA,EACF,OAAO;AAEN,mBAAe,aACb,QAAQ,aAAa,aAAa,EAClC,QAAQ,gBAAgB,gBAAgB,EACxC,QAAQ,4BAA4B,8BAA+B;AAAA,EACtE;AAGA,QAAM,kBAAkB,SAAS,mBAAmB;AACpD,QAAM,aAAa,uBAAuB,SAAS,gBAAgB;AAEnE,MAAI;AACJ,MAAI,mBAAmB,MAAM;AAE5B,mBAAe,YAAY,SAAS,EAAE,IAAI,KAAK,EAAE;AAAA,EAClD;AAEA,SAAO;AAAA,IACN,SAAS;AAAA,IACT,MAAM;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,EACD;AACD;AAKA,SAAS,iBAAiB,MAAoB;AAC7C,QAAM,QAAQ;AAAA,IACb,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,EACN,EAAE,OAAO,OAAO;AAEhB,SAAO,MAAM,SAAS,IAAI,MAAM,KAAK,IAAI,IAAI;AAC9C;AAKA,SAAS,YAAY,QAAwB;AAC5C,SAAO,OAAO,QAAQ,uBAAuB,MAAM;AACpD;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7422da5a444411c3c0a0ac42b4efd6a0ec8a434f"}}