{"/Users/noot/Documents/communique/src/lib/services/emailService.ts":{"path":"/Users/noot/Documents/communique/src/lib/services/emailService.ts","statementMap":{"0":{"start":{"line":3,"column":2},"end":{"line":8,"column":3}},"1":{"start":{"line":4,"column":4},"end":{"line":7,"column":6}},"2":{"start":{"line":9,"column":26},"end":{"line":9,"column":60}},"3":{"start":{"line":10,"column":29},"end":{"line":10,"column":79}},"4":{"start":{"line":11,"column":2},"end":{"line":17,"column":3}},"5":{"start":{"line":12,"column":4},"end":{"line":16,"column":6}},"6":{"start":{"line":18,"column":20},"end":{"line":18,"column":53}},"7":{"start":{"line":19,"column":2},"end":{"line":24,"column":4}},"8":{"start":{"line":27,"column":18},"end":{"line":27,"column":52}},"9":{"start":{"line":28,"column":15},"end":{"line":28,"column":86}},"10":{"start":{"line":29,"column":2},"end":{"line":35,"column":3}},"11":{"start":{"line":30,"column":25},"end":{"line":30,"column":87}},"12":{"start":{"line":31,"column":4},"end":{"line":31,"column":68}},"13":{"start":{"line":33,"column":23},"end":{"line":33,"column":82}},"14":{"start":{"line":34,"column":4},"end":{"line":34,"column":66}},"15":{"start":{"line":38,"column":2},"end":{"line":38,"column":29}},"16":{"start":{"line":38,"column":13},"end":{"line":38,"column":29}},"17":{"start":{"line":39,"column":19},"end":{"line":39,"column":27}},"18":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"19":{"start":{"line":41,"column":4},"end":{"line":41,"column":60}},"20":{"start":{"line":43,"column":2},"end":{"line":49,"column":3}},"21":{"start":{"line":44,"column":24},"end":{"line":44,"column":81}},"22":{"start":{"line":45,"column":4},"end":{"line":45,"column":65}},"23":{"start":{"line":47,"column":4},"end":{"line":47,"column":75}},"24":{"start":{"line":48,"column":4},"end":{"line":48,"column":56}},"25":{"start":{"line":50,"column":2},"end":{"line":50,"column":85}},"26":{"start":{"line":51,"column":2},"end":{"line":51,"column":80}},"27":{"start":{"line":52,"column":2},"end":{"line":52,"column":85}},"28":{"start":{"line":53,"column":2},"end":{"line":53,"column":66}},"29":{"start":{"line":54,"column":2},"end":{"line":54,"column":60}},"30":{"start":{"line":55,"column":2},"end":{"line":55,"column":20}},"31":{"start":{"line":58,"column":2},"end":{"line":58,"column":35}}},"fnMap":{"0":{"name":"analyzeEmailFlow","decl":{"start":{"line":2,"column":16},"end":{"line":2,"column":32}},"loc":{"start":{"line":2,"column":49},"end":{"line":25,"column":1}},"line":2},"1":{"name":"generateMailtoUrl","decl":{"start":{"line":26,"column":16},"end":{"line":26,"column":33}},"loc":{"start":{"line":26,"column":50},"end":{"line":36,"column":1}},"line":26},"2":{"name":"fillTemplateVariables","decl":{"start":{"line":37,"column":9},"end":{"line":37,"column":30}},"loc":{"start":{"line":37,"column":47},"end":{"line":56,"column":1}},"line":37},"3":{"name":"launchEmail","decl":{"start":{"line":57,"column":16},"end":{"line":57,"column":27}},"loc":{"start":{"line":57,"column":39},"end":{"line":59,"column":1}},"line":57}},"branchMap":{"0":{"loc":{"start":{"line":3,"column":2},"end":{"line":8,"column":3}},"type":"if","locations":[{"start":{"line":3,"column":2},"end":{"line":8,"column":3}},{"start":{},"end":{}}],"line":3},"1":{"loc":{"start":{"line":10,"column":29},"end":{"line":10,"column":79}},"type":"binary-expr","locations":[{"start":{"line":10,"column":29},"end":{"line":10,"column":40}},{"start":{"line":10,"column":44},"end":{"line":10,"column":53}},{"start":{"line":10,"column":57},"end":{"line":10,"column":67}},{"start":{"line":10,"column":71},"end":{"line":10,"column":79}}],"line":10},"2":{"loc":{"start":{"line":11,"column":2},"end":{"line":17,"column":3}},"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":17,"column":3}},{"start":{},"end":{}}],"line":11},"3":{"loc":{"start":{"line":11,"column":6},"end":{"line":11,"column":44}},"type":"binary-expr","locations":[{"start":{"line":11,"column":6},"end":{"line":11,"column":21}},{"start":{"line":11,"column":25},"end":{"line":11,"column":44}}],"line":11},"4":{"loc":{"start":{"line":28,"column":56},"end":{"line":28,"column":78}},"type":"binary-expr","locations":[{"start":{"line":28,"column":56},"end":{"line":28,"column":72}},{"start":{"line":28,"column":76},"end":{"line":28,"column":78}}],"line":28},"5":{"loc":{"start":{"line":29,"column":2},"end":{"line":35,"column":3}},"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":35,"column":3}},{"start":{"line":32,"column":9},"end":{"line":35,"column":3}}],"line":29},"6":{"loc":{"start":{"line":30,"column":52},"end":{"line":30,"column":70}},"type":"binary-expr","locations":[{"start":{"line":30,"column":52},"end":{"line":30,"column":60}},{"start":{"line":30,"column":64},"end":{"line":30,"column":70}}],"line":30},"7":{"loc":{"start":{"line":38,"column":2},"end":{"line":38,"column":29}},"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":29}},{"start":{},"end":{}}],"line":38},"8":{"loc":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},{"start":{},"end":{}}],"line":40},"9":{"loc":{"start":{"line":43,"column":2},"end":{"line":49,"column":3}},"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":49,"column":3}},{"start":{"line":46,"column":9},"end":{"line":49,"column":3}}],"line":43},"10":{"loc":{"start":{"line":43,"column":6},"end":{"line":43,"column":56}},"type":"binary-expr","locations":[{"start":{"line":43,"column":6},"end":{"line":43,"column":17}},{"start":{"line":43,"column":21},"end":{"line":43,"column":30}},{"start":{"line":43,"column":34},"end":{"line":43,"column":44}},{"start":{"line":43,"column":48},"end":{"line":43,"column":56}}],"line":43}},"s":{"0":11,"1":1,"2":10,"3":10,"4":10,"5":7,"6":3,"7":3,"8":22,"9":22,"10":22,"11":3,"12":3,"13":19,"14":17,"15":22,"16":1,"17":21,"18":21,"19":20,"20":21,"21":19,"22":19,"23":2,"24":2,"25":21,"26":21,"27":21,"28":21,"29":21,"30":21,"31":2},"f":{"0":11,"1":22,"2":22,"3":2},"b":{"0":[1,10],"1":[10,5,4,3],"2":[7,3],"3":[10,8],"4":[22,2],"5":[3,19],"6":[3,1],"7":[1,21],"8":[20,1],"9":[19,2],"10":[21,19,19,19]},"inputSourceMap":{"version":3,"sources":["/Users/noot/Documents/communique/src/lib/services/emailService.ts"],"sourcesContent":["/**\n * UNIFIED EMAIL SERVICE\n * \n * Single source of truth for all mailto generation and auth flow.\n * Eliminates redundant logic across 4+ components.\n */\n\nimport type { Template } from '$lib/types/template';\nimport { extractRecipientEmails } from '$lib/types/templateConfig';\n\nexport interface User {\n\tid: string;\n\tname?: string | null;\n\tstreet?: string | null;\n\tcity?: string | null;\n\tstate?: string | null;\n\tzip?: string | null;\n}\n\nexport interface EmailFlowResult {\n\trequiresAuth: boolean;\n\trequiresAddress?: boolean;\n\tmailtoUrl?: string;\n\tnextAction: 'auth' | 'address' | 'email';\n}\n\nexport function analyzeEmailFlow(template: Template, user: User | null): EmailFlowResult {\n\t// No user = auth required\n\tif (!user) {\n\t\treturn {\n\t\t\trequiresAuth: true,\n\t\t\tnextAction: 'auth'\n\t\t};\n\t}\n\n\tconst isCongressional = template.deliveryMethod === 'both';\n\tconst hasCompleteAddress = user.street && user.city && user.state && user.zip;\n\n\t// Congressional template without address = address required\n\tif (isCongressional && !hasCompleteAddress) {\n\t\treturn {\n\t\t\trequiresAuth: false,\n\t\t\trequiresAddress: true,\n\t\t\tnextAction: 'address'\n\t\t};\n\t}\n\n\t// Ready to send email\n\tconst mailtoUrl = generateMailtoUrl(template, user);\n\treturn {\n\t\trequiresAuth: false,\n\t\trequiresAddress: false,\n\t\tmailtoUrl,\n\t\tnextAction: 'email'\n\t};\n}\n\nexport function generateMailtoUrl(template: Template, user: User | null): string {\n\tconst subject = encodeURIComponent(template.title);\n\tconst body = encodeURIComponent(fillTemplateVariables(template.preview || '', user));\n\n\tif (template.deliveryMethod === 'both') {\n\t\t// Congressional routing\n\t\tconst routingEmail = `congress+${template.id}-${user?.id || 'anon'}@communique.org`;\n\t\treturn `mailto:${routingEmail}?subject=${subject}&body=${body}`;\n\t} else {\n\t\t// Direct email\n\t\tconst recipients = extractRecipientEmails(template.recipient_config).join(',');\n\t\treturn `mailto:${recipients}?subject=${subject}&body=${body}`;\n\t}\n}\n\nfunction fillTemplateVariables(bodyText: string, user: User | null): string {\n\tif (!user) return bodyText;\n\n\tlet filledBody = bodyText;\n\n\t// Replace [Name] with user's name\n\tif (user.name) {\n\t\tfilledBody = filledBody.replace(/\\[Name\\]/g, user.name);\n\t}\n\n\t// Replace [Address] with user's address if available\n\tif (user.street && user.city && user.state && user.zip) {\n\t\tconst userAddress = `${user.street}, ${user.city}, ${user.state} ${user.zip}`;\n\t\tfilledBody = filledBody.replace(/\\[Address\\]/g, userAddress);\n\t} else {\n\t\t// Remove lines that contain only [Address]\n\t\tfilledBody = filledBody.replace(/^[ \\t]*\\[Address\\][ \\t]*\\r?\\n/gm, '');\n\t\t// Remove remaining inline [Address]\n\t\tfilledBody = filledBody.replace(/\\[Address\\]/g, '');\n\t}\n\n\t// For congressional templates, [Representative Name] gets filled server-side\n\tfilledBody = filledBody.replace(/^[ \\t]*\\[Representative Name\\][ \\t]*\\r?\\n/gm, '');\n\tfilledBody = filledBody.replace(/\\[Representative Name\\]/g, 'Representative');\n\n\t// Remove empty [Personal Connection] blocks and lines\n\tfilledBody = filledBody.replace(/^[ \\t]*\\[Personal Connection\\][ \\t]*\\r?\\n/gm, '');\n\tfilledBody = filledBody.replace(/\\[Personal Connection\\]/g, '');\n\n\t// Clean up any extra newlines\n\tfilledBody = filledBody.replace(/\\n{3,}/g, '\\n\\n').trim();\n\n\treturn filledBody;\n}\n\nexport function launchEmail(mailtoUrl: string): void {\n\twindow.location.href = mailtoUrl;\n}"],"mappings":"AAQA,SAAS,8BAA8B;AAkBhC,gBAAS,iBAAiB,UAAoB,MAAoC;AAExF,MAAI,CAAC,MAAM;AACV,WAAO;AAAA,MACN,cAAc;AAAA,MACd,YAAY;AAAA,IACb;AAAA,EACD;AAEA,QAAM,kBAAkB,SAAS,mBAAmB;AACpD,QAAM,qBAAqB,KAAK,UAAU,KAAK,QAAQ,KAAK,SAAS,KAAK;AAG1E,MAAI,mBAAmB,CAAC,oBAAoB;AAC3C,WAAO;AAAA,MACN,cAAc;AAAA,MACd,iBAAiB;AAAA,MACjB,YAAY;AAAA,IACb;AAAA,EACD;AAGA,QAAM,YAAY,kBAAkB,UAAU,IAAI;AAClD,SAAO;AAAA,IACN,cAAc;AAAA,IACd,iBAAiB;AAAA,IACjB;AAAA,IACA,YAAY;AAAA,EACb;AACD;AAEO,gBAAS,kBAAkB,UAAoB,MAA2B;AAChF,QAAM,UAAU,mBAAmB,SAAS,KAAK;AACjD,QAAM,OAAO,mBAAmB,sBAAsB,SAAS,WAAW,IAAI,IAAI,CAAC;AAEnF,MAAI,SAAS,mBAAmB,QAAQ;AAEvC,UAAM,eAAe,YAAY,SAAS,EAAE,IAAI,MAAM,MAAM,MAAM;AAClE,WAAO,UAAU,YAAY,YAAY,OAAO,SAAS,IAAI;AAAA,EAC9D,OAAO;AAEN,UAAM,aAAa,uBAAuB,SAAS,gBAAgB,EAAE,KAAK,GAAG;AAC7E,WAAO,UAAU,UAAU,YAAY,OAAO,SAAS,IAAI;AAAA,EAC5D;AACD;AAEA,SAAS,sBAAsB,UAAkB,MAA2B;AAC3E,MAAI,CAAC,KAAM,QAAO;AAElB,MAAI,aAAa;AAGjB,MAAI,KAAK,MAAM;AACd,iBAAa,WAAW,QAAQ,aAAa,KAAK,IAAI;AAAA,EACvD;AAGA,MAAI,KAAK,UAAU,KAAK,QAAQ,KAAK,SAAS,KAAK,KAAK;AACvD,UAAM,cAAc,GAAG,KAAK,MAAM,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,GAAG;AAC3E,iBAAa,WAAW,QAAQ,gBAAgB,WAAW;AAAA,EAC5D,OAAO;AAEN,iBAAa,WAAW,QAAQ,mCAAmC,EAAE;AAErE,iBAAa,WAAW,QAAQ,gBAAgB,EAAE;AAAA,EACnD;AAGA,eAAa,WAAW,QAAQ,+CAA+C,EAAE;AACjF,eAAa,WAAW,QAAQ,4BAA4B,gBAAgB;AAG5E,eAAa,WAAW,QAAQ,+CAA+C,EAAE;AACjF,eAAa,WAAW,QAAQ,4BAA4B,EAAE;AAG9D,eAAa,WAAW,QAAQ,WAAW,MAAM,EAAE,KAAK;AAExD,SAAO;AACR;AAEO,gBAAS,YAAY,WAAyB;AACpD,SAAO,SAAS,OAAO;AACxB;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6fa0133cd1deced2c0a7a9a537521feda266cfda"}}