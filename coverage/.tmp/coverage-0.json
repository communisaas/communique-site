{"/Users/noot/Documents/communique/src/lib/core/legislative/index.ts":{"path":"/Users/noot/Documents/communique/src/lib/core/legislative/index.ts","statementMap":{},"fnMap":{},"branchMap":{},"s":{},"f":{},"b":{},"inputSourceMap":{"version":3,"sources":["/Users/noot/Documents/communique/src/lib/core/legislative/index.ts"],"sourcesContent":["// Main entry point for legislative abstraction layer\nexport * from './models';\nexport * from './adapters/base';\nexport * from './adapters/registry';\nexport * from './delivery/pipeline';\nexport * from './resolution/variables';\n\n// Convenience exports\nexport { USCongressAdapter } from './adapters/us-congress';\nexport { adapterRegistry } from './adapters/registry';\nexport { deliveryPipeline } from './delivery/pipeline';\nexport { variableResolver } from './resolution/variables';"],"mappings":"AACA,cAAc;AACd,cAAc;AACd,cAAc;AACd,cAAc;AACd,cAAc;AAGd,SAAS,yBAAyB;AAClC,SAAS,uBAAuB;AAChC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d81b08fbd72af20fa4963aa4300f9ec900924ec8"},"/Users/noot/Documents/communique/src/lib/core/legislative/models/index.ts":{"path":"/Users/noot/Documents/communique/src/lib/core/legislative/models/index.ts","statementMap":{},"fnMap":{},"branchMap":{},"s":{},"f":{},"b":{},"inputSourceMap":{"version":3,"sources":[],"sourcesContent":[],"mappings":"","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"37eed7db69d2aca9fb10058a916539a01fc19870"},"/Users/noot/Documents/communique/src/lib/core/legislative/adapters/base.ts":{"path":"/Users/noot/Documents/communique/src/lib/core/legislative/adapters/base.ts","statementMap":{},"fnMap":{},"branchMap":{},"s":{},"f":{},"b":{},"inputSourceMap":{"version":3,"sources":["/Users/noot/Documents/communique/src/lib/core/legislative/adapters/base.ts"],"sourcesContent":["import type { \n    Jurisdiction, \n    Office, \n    Representative, \n    LegislativeSystem, \n    DeliveryCapability \n} from '../models';\n\n// Re-export types for adapters\nexport type { \n    Jurisdiction, \n    Office, \n    Representative, \n    LegislativeSystem, \n    DeliveryCapability \n};\n\nexport interface Address {\n    street?: string;\n    city?: string;\n    state?: string;\n    postal_code?: string;\n    country_code: string;\n}\n\nexport interface User {\n    id: string;\n    name?: string;\n    email: string;\n    address?: Address;\n}\n\nexport interface Template {\n    id: string;\n    subject: string;\n    message_body: string;\n    variables?: Record<string, unknown>;\n}\n\nexport interface DeliveryRequest {\n    template: Template;\n    user: User;\n    representative: Representative;\n    office: Office;\n    personalized_message: string;\n}\n\nexport interface DeliveryResult {\n    success: boolean;\n    message_id?: string;\n    error?: string;\n    metadata?: Record<string, unknown>;\n}\n\nexport abstract class LegislativeAdapter {\n    abstract readonly country_code: string;\n    abstract readonly name: string;\n    abstract readonly supported_methods: string[];\n\n    abstract getSystemInfo(): Promise<LegislativeSystem>;\n    abstract getCapabilities(): Promise<DeliveryCapability>;\n    \n    abstract lookupRepresentativesByAddress(address: Address): Promise<Representative[]>;\n    abstract validateRepresentative(representative: Representative): Promise<boolean>;\n    \n    abstract deliverMessage(request: DeliveryRequest): Promise<DeliveryResult>;\n    \n    abstract formatRepresentativeName(rep: Representative): string;\n    abstract formatOfficeTitle(office: Office): string;\n}"],"mappings":"AAsDO,aAAe,mBAAmB;AAezC;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e774754f322c1bbabd6d106d99d66aa6268ecb8a"},"/Users/noot/Documents/communique/src/lib/core/legislative/adapters/us-congress.ts":{"path":"/Users/noot/Documents/communique/src/lib/core/legislative/adapters/us-congress.ts","statementMap":{"0":{"start":{"line":4,"column":4},"end":{"line":4,"column":12}},"1":{"start":{"line":5,"column":4},"end":{"line":5,"column":31}},"2":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"3":{"start":{"line":8,"column":9},"end":{"line":8,"column":33}},"4":{"start":{"line":9,"column":22},"end":{"line":9,"column":46}},"5":{"start":{"line":11,"column":4},"end":{"line":37,"column":6}},"6":{"start":{"line":40,"column":4},"end":{"line":49,"column":6}},"7":{"start":{"line":52,"column":4},"end":{"line":90,"column":5}},"8":{"start":{"line":53,"column":32},"end":{"line":53,"column":81}},"9":{"start":{"line":54,"column":28},"end":{"line":59,"column":7}},"10":{"start":{"line":60,"column":23},"end":{"line":60,"column":77}},"11":{"start":{"line":61,"column":6},"end":{"line":86,"column":8}},"12":{"start":{"line":74,"column":45},"end":{"line":85,"column":9}},"13":{"start":{"line":88,"column":6},"end":{"line":88,"column":62}},"14":{"start":{"line":89,"column":6},"end":{"line":89,"column":16}},"15":{"start":{"line":93,"column":4},"end":{"line":93,"column":50}},"16":{"start":{"line":93,"column":37},"end":{"line":93,"column":50}},"17":{"start":{"line":94,"column":4},"end":{"line":104,"column":5}},"18":{"start":{"line":95,"column":32},"end":{"line":95,"column":81}},"19":{"start":{"line":96,"column":23},"end":{"line":99,"column":7}},"20":{"start":{"line":100,"column":25},"end":{"line":100,"column":67}},"21":{"start":{"line":101,"column":6},"end":{"line":101,"column":30}},"22":{"start":{"line":103,"column":6},"end":{"line":103,"column":19}},"23":{"start":{"line":107,"column":4},"end":{"line":160,"column":5}},"24":{"start":{"line":108,"column":28},"end":{"line":108,"column":73}},"25":{"start":{"line":109,"column":34},"end":{"line":117,"column":7}},"26":{"start":{"line":118,"column":36},"end":{"line":124,"column":7}},"27":{"start":{"line":126,"column":6},"end":{"line":140,"column":7}},"28":{"start":{"line":127,"column":8},"end":{"line":132,"column":10}},"29":{"start":{"line":134,"column":8},"end":{"line":139,"column":10}},"30":{"start":{"line":141,"column":6},"end":{"line":150,"column":8}},"31":{"start":{"line":152,"column":6},"end":{"line":159,"column":8}},"32":{"start":{"line":163,"column":20},"end":{"line":163,"column":69}},"33":{"start":{"line":164,"column":4},"end":{"line":164,"column":36}},"34":{"start":{"line":167,"column":4},"end":{"line":174,"column":5}},"35":{"start":{"line":168,"column":23},"end":{"line":168,"column":49}},"36":{"start":{"line":169,"column":20},"end":{"line":169,"column":43}},"37":{"start":{"line":170,"column":6},"end":{"line":170,"column":60}},"38":{"start":{"line":171,"column":11},"end":{"line":174,"column":5}},"39":{"start":{"line":172,"column":20},"end":{"line":172,"column":46}},"40":{"start":{"line":173,"column":6},"end":{"line":173,"column":42}},"41":{"start":{"line":175,"column":4},"end":{"line":175,"column":24}},"42":{"start":{"line":178,"column":4},"end":{"line":178,"column":60}},"43":{"start":{"line":181,"column":4},"end":{"line":181,"column":54}},"44":{"start":{"line":181,"column":42},"end":{"line":181,"column":54}},"45":{"start":{"line":182,"column":4},"end":{"line":182,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":2},"end":{"line":3,"column":3}},"loc":{"start":{"line":3,"column":25},"end":{"line":6,"column":3}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":2},"end":{"line":10,"column":3}},"loc":{"start":{"line":10,"column":24},"end":{"line":38,"column":3}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":39,"column":2},"end":{"line":39,"column":3}},"loc":{"start":{"line":39,"column":26},"end":{"line":50,"column":3}},"line":39},"3":{"name":"(anonymous_3)","decl":{"start":{"line":51,"column":2},"end":{"line":51,"column":3}},"loc":{"start":{"line":51,"column":48},"end":{"line":91,"column":3}},"line":51},"4":{"name":"(anonymous_4)","decl":{"start":{"line":74,"column":31},"end":{"line":74,"column":32}},"loc":{"start":{"line":74,"column":45},"end":{"line":85,"column":9}},"line":74},"5":{"name":"(anonymous_5)","decl":{"start":{"line":92,"column":2},"end":{"line":92,"column":3}},"loc":{"start":{"line":92,"column":47},"end":{"line":105,"column":3}},"line":92},"6":{"name":"(anonymous_6)","decl":{"start":{"line":106,"column":2},"end":{"line":106,"column":3}},"loc":{"start":{"line":106,"column":32},"end":{"line":161,"column":3}},"line":106},"7":{"name":"(anonymous_7)","decl":{"start":{"line":162,"column":2},"end":{"line":162,"column":3}},"loc":{"start":{"line":162,"column":32},"end":{"line":165,"column":3}},"line":162},"8":{"name":"(anonymous_8)","decl":{"start":{"line":166,"column":2},"end":{"line":166,"column":3}},"loc":{"start":{"line":166,"column":28},"end":{"line":176,"column":3}},"line":166},"9":{"name":"(anonymous_9)","decl":{"start":{"line":177,"column":2},"end":{"line":177,"column":3}},"loc":{"start":{"line":177,"column":31},"end":{"line":179,"column":3}},"line":177},"10":{"name":"(anonymous_10)","decl":{"start":{"line":180,"column":2},"end":{"line":180,"column":3}},"loc":{"start":{"line":180,"column":37},"end":{"line":183,"column":3}},"line":180}},"branchMap":{"0":{"loc":{"start":{"line":46,"column":17},"end":{"line":46,"column":58}},"type":"cond-expr","locations":[{"start":{"line":46,"column":34},"end":{"line":46,"column":46}},{"start":{"line":46,"column":49},"end":{"line":46,"column":58}}],"line":46},"1":{"loc":{"start":{"line":55,"column":16},"end":{"line":55,"column":36}},"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":30}},{"start":{"line":55,"column":34},"end":{"line":55,"column":36}}],"line":55},"2":{"loc":{"start":{"line":56,"column":14},"end":{"line":56,"column":32}},"type":"binary-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":26}},{"start":{"line":56,"column":30},"end":{"line":56,"column":32}}],"line":56},"3":{"loc":{"start":{"line":57,"column":15},"end":{"line":57,"column":34}},"type":"binary-expr","locations":[{"start":{"line":57,"column":15},"end":{"line":57,"column":28}},{"start":{"line":57,"column":32},"end":{"line":57,"column":34}}],"line":57},"4":{"loc":{"start":{"line":58,"column":13},"end":{"line":58,"column":38}},"type":"binary-expr","locations":[{"start":{"line":58,"column":13},"end":{"line":58,"column":32}},{"start":{"line":58,"column":36},"end":{"line":58,"column":38}}],"line":58},"5":{"loc":{"start":{"line":93,"column":4},"end":{"line":93,"column":50}},"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":93,"column":50}},{"start":{},"end":{}}],"line":93},"6":{"loc":{"start":{"line":110,"column":20},"end":{"line":110,"column":60}},"type":"binary-expr","locations":[{"start":{"line":110,"column":20},"end":{"line":110,"column":54}},{"start":{"line":110,"column":58},"end":{"line":110,"column":60}}],"line":110},"7":{"loc":{"start":{"line":113,"column":20},"end":{"line":113,"column":78}},"type":"binary-expr","locations":[{"start":{"line":113,"column":20},"end":{"line":113,"column":72}},{"start":{"line":113,"column":76},"end":{"line":113,"column":78}}],"line":113},"8":{"loc":{"start":{"line":114,"column":15},"end":{"line":114,"column":48}},"type":"binary-expr","locations":[{"start":{"line":114,"column":15},"end":{"line":114,"column":42}},{"start":{"line":114,"column":46},"end":{"line":114,"column":48}}],"line":114},"9":{"loc":{"start":{"line":116,"column":15},"end":{"line":116,"column":56}},"type":"binary-expr","locations":[{"start":{"line":116,"column":15},"end":{"line":116,"column":43}},{"start":{"line":116,"column":47},"end":{"line":116,"column":56}}],"line":116},"10":{"loc":{"start":{"line":126,"column":6},"end":{"line":140,"column":7}},"type":"if","locations":[{"start":{"line":126,"column":6},"end":{"line":140,"column":7}},{"start":{"line":133,"column":13},"end":{"line":140,"column":7}}],"line":126},"11":{"loc":{"start":{"line":154,"column":15},"end":{"line":154,"column":79}},"type":"cond-expr","locations":[{"start":{"line":154,"column":40},"end":{"line":154,"column":53}},{"start":{"line":154,"column":56},"end":{"line":154,"column":79}}],"line":154},"12":{"loc":{"start":{"line":163,"column":20},"end":{"line":163,"column":69}},"type":"cond-expr","locations":[{"start":{"line":163,"column":54},"end":{"line":163,"column":60}},{"start":{"line":163,"column":63},"end":{"line":163,"column":69}}],"line":163},"13":{"loc":{"start":{"line":167,"column":4},"end":{"line":174,"column":5}},"type":"if","locations":[{"start":{"line":167,"column":4},"end":{"line":174,"column":5}},{"start":{"line":171,"column":11},"end":{"line":174,"column":5}}],"line":167},"14":{"loc":{"start":{"line":171,"column":11},"end":{"line":174,"column":5}},"type":"if","locations":[{"start":{"line":171,"column":11},"end":{"line":174,"column":5}},{"start":{},"end":{}}],"line":171},"15":{"loc":{"start":{"line":178,"column":11},"end":{"line":178,"column":59}},"type":"cond-expr","locations":[{"start":{"line":178,"column":41},"end":{"line":178,"column":48}},{"start":{"line":178,"column":51},"end":{"line":178,"column":59}}],"line":178},"16":{"loc":{"start":{"line":181,"column":4},"end":{"line":181,"column":54}},"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":54}},{"start":{},"end":{}}],"line":181},"17":{"loc":{"start":{"line":182,"column":11},"end":{"line":182,"column":49}},"type":"binary-expr","locations":[{"start":{"line":182,"column":11},"end":{"line":182,"column":41}},{"start":{"line":182,"column":45},"end":{"line":182,"column":49}}],"line":182}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":5,"8":5,"9":5,"10":5,"11":4,"12":8,"13":1,"14":1,"15":12,"16":0,"17":12,"18":12,"19":12,"20":12,"21":12,"22":0,"23":12,"24":12,"25":12,"26":12,"27":12,"28":8,"29":4,"30":10,"31":2,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":12,"43":12,"44":8,"45":4},"f":{"0":1,"1":0,"2":0,"3":5,"4":8,"5":12,"6":12,"7":0,"8":0,"9":12,"10":12},"b":{"0":[0,0],"1":[5,0],"2":[5,0],"3":[5,0],"4":[5,0],"5":[0,12],"6":[12,0],"7":[12,0],"8":[12,0],"9":[12,0],"10":[8,4],"11":[2,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[4,8],"16":[8,4],"17":[4,0]},"inputSourceMap":{"version":3,"sources":["/Users/noot/Documents/communique/src/lib/core/legislative/adapters/us-congress.ts"],"sourcesContent":["import { LegislativeAdapter } from './base';\nimport type { \n    Address, \n    DeliveryRequest, \n    DeliveryResult, \n    Representative, \n    LegislativeSystem, \n    DeliveryCapability,\n    Office\n} from './base';\nimport type { Jurisdiction, Chamber } from '../models';\n\nexport class USCongressAdapter extends LegislativeAdapter {\n    readonly country_code = 'US';\n    readonly name = 'United States Congress';\n    readonly supported_methods = ['email', 'form', 'api'];\n\n    constructor(private cwcApiKey: string) {\n        super();\n    }\n\n    async getSystemInfo(): Promise<LegislativeSystem> {\n        return {\n            country_code: 'US',\n            name: 'United States Congress',\n            type: 'congressional',\n            chambers: [\n                {\n                    id: 'us-house',\n                    jurisdiction_id: 'us-federal',\n                    name: 'House of Representatives',\n                    type: 'lower',\n                    seat_count: 435,\n                    term_length: 2,\n                    external_ids: { cwc: 'house' }\n                },\n                {\n                    id: 'us-senate',\n                    jurisdiction_id: 'us-federal',\n                    name: 'Senate',\n                    type: 'upper',\n                    seat_count: 100,\n                    term_length: 6,\n                    external_ids: { cwc: 'senate' }\n                }\n            ],\n            primary_language: 'en',\n            supported_languages: ['en', 'es']\n        };\n    }\n\n    async getCapabilities(): Promise<DeliveryCapability> {\n        return {\n            country_code: 'US',\n            methods: ['form', 'api'],\n            tier: 2,\n            provider: 'CWC',\n            config: {\n                api_key: this.cwcApiKey ? 'configured' : 'missing',\n                base_url: 'https://cwc.house.gov'\n            }\n        };\n    }\n\n    async lookupRepresentativesByAddress(address: Address): Promise<Representative[]> {\n        try {\n            // Use existing address lookup service\n            const { addressLookup } = await import('$lib/core/congress/address-lookup');\n            \n            const properAddress = {\n                street: address.street || '',\n                city: address.city || '',\n                state: address.state || '',\n                zip: address.postal_code || ''\n            };\n            \n            const userReps = await addressLookup.lookupRepsByAddress(properAddress);\n            \n            return [\n                {\n                    id: `us-house-${userReps.district.state}-${userReps.district.district}`,\n                    office_id: `us-house-${userReps.district.state}-${userReps.district.district}`,\n                    name: userReps.house.name,\n                    party: userReps.house.party,\n                    bioguide_id: userReps.house.bioguideId,\n                    external_ids: {\n                        cwc_office_code: userReps.house.officeCode,\n                        bioguide: userReps.house.bioguideId\n                    },\n                    is_current: true\n                },\n                ...userReps.senate.map(senator => ({\n                    id: `us-senate-${senator.bioguideId}`,\n                    office_id: `us-senate-${senator.state}`,\n                    name: senator.name,\n                    party: senator.party,\n                    bioguide_id: senator.bioguideId,\n                    external_ids: {\n                        cwc_office_code: senator.officeCode,\n                        bioguide: senator.bioguideId\n                    },\n                    is_current: true\n                }))\n            ];\n        } catch (error) {\n            console.error('US Congressional lookup failed:', error);\n            return [];\n        }\n    }\n\n    async validateRepresentative(representative: Representative): Promise<boolean> {\n        if (!representative.bioguide_id) return false;\n        \n        try {\n            const { addressLookup } = await import('$lib/core/congress/address-lookup');\n            const userReps = {\n                house: { bioguideId: representative.bioguide_id, name: representative.name },\n                senate: [{ bioguideId: representative.bioguide_id, name: representative.name }]\n            };\n            \n            const validation = await addressLookup.validateReps(userReps as any);\n            return validation.valid;\n        } catch {\n            return false;\n        }\n    }\n\n    async deliverMessage(request: DeliveryRequest): Promise<DeliveryResult> {\n        try {\n            const { cwcClient } = await import('$lib/core/congress/cwc-client');\n            \n            // Convert to CWC format\n            const congressionalOffice = {\n                bioguideId: request.representative.bioguide_id || '',\n                name: request.representative.name,\n                chamber: this.getChamberFromOffice(request.office),\n                officeCode: request.representative.external_ids?.cwc_office_code || '',\n                state: request.user.address?.state || '',\n                district: this.getDistrictFromRepresentative(request.representative),\n                party: request.representative.party || 'Unknown'\n            };\n\n            const templateForSubmission = {\n                id: request.template.id,\n                subject: request.template.subject,\n                message_body: request.personalized_message,\n                delivery_config: {},\n                cwc_config: {}\n            };\n\n            let submissionResult;\n            if (congressionalOffice.chamber === 'senate') {\n                submissionResult = await cwcClient.submitToSenate(\n                    templateForSubmission as any,\n                    request.user as any,\n                    congressionalOffice,\n                    request.personalized_message\n                );\n            } else {\n                submissionResult = await cwcClient.submitToHouse(\n                    templateForSubmission as any,\n                    request.user as any,\n                    congressionalOffice,\n                    request.personalized_message\n                );\n            }\n\n            return {\n                success: submissionResult.success,\n                message_id: submissionResult.messageId,\n                error: submissionResult.error,\n                metadata: {\n                    provider: 'CWC',\n                    chamber: congressionalOffice.chamber,\n                    representative: request.representative.name\n                }\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : 'CWC submission failed',\n                metadata: {\n                    provider: 'CWC',\n                    representative: request.representative.name\n                }\n            };\n        }\n    }\n\n    formatRepresentativeName(rep: Representative): string {\n        const chamber = rep.office_id.includes('house') ? 'Rep.' : 'Sen.';\n        return `${chamber} ${rep.name}`;\n    }\n\n    formatOfficeTitle(office: Office): string {\n        if (office.id.includes('house')) {\n            const district = office.id.split('-').pop();\n            const state = office.id.split('-')[2];\n            return `U.S. Representative for ${state}-${district}`;\n        } else if (office.id.includes('senate')) {\n            const state = office.id.split('-').pop();\n            return `U.S. Senator from ${state}`;\n        }\n        return office.title;\n    }\n\n    private getChamberFromOffice(office: Office): 'house' | 'senate' {\n        return office.id.includes('house') ? 'house' : 'senate';\n    }\n\n    private getDistrictFromRepresentative(rep: Representative): string {\n        if (rep.office_id.includes('senate')) return '00';\n        return rep.office_id.split('-').pop() || '01';\n    }\n}"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e75f90aded09e12b4e6383c242eb74ee89d528c6"},"/Users/noot/Documents/communique/src/lib/core/legislative/adapters/uk-parliament.ts":{"path":"/Users/noot/Documents/communique/src/lib/core/legislative/adapters/uk-parliament.ts","statementMap":{"0":{"start":{"line":3,"column":17},"end":{"line":3,"column":21}},"1":{"start":{"line":4,"column":9},"end":{"line":4,"column":36}},"2":{"start":{"line":5,"column":22},"end":{"line":5,"column":39}},"3":{"start":{"line":7,"column":4},"end":{"line":35,"column":6}},"4":{"start":{"line":38,"column":4},"end":{"line":46,"column":6}},"5":{"start":{"line":49,"column":4},"end":{"line":66,"column":5}},"6":{"start":{"line":50,"column":23},"end":{"line":50,"column":48}},"7":{"start":{"line":51,"column":6},"end":{"line":62,"column":8}},"8":{"start":{"line":64,"column":6},"end":{"line":64,"column":59}},"9":{"start":{"line":65,"column":6},"end":{"line":65,"column":16}},"10":{"start":{"line":69,"column":4},"end":{"line":69,"column":37}},"11":{"start":{"line":72,"column":4},"end":{"line":91,"column":5}},"12":{"start":{"line":73,"column":6},"end":{"line":81,"column":8}},"13":{"start":{"line":83,"column":6},"end":{"line":90,"column":8}},"14":{"start":{"line":94,"column":4},"end":{"line":94,"column":28}},"15":{"start":{"line":97,"column":4},"end":{"line":101,"column":5}},"16":{"start":{"line":98,"column":6},"end":{"line":98,"column":36}},"17":{"start":{"line":99,"column":11},"end":{"line":101,"column":5}},"18":{"start":{"line":100,"column":6},"end":{"line":100,"column":44}},"19":{"start":{"line":102,"column":4},"end":{"line":102,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":2},"end":{"line":6,"column":3}},"loc":{"start":{"line":6,"column":24},"end":{"line":36,"column":3}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":37,"column":2},"end":{"line":37,"column":3}},"loc":{"start":{"line":37,"column":26},"end":{"line":47,"column":3}},"line":37},"2":{"name":"(anonymous_2)","decl":{"start":{"line":48,"column":2},"end":{"line":48,"column":3}},"loc":{"start":{"line":48,"column":48},"end":{"line":67,"column":3}},"line":48},"3":{"name":"(anonymous_3)","decl":{"start":{"line":68,"column":2},"end":{"line":68,"column":3}},"loc":{"start":{"line":68,"column":47},"end":{"line":70,"column":3}},"line":68},"4":{"name":"(anonymous_4)","decl":{"start":{"line":71,"column":2},"end":{"line":71,"column":3}},"loc":{"start":{"line":71,"column":32},"end":{"line":92,"column":3}},"line":71},"5":{"name":"(anonymous_5)","decl":{"start":{"line":93,"column":2},"end":{"line":93,"column":3}},"loc":{"start":{"line":93,"column":32},"end":{"line":95,"column":3}},"line":93},"6":{"name":"(anonymous_6)","decl":{"start":{"line":96,"column":2},"end":{"line":96,"column":3}},"loc":{"start":{"line":96,"column":28},"end":{"line":103,"column":3}},"line":96}},"branchMap":{"0":{"loc":{"start":{"line":50,"column":23},"end":{"line":50,"column":48}},"type":"binary-expr","locations":[{"start":{"line":50,"column":23},"end":{"line":50,"column":42}},{"start":{"line":50,"column":46},"end":{"line":50,"column":48}}],"line":50},"1":{"loc":{"start":{"line":85,"column":15},"end":{"line":85,"column":89}},"type":"cond-expr","locations":[{"start":{"line":85,"column":40},"end":{"line":85,"column":53}},{"start":{"line":85,"column":56},"end":{"line":85,"column":89}}],"line":85},"2":{"loc":{"start":{"line":97,"column":4},"end":{"line":101,"column":5}},"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":101,"column":5}},{"start":{"line":99,"column":11},"end":{"line":101,"column":5}}],"line":97},"3":{"loc":{"start":{"line":99,"column":11},"end":{"line":101,"column":5}},"type":"if","locations":[{"start":{"line":99,"column":11},"end":{"line":101,"column":5}},{"start":{},"end":{}}],"line":99}},"s":{"0":2,"1":2,"2":2,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/noot/Documents/communique/src/lib/core/legislative/adapters/uk-parliament.ts"],"sourcesContent":["import { LegislativeAdapter } from './base';\nimport type { \n    Address, \n    DeliveryRequest, \n    DeliveryResult, \n    Representative, \n    LegislativeSystem, \n    DeliveryCapability,\n    Office\n} from './base';\n\nexport class UKParliamentAdapter extends LegislativeAdapter {\n    readonly country_code = 'UK';\n    readonly name = 'United Kingdom Parliament';\n    readonly supported_methods = ['email', 'form'];\n\n    async getSystemInfo(): Promise<LegislativeSystem> {\n        return {\n            country_code: 'UK',\n            name: 'Parliament of the United Kingdom',\n            type: 'parliamentary',\n            chambers: [\n                {\n                    id: 'uk-commons',\n                    jurisdiction_id: 'uk-national',\n                    name: 'House of Commons',\n                    type: 'lower',\n                    seat_count: 650,\n                    term_length: 5,\n                    external_ids: {}\n                },\n                {\n                    id: 'uk-lords',\n                    jurisdiction_id: 'uk-national',\n                    name: 'House of Lords',\n                    type: 'upper',\n                    seat_count: 800, // Approximate\n                    term_length: 0, // Life peers\n                    external_ids: {}\n                }\n            ],\n            primary_language: 'en',\n            supported_languages: ['en', 'cy', 'gd']\n        };\n    }\n\n    async getCapabilities(): Promise<DeliveryCapability> {\n        return {\n            country_code: 'UK',\n            methods: ['email', 'form'],\n            tier: 2,\n            provider: 'Parliament.uk',\n            config: {\n                base_url: 'https://www.parliament.uk'\n            }\n        };\n    }\n\n    async lookupRepresentativesByAddress(address: Address): Promise<Representative[]> {\n        try {\n            // In a real implementation, this would call the UK Parliament API\n            // or a service like MySidebar or Democracy Club\n            \n            // For now, return placeholder data\n            const postcode = address.postal_code || '';\n            \n            return [\n                {\n                    id: `uk-mp-${postcode}`,\n                    office_id: `uk-commons-${postcode}`,\n                    name: `MP for ${postcode} constituency`,\n                    party: 'Unknown',\n                    external_ids: {\n                        parliament_id: `mp-${postcode}`\n                    },\n                    is_current: true\n                }\n            ];\n        } catch (error) {\n            console.error('UK Parliament lookup failed:', error);\n            return [];\n        }\n    }\n\n    async validateRepresentative(representative: Representative): Promise<boolean> {\n        // In a real implementation, validate against Parliament API\n        return representative.is_current;\n    }\n\n    async deliverMessage(request: DeliveryRequest): Promise<DeliveryResult> {\n        try {\n            // In a real implementation, this would submit via:\n            // - Direct email (if available)\n            // - Parliament.uk contact form\n            // - Third-party service like MySidebar\n            \n            // For now, simulate successful delivery\n            return {\n                success: true,\n                message_id: `uk-msg-${Date.now()}`,\n                metadata: {\n                    provider: 'UK Parliament',\n                    method: 'email',\n                    representative: request.representative.name\n                }\n            };\n        } catch (error) {\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : 'UK Parliament submission failed',\n                metadata: {\n                    provider: 'UK Parliament',\n                    representative: request.representative.name\n                }\n            };\n        }\n    }\n\n    formatRepresentativeName(rep: Representative): string {\n        return `${rep.name} MP`;\n    }\n\n    formatOfficeTitle(office: Office): string {\n        if (office.id.includes('commons')) {\n            return 'Member of Parliament';\n        } else if (office.id.includes('lords')) {\n            return 'Member of the House of Lords';\n        }\n        return office.title;\n    }\n}"],"mappings":"AAAA,SAAS,0BAA0B;AAW5B,aAAM,4BAA4B,mBAAmB;AAAA,EAC/C,eAAe;AAAA,EACf,OAAO;AAAA,EACP,oBAAoB,CAAC,SAAS,MAAM;AAAA,EAE7C,MAAM,gBAA4C;AAC9C,WAAO;AAAA,MACH,cAAc;AAAA,MACd,MAAM;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,QACN;AAAA,UACI,IAAI;AAAA,UACJ,iBAAiB;AAAA,UACjB,MAAM;AAAA,UACN,MAAM;AAAA,UACN,YAAY;AAAA,UACZ,aAAa;AAAA,UACb,cAAc,CAAC;AAAA,QACnB;AAAA,QACA;AAAA,UACI,IAAI;AAAA,UACJ,iBAAiB;AAAA,UACjB,MAAM;AAAA,UACN,MAAM;AAAA,UACN,YAAY;AAAA;AAAA,UACZ,aAAa;AAAA;AAAA,UACb,cAAc,CAAC;AAAA,QACnB;AAAA,MACJ;AAAA,MACA,kBAAkB;AAAA,MAClB,qBAAqB,CAAC,MAAM,MAAM,IAAI;AAAA,IAC1C;AAAA,EACJ;AAAA,EAEA,MAAM,kBAA+C;AACjD,WAAO;AAAA,MACH,cAAc;AAAA,MACd,SAAS,CAAC,SAAS,MAAM;AAAA,MACzB,MAAM;AAAA,MACN,UAAU;AAAA,MACV,QAAQ;AAAA,QACJ,UAAU;AAAA,MACd;AAAA,IACJ;AAAA,EACJ;AAAA,EAEA,MAAM,+BAA+B,SAA6C;AAC9E,QAAI;AAKA,YAAM,WAAW,QAAQ,eAAe;AAExC,aAAO;AAAA,QACH;AAAA,UACI,IAAI,SAAS,QAAQ;AAAA,UACrB,WAAW,cAAc,QAAQ;AAAA,UACjC,MAAM,UAAU,QAAQ;AAAA,UACxB,OAAO;AAAA,UACP,cAAc;AAAA,YACV,eAAe,MAAM,QAAQ;AAAA,UACjC;AAAA,UACA,YAAY;AAAA,QAChB;AAAA,MACJ;AAAA,IACJ,SAAS,OAAO;AACZ,cAAQ,MAAM,gCAAgC,KAAK;AACnD,aAAO,CAAC;AAAA,IACZ;AAAA,EACJ;AAAA,EAEA,MAAM,uBAAuB,gBAAkD;AAE3E,WAAO,eAAe;AAAA,EAC1B;AAAA,EAEA,MAAM,eAAe,SAAmD;AACpE,QAAI;AAOA,aAAO;AAAA,QACH,SAAS;AAAA,QACT,YAAY,UAAU,KAAK,IAAI,CAAC;AAAA,QAChC,UAAU;AAAA,UACN,UAAU;AAAA,UACV,QAAQ;AAAA,UACR,gBAAgB,QAAQ,eAAe;AAAA,QAC3C;AAAA,MACJ;AAAA,IACJ,SAAS,OAAO;AACZ,aAAO;AAAA,QACH,SAAS;AAAA,QACT,OAAO,iBAAiB,QAAQ,MAAM,UAAU;AAAA,QAChD,UAAU;AAAA,UACN,UAAU;AAAA,UACV,gBAAgB,QAAQ,eAAe;AAAA,QAC3C;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA,EAEA,yBAAyB,KAA6B;AAClD,WAAO,GAAG,IAAI,IAAI;AAAA,EACtB;AAAA,EAEA,kBAAkB,QAAwB;AACtC,QAAI,OAAO,GAAG,SAAS,SAAS,GAAG;AAC/B,aAAO;AAAA,IACX,WAAW,OAAO,GAAG,SAAS,OAAO,GAAG;AACpC,aAAO;AAAA,IACX;AACA,WAAO,OAAO;AAAA,EAClB;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"71cbc01ea16e2d576c21693328f3478b613ce902"},"/Users/noot/Documents/communique/src/lib/core/legislative/adapters/generic.ts":{"path":"/Users/noot/Documents/communique/src/lib/core/legislative/adapters/generic.ts","statementMap":{"0":{"start":{"line":5,"column":22},"end":{"line":5,"column":30}},"1":{"start":{"line":7,"column":4},"end":{"line":7,"column":12}},"2":{"start":{"line":8,"column":4},"end":{"line":8,"column":36}},"3":{"start":{"line":9,"column":4},"end":{"line":9,"column":52}},"4":{"start":{"line":12,"column":4},"end":{"line":19,"column":6}},"5":{"start":{"line":22,"column":4},"end":{"line":30,"column":6}},"6":{"start":{"line":33,"column":4},"end":{"line":33,"column":80}},"7":{"start":{"line":34,"column":4},"end":{"line":34,"column":14}},"8":{"start":{"line":37,"column":4},"end":{"line":37,"column":17}},"9":{"start":{"line":40,"column":4},"end":{"line":48,"column":6}},"10":{"start":{"line":51,"column":4},"end":{"line":51,"column":20}},"11":{"start":{"line":54,"column":4},"end":{"line":54,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":2},"end":{"line":6,"column":3}},"loc":{"start":{"line":6,"column":40},"end":{"line":10,"column":3}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":2},"end":{"line":11,"column":3}},"loc":{"start":{"line":11,"column":24},"end":{"line":20,"column":3}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":2},"end":{"line":21,"column":3}},"loc":{"start":{"line":21,"column":26},"end":{"line":31,"column":3}},"line":21},"3":{"name":"(anonymous_3)","decl":{"start":{"line":32,"column":2},"end":{"line":32,"column":3}},"loc":{"start":{"line":32,"column":48},"end":{"line":35,"column":3}},"line":32},"4":{"name":"(anonymous_4)","decl":{"start":{"line":36,"column":2},"end":{"line":36,"column":3}},"loc":{"start":{"line":36,"column":47},"end":{"line":38,"column":3}},"line":36},"5":{"name":"(anonymous_5)","decl":{"start":{"line":39,"column":2},"end":{"line":39,"column":3}},"loc":{"start":{"line":39,"column":32},"end":{"line":49,"column":3}},"line":39},"6":{"name":"(anonymous_6)","decl":{"start":{"line":50,"column":2},"end":{"line":50,"column":3}},"loc":{"start":{"line":50,"column":32},"end":{"line":52,"column":3}},"line":50},"7":{"name":"(anonymous_7)","decl":{"start":{"line":53,"column":2},"end":{"line":53,"column":3}},"loc":{"start":{"line":53,"column":28},"end":{"line":55,"column":3}},"line":53}},"branchMap":{"0":{"loc":{"start":{"line":54,"column":11},"end":{"line":54,"column":43}},"type":"binary-expr","locations":[{"start":{"line":54,"column":11},"end":{"line":54,"column":23}},{"start":{"line":54,"column":27},"end":{"line":54,"column":43}}],"line":54}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/noot/Documents/communique/src/lib/core/legislative/adapters/generic.ts"],"sourcesContent":["import { LegislativeAdapter } from './base';\nimport type { \n    Address, \n    DeliveryRequest, \n    DeliveryResult, \n    Representative, \n    LegislativeSystem, \n    DeliveryCapability,\n    Office\n} from './base';\n\nexport class GenericLegislativeAdapter extends LegislativeAdapter {\n    readonly country_code: string;\n    readonly name: string;\n    readonly supported_methods = ['none'];\n\n    constructor(countryCode: string, countryName: string) {\n        super();\n        this.country_code = countryCode;\n        this.name = `${countryName} Legislative System`;\n    }\n\n    async getSystemInfo(): Promise<LegislativeSystem> {\n        return {\n            country_code: this.country_code,\n            name: this.name,\n            type: 'other',\n            chambers: [],\n            primary_language: 'en',\n            supported_languages: ['en']\n        };\n    }\n\n    async getCapabilities(): Promise<DeliveryCapability> {\n        return {\n            country_code: this.country_code,\n            methods: [],\n            tier: 3,\n            provider: 'None',\n            config: {\n                note: 'No delivery methods available for this country'\n            }\n        };\n    }\n\n    async lookupRepresentativesByAddress(address: Address): Promise<Representative[]> {\n        // Generic adapter cannot look up representatives\n        console.warn(`No representative lookup available for ${this.country_code}`);\n        return [];\n    }\n\n    async validateRepresentative(representative: Representative): Promise<boolean> {\n        // Cannot validate without specific country integration\n        return false;\n    }\n\n    async deliverMessage(request: DeliveryRequest): Promise<DeliveryResult> {\n        return {\n            success: false,\n            error: `No delivery method available for ${this.country_code}`,\n            metadata: {\n                provider: 'Generic',\n                country: this.country_code,\n                representative: request.representative.name\n            }\n        };\n    }\n\n    formatRepresentativeName(rep: Representative): string {\n        return rep.name;\n    }\n\n    formatOfficeTitle(office: Office): string {\n        return office.title || 'Representative';\n    }\n}"],"mappings":"AAAA,SAAS,0BAA0B;AAW5B,aAAM,kCAAkC,mBAAmB;AAAA,EACrD;AAAA,EACA;AAAA,EACA,oBAAoB,CAAC,MAAM;AAAA,EAEpC,YAAY,aAAqB,aAAqB;AAClD,UAAM;AACN,SAAK,eAAe;AACpB,SAAK,OAAO,GAAG,WAAW;AAAA,EAC9B;AAAA,EAEA,MAAM,gBAA4C;AAC9C,WAAO;AAAA,MACH,cAAc,KAAK;AAAA,MACnB,MAAM,KAAK;AAAA,MACX,MAAM;AAAA,MACN,UAAU,CAAC;AAAA,MACX,kBAAkB;AAAA,MAClB,qBAAqB,CAAC,IAAI;AAAA,IAC9B;AAAA,EACJ;AAAA,EAEA,MAAM,kBAA+C;AACjD,WAAO;AAAA,MACH,cAAc,KAAK;AAAA,MACnB,SAAS,CAAC;AAAA,MACV,MAAM;AAAA,MACN,UAAU;AAAA,MACV,QAAQ;AAAA,QACJ,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,EACJ;AAAA,EAEA,MAAM,+BAA+B,SAA6C;AAE9E,YAAQ,KAAK,0CAA0C,KAAK,YAAY,EAAE;AAC1E,WAAO,CAAC;AAAA,EACZ;AAAA,EAEA,MAAM,uBAAuB,gBAAkD;AAE3E,WAAO;AAAA,EACX;AAAA,EAEA,MAAM,eAAe,SAAmD;AACpE,WAAO;AAAA,MACH,SAAS;AAAA,MACT,OAAO,oCAAoC,KAAK,YAAY;AAAA,MAC5D,UAAU;AAAA,QACN,UAAU;AAAA,QACV,SAAS,KAAK;AAAA,QACd,gBAAgB,QAAQ,eAAe;AAAA,MAC3C;AAAA,IACJ;AAAA,EACJ;AAAA,EAEA,yBAAyB,KAA6B;AAClD,WAAO,IAAI;AAAA,EACf;AAAA,EAEA,kBAAkB,QAAwB;AACtC,WAAO,OAAO,SAAS;AAAA,EAC3B;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7b4068a14a761ac3f868419bfd3cff2c9e98a3b3"},"/Users/noot/Documents/communique/src/lib/core/legislative/adapters/registry.ts":{"path":"/Users/noot/Documents/communique/src/lib/core/legislative/adapters/registry.ts","statementMap":{"0":{"start":{"line":6,"column":29},"end":{"line":6,"column":38}},"1":{"start":{"line":7,"column":16},"end":{"line":7,"column":21}},"2":{"start":{"line":9,"column":4},"end":{"line":9,"column":33}},"3":{"start":{"line":9,"column":26},"end":{"line":9,"column":33}},"4":{"start":{"line":10,"column":22},"end":{"line":10,"column":43}},"5":{"start":{"line":11,"column":4},"end":{"line":11,"column":62}},"6":{"start":{"line":12,"column":4},"end":{"line":12,"column":55}},"7":{"start":{"line":13,"column":4},"end":{"line":13,"column":55}},"8":{"start":{"line":14,"column":4},"end":{"line":14,"column":28}},"9":{"start":{"line":17,"column":4},"end":{"line":17,"column":28}},"10":{"start":{"line":18,"column":17},"end":{"line":18,"column":43}},"11":{"start":{"line":19,"column":28},"end":{"line":19,"column":51}},"12":{"start":{"line":20,"column":4},"end":{"line":20,"column":48}},"13":{"start":{"line":20,"column":25},"end":{"line":20,"column":48}},"14":{"start":{"line":21,"column":24},"end":{"line":21,"column":49}},"15":{"start":{"line":22,"column":4},"end":{"line":22,"column":60}},"16":{"start":{"line":25,"column":25},"end":{"line":34,"column":5}},"17":{"start":{"line":35,"column":4},"end":{"line":35,"column":38}},"18":{"start":{"line":38,"column":4},"end":{"line":38,"column":28}},"19":{"start":{"line":39,"column":4},"end":{"line":39,"column":44}},"20":{"start":{"line":42,"column":4},"end":{"line":42,"column":28}},"21":{"start":{"line":43,"column":25},"end":{"line":43,"column":27}},"22":{"start":{"line":44,"column":4},"end":{"line":47,"column":5}},"23":{"start":{"line":45,"column":25},"end":{"line":45,"column":56}},"24":{"start":{"line":46,"column":6},"end":{"line":46,"column":36}},"25":{"start":{"line":48,"column":4},"end":{"line":48,"column":24}},"26":{"start":{"line":51,"column":31},"end":{"line":51,"column":52}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":2},"end":{"line":8,"column":3}},"loc":{"start":{"line":8,"column":21},"end":{"line":15,"column":3}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":2},"end":{"line":16,"column":3}},"loc":{"start":{"line":16,"column":33},"end":{"line":23,"column":3}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":2},"end":{"line":24,"column":3}},"loc":{"start":{"line":24,"column":23},"end":{"line":36,"column":3}},"line":24},"3":{"name":"(anonymous_3)","decl":{"start":{"line":37,"column":2},"end":{"line":37,"column":3}},"loc":{"start":{"line":37,"column":32},"end":{"line":40,"column":3}},"line":37},"4":{"name":"(anonymous_4)","decl":{"start":{"line":41,"column":2},"end":{"line":41,"column":3}},"loc":{"start":{"line":41,"column":26},"end":{"line":49,"column":3}},"line":41}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":4},"end":{"line":9,"column":33}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":9,"column":33}},{"start":{},"end":{}}],"line":9},"1":{"loc":{"start":{"line":10,"column":22},"end":{"line":10,"column":43}},"type":"binary-expr","locations":[{"start":{"line":10,"column":22},"end":{"line":10,"column":37}},{"start":{"line":10,"column":41},"end":{"line":10,"column":43}}],"line":10},"2":{"loc":{"start":{"line":20,"column":4},"end":{"line":20,"column":48}},"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":48}},{"start":{},"end":{}}],"line":20},"3":{"loc":{"start":{"line":35,"column":11},"end":{"line":35,"column":37}},"type":"binary-expr","locations":[{"start":{"line":35,"column":11},"end":{"line":35,"column":29}},{"start":{"line":35,"column":33},"end":{"line":35,"column":37}}],"line":35}},"s":{"0":1,"1":1,"2":5,"3":4,"4":1,"5":1,"6":1,"7":1,"8":1,"9":5,"10":5,"11":5,"12":5,"13":5,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1},"f":{"0":5,"1":5,"2":0,"3":0,"4":0},"b":{"0":[4,1],"1":[1,0],"2":[5,0],"3":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/noot/Documents/communique/src/lib/core/legislative/adapters/registry.ts"],"sourcesContent":["import type { LegislativeAdapter } from './base';\nimport { USCongressAdapter } from './us-congress';\nimport { UKParliamentAdapter } from './uk-parliament';\nimport { GenericLegislativeAdapter } from './generic';\nimport { env } from '$env/dynamic/private';\n\nexport class AdapterRegistry {\n    private adapters = new Map<string, LegislativeAdapter>();\n    private initialized = false;\n\n    async initialize() {\n        if (this.initialized) return;\n\n        // Register US Congress adapter\n        const cwcApiKey = env.CWC_API_KEY || '';\n        this.adapters.set('US', new USCongressAdapter(cwcApiKey));\n\n        // Register UK Parliament adapter\n        this.adapters.set('UK', new UKParliamentAdapter());\n        this.adapters.set('GB', new UKParliamentAdapter()); // Alternative code\n\n        // Can add more specific adapters here\n        // this.adapters.set('CA', new CanadianParliamentAdapter());\n        // this.adapters.set('AU', new AustralianParliamentAdapter());\n\n        this.initialized = true;\n    }\n\n    async getAdapter(country_code: string): Promise<LegislativeAdapter | null> {\n        await this.initialize();\n        const code = country_code.toUpperCase();\n        \n        // Check for specific adapter\n        const specificAdapter = this.adapters.get(code);\n        if (specificAdapter) return specificAdapter;\n        \n        // Fall back to generic adapter for unknown countries\n        const countryName = this.getCountryName(code);\n        return new GenericLegislativeAdapter(code, countryName);\n    }\n\n    private getCountryName(code: string): string {\n        const countryNames: Record<string, string> = {\n            'CA': 'Canada',\n            'AU': 'Australia',\n            'DE': 'Germany',\n            'FR': 'France',\n            'JP': 'Japan',\n            'IN': 'India',\n            'BR': 'Brazil',\n            'MX': 'Mexico'\n        };\n        \n        return countryNames[code] || code;\n    }\n\n    async getSupportedCountries(): Promise<string[]> {\n        await this.initialize();\n        return Array.from(this.adapters.keys());\n    }\n\n    async getCapabilities() {\n        await this.initialize();\n        const capabilities = [];\n        \n        for (const [country, adapter] of this.adapters) {\n            const capability = await adapter.getCapabilities();\n            capabilities.push(capability);\n        }\n        \n        return capabilities;\n    }\n}\n\nexport const adapterRegistry = new AdapterRegistry();"],"mappings":"AACA,SAAS,yBAAyB;AAClC,SAAS,2BAA2B;AACpC,SAAS,iCAAiC;AAC1C,SAAS,WAAW;AAEb,aAAM,gBAAgB;AAAA,EACjB,WAAW,oBAAI,IAAgC;AAAA,EAC/C,cAAc;AAAA,EAEtB,MAAM,aAAa;AACf,QAAI,KAAK,YAAa;AAGtB,UAAM,YAAY,IAAI,eAAe;AACrC,SAAK,SAAS,IAAI,MAAM,IAAI,kBAAkB,SAAS,CAAC;AAGxD,SAAK,SAAS,IAAI,MAAM,IAAI,oBAAoB,CAAC;AACjD,SAAK,SAAS,IAAI,MAAM,IAAI,oBAAoB,CAAC;AAMjD,SAAK,cAAc;AAAA,EACvB;AAAA,EAEA,MAAM,WAAW,cAA0D;AACvE,UAAM,KAAK,WAAW;AACtB,UAAM,OAAO,aAAa,YAAY;AAGtC,UAAM,kBAAkB,KAAK,SAAS,IAAI,IAAI;AAC9C,QAAI,gBAAiB,QAAO;AAG5B,UAAM,cAAc,KAAK,eAAe,IAAI;AAC5C,WAAO,IAAI,0BAA0B,MAAM,WAAW;AAAA,EAC1D;AAAA,EAEQ,eAAe,MAAsB;AACzC,UAAM,eAAuC;AAAA,MACzC,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,IACV;AAEA,WAAO,aAAa,IAAI,KAAK;AAAA,EACjC;AAAA,EAEA,MAAM,wBAA2C;AAC7C,UAAM,KAAK,WAAW;AACtB,WAAO,MAAM,KAAK,KAAK,SAAS,KAAK,CAAC;AAAA,EAC1C;AAAA,EAEA,MAAM,kBAAkB;AACpB,UAAM,KAAK,WAAW;AACtB,UAAM,eAAe,CAAC;AAEtB,eAAW,CAAC,SAAS,OAAO,KAAK,KAAK,UAAU;AAC5C,YAAM,aAAa,MAAM,QAAQ,gBAAgB;AACjD,mBAAa,KAAK,UAAU;AAAA,IAChC;AAEA,WAAO;AAAA,EACX;AACJ;AAEO,aAAM,kBAAkB,IAAI,gBAAgB;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cedb2a7beb44e46f75c081ae7583e75ee077a735"},"/Users/noot/Documents/communique/src/lib/core/legislative/delivery/pipeline.ts":{"path":"/Users/noot/Documents/communique/src/lib/core/legislative/delivery/pipeline.ts","statementMap":{"0":{"start":{"line":4,"column":22},"end":{"line":4,"column":32}},"1":{"start":{"line":5,"column":20},"end":{"line":5,"column":22}},"2":{"start":{"line":6,"column":4},"end":{"line":71,"column":5}},"3":{"start":{"line":7,"column":27},"end":{"line":7,"column":87}},"4":{"start":{"line":8,"column":22},"end":{"line":8,"column":68}},"5":{"start":{"line":9,"column":6},"end":{"line":21,"column":7}},"6":{"start":{"line":10,"column":8},"end":{"line":20,"column":10}},"7":{"start":{"line":22,"column":30},"end":{"line":22,"column":81}},"8":{"start":{"line":23,"column":6},"end":{"line":35,"column":7}},"9":{"start":{"line":24,"column":8},"end":{"line":34,"column":10}},"10":{"start":{"line":36,"column":6},"end":{"line":48,"column":7}},"11":{"start":{"line":37,"column":23},"end":{"line":37,"column":77}},"12":{"start":{"line":38,"column":36},"end":{"line":38,"column":108}},"13":{"start":{"line":39,"column":24},"end":{"line":45,"column":9}},"14":{"start":{"line":46,"column":23},"end":{"line":46,"column":60}},"15":{"start":{"line":47,"column":8},"end":{"line":47,"column":29}},"16":{"start":{"line":49,"column":25},"end":{"line":49,"column":64}},"17":{"start":{"line":49,"column":47},"end":{"line":49,"column":56}},"18":{"start":{"line":50,"column":21},"end":{"line":50,"column":48}},"19":{"start":{"line":51,"column":6},"end":{"line":58,"column":8}},"20":{"start":{"line":60,"column":6},"end":{"line":70,"column":8}},"21":{"start":{"line":74,"column":4},"end":{"line":74,"column":33}},"22":{"start":{"line":74,"column":23},"end":{"line":74,"column":33}},"23":{"start":{"line":75,"column":28},"end":{"line":75,"column":86}},"24":{"start":{"line":76,"column":26},"end":{"line":76,"column":28}},"25":{"start":{"line":77,"column":4},"end":{"line":82,"column":5}},"26":{"start":{"line":78,"column":22},"end":{"line":78,"column":63}},"27":{"start":{"line":79,"column":6},"end":{"line":81,"column":7}},"28":{"start":{"line":80,"column":8},"end":{"line":80,"column":32}},"29":{"start":{"line":83,"column":4},"end":{"line":83,"column":25}},"30":{"start":{"line":86,"column":4},"end":{"line":95,"column":6}},"31":{"start":{"line":98,"column":24},"end":{"line":98,"column":62}},"32":{"start":{"line":99,"column":30},"end":{"line":99,"column":122}},"33":{"start":{"line":100,"column":4},"end":{"line":100,"column":70}},"34":{"start":{"line":103,"column":4},"end":{"line":103,"column":344}},"35":{"start":{"line":106,"column":32},"end":{"line":106,"column":65}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":2},"end":{"line":3,"column":3}},"loc":{"start":{"line":3,"column":38},"end":{"line":72,"column":3}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":49,"column":40},"end":{"line":49,"column":41}},"loc":{"start":{"line":49,"column":47},"end":{"line":49,"column":56}},"line":49},"2":{"name":"(anonymous_2)","decl":{"start":{"line":73,"column":2},"end":{"line":73,"column":3}},"loc":{"start":{"line":73,"column":45},"end":{"line":84,"column":3}},"line":73},"3":{"name":"(anonymous_3)","decl":{"start":{"line":85,"column":2},"end":{"line":85,"column":3}},"loc":{"start":{"line":85,"column":52},"end":{"line":96,"column":3}},"line":85},"4":{"name":"(anonymous_4)","decl":{"start":{"line":97,"column":2},"end":{"line":97,"column":3}},"loc":{"start":{"line":97,"column":57},"end":{"line":101,"column":3}},"line":97},"5":{"name":"(anonymous_5)","decl":{"start":{"line":102,"column":2},"end":{"line":102,"column":3}},"loc":{"start":{"line":102,"column":43},"end":{"line":104,"column":3}},"line":102}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":27},"end":{"line":7,"column":87}},"type":"binary-expr","locations":[{"start":{"line":7,"column":27},"end":{"line":7,"column":45}},{"start":{"line":7,"column":49},"end":{"line":7,"column":79}},{"start":{"line":7,"column":83},"end":{"line":7,"column":87}}],"line":7},"1":{"loc":{"start":{"line":9,"column":6},"end":{"line":21,"column":7}},"type":"if","locations":[{"start":{"line":9,"column":6},"end":{"line":21,"column":7}},{"start":{},"end":{}}],"line":9},"2":{"loc":{"start":{"line":23,"column":6},"end":{"line":35,"column":7}},"type":"if","locations":[{"start":{"line":23,"column":6},"end":{"line":35,"column":7}},{"start":{},"end":{}}],"line":23},"3":{"loc":{"start":{"line":67,"column":17},"end":{"line":67,"column":84}},"type":"cond-expr","locations":[{"start":{"line":67,"column":42},"end":{"line":67,"column":55}},{"start":{"line":67,"column":58},"end":{"line":67,"column":84}}],"line":67},"4":{"loc":{"start":{"line":74,"column":4},"end":{"line":74,"column":33}},"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":74,"column":33}},{"start":{},"end":{}}],"line":74},"5":{"loc":{"start":{"line":79,"column":6},"end":{"line":81,"column":7}},"type":"if","locations":[{"start":{"line":79,"column":6},"end":{"line":81,"column":7}},{"start":{},"end":{}}],"line":79},"6":{"loc":{"start":{"line":89,"column":12},"end":{"line":89,"column":75}},"type":"cond-expr","locations":[{"start":{"line":89,"column":47},"end":{"line":89,"column":56}},{"start":{"line":89,"column":59},"end":{"line":89,"column":75}}],"line":89},"7":{"loc":{"start":{"line":90,"column":13},"end":{"line":90,"column":76}},"type":"cond-expr","locations":[{"start":{"line":90,"column":48},"end":{"line":90,"column":57}},{"start":{"line":90,"column":60},"end":{"line":90,"column":76}}],"line":90},"8":{"loc":{"start":{"line":91,"column":15},"end":{"line":91,"column":68}},"type":"cond-expr","locations":[{"start":{"line":91,"column":50},"end":{"line":91,"column":58}},{"start":{"line":91,"column":61},"end":{"line":91,"column":68}}],"line":91},"9":{"loc":{"start":{"line":98,"column":24},"end":{"line":98,"column":62}},"type":"binary-expr","locations":[{"start":{"line":98,"column":24},"end":{"line":98,"column":37}},{"start":{"line":98,"column":41},"end":{"line":98,"column":62}}],"line":98},"10":{"loc":{"start":{"line":99,"column":30},"end":{"line":99,"column":122}},"type":"cond-expr","locations":[{"start":{"line":99,"column":46},"end":{"line":99,"column":108}},{"start":{"line":99,"column":111},"end":{"line":99,"column":122}}],"line":99},"11":{"loc":{"start":{"line":103,"column":43},"end":{"line":103,"column":69}},"type":"binary-expr","locations":[{"start":{"line":103,"column":43},"end":{"line":103,"column":52}},{"start":{"line":103,"column":56},"end":{"line":103,"column":69}}],"line":103},"12":{"loc":{"start":{"line":103,"column":104},"end":{"line":103,"column":152}},"type":"binary-expr","locations":[{"start":{"line":103,"column":104},"end":{"line":103,"column":135}},{"start":{"line":103,"column":139},"end":{"line":103,"column":152}}],"line":103},"13":{"loc":{"start":{"line":103,"column":105},"end":{"line":103,"column":120}},"type":"binary-expr","locations":[{"start":{"line":103,"column":105},"end":{"line":103,"column":114}},{"start":{"line":103,"column":118},"end":{"line":103,"column":120}}],"line":103},"14":{"loc":{"start":{"line":103,"column":270},"end":{"line":103,"column":296}},"type":"binary-expr","locations":[{"start":{"line":103,"column":270},"end":{"line":103,"column":279}},{"start":{"line":103,"column":283},"end":{"line":103,"column":296}}],"line":103}},"s":{"0":5,"1":5,"2":5,"3":5,"4":5,"5":5,"6":0,"7":5,"8":5,"9":1,"10":4,"11":12,"12":12,"13":12,"14":12,"15":12,"16":4,"17":12,"18":4,"19":4,"20":0,"21":5,"22":0,"23":5,"24":5,"25":5,"26":12,"27":12,"28":12,"29":5,"30":12,"31":12,"32":12,"33":12,"34":12,"35":1},"f":{"0":5,"1":12,"2":5,"3":12,"4":12,"5":12},"b":{"0":[5,5,0],"1":[0,5],"2":[1,4],"3":[0,0],"4":[0,5],"5":[12,0],"6":[8,4],"7":[8,4],"8":[8,4],"9":[12,0],"10":[12,0],"11":[12,0],"12":[12,0],"13":[12,0],"14":[12,0]},"inputSourceMap":{"version":3,"sources":["/Users/noot/Documents/communique/src/lib/core/legislative/delivery/pipeline.ts"],"sourcesContent":["import type { LegislativeAdapter, DeliveryRequest, DeliveryResult, Address, User, Template } from '../adapters/base';\nimport type { Representative } from '../models';\nimport { adapterRegistry } from '../adapters/registry';\n// Note: Using internal variable resolution for now\n// import { resolveVariables } from '$lib/services/personalization';\n\nexport interface DeliveryJob {\n    id: string;\n    template: Template;\n    user: User;\n    target_country?: string;\n    custom_message?: string;\n    created_at: Date;\n}\n\nexport interface DeliveryJobResult {\n    job_id: string;\n    total_recipients: number;\n    successful_deliveries: number;\n    failed_deliveries: number;\n    results: DeliveryResult[];\n    duration_ms: number;\n}\n\nexport class LegislativeDeliveryPipeline {\n    async deliverToRepresentatives(job: DeliveryJob): Promise<DeliveryJobResult> {\n        const startTime = Date.now();\n        const results: DeliveryResult[] = [];\n\n        try {\n            // 1. Determine target country\n            const country_code = job.target_country || job.user.address?.country_code || 'US';\n            \n            // 2. Get appropriate adapter\n            const adapter = await adapterRegistry.getAdapter(country_code);\n            if (!adapter) {\n                return {\n                    job_id: job.id,\n                    total_recipients: 0,\n                    successful_deliveries: 0,\n                    failed_deliveries: 1,\n                    results: [{\n                        success: false,\n                        error: `No legislative adapter available for country: ${country_code}`\n                    }],\n                    duration_ms: Date.now() - startTime\n                };\n            }\n\n            // 3. Look up representatives\n            const representatives = await this.lookupRepresentatives(adapter, job.user);\n            if (representatives.length === 0) {\n                return {\n                    job_id: job.id,\n                    total_recipients: 0,\n                    successful_deliveries: 0,\n                    failed_deliveries: 1,\n                    results: [{\n                        success: false,\n                        error: 'No representatives found for user address'\n                    }],\n                    duration_ms: Date.now() - startTime\n                };\n            }\n\n            // 4. Deliver to each representative\n            for (const rep of representatives) {\n                const office = this.createOfficeFromRepresentative(rep, country_code);\n                const personalizedMessage = this.personalizeMessage(job.template, job.user, rep, job.custom_message);\n                \n                const request: DeliveryRequest = {\n                    template: job.template,\n                    user: job.user,\n                    representative: rep,\n                    office,\n                    personalized_message: personalizedMessage\n                };\n\n                const result = await adapter.deliverMessage(request);\n                results.push(result);\n            }\n\n            const successful = results.filter(r => r.success).length;\n            const failed = results.length - successful;\n\n            return {\n                job_id: job.id,\n                total_recipients: representatives.length,\n                successful_deliveries: successful,\n                failed_deliveries: failed,\n                results,\n                duration_ms: Date.now() - startTime\n            };\n\n        } catch (error) {\n            return {\n                job_id: job.id,\n                total_recipients: 0,\n                successful_deliveries: 0,\n                failed_deliveries: 1,\n                results: [{\n                    success: false,\n                    error: error instanceof Error ? error.message : 'Pipeline delivery failed'\n                }],\n                duration_ms: Date.now() - startTime\n            };\n        }\n    }\n\n    private async lookupRepresentatives(adapter: LegislativeAdapter, user: User): Promise<Representative[]> {\n        if (!user.address) return [];\n        \n        const representatives = await adapter.lookupRepresentativesByAddress(user.address);\n        \n        // Validate representatives are current\n        const validatedReps = [];\n        for (const rep of representatives) {\n            const isValid = await adapter.validateRepresentative(rep);\n            if (isValid) {\n                validatedReps.push(rep);\n            }\n        }\n        \n        return validatedReps;\n    }\n\n    private createOfficeFromRepresentative(rep: Representative, country_code: string) {\n        return {\n            id: rep.office_id,\n            jurisdiction_id: `${country_code.toLowerCase()}-federal`,\n            role: rep.office_id.includes('senate') ? 'senator' : 'representative',\n            title: rep.office_id.includes('senate') ? 'Senator' : 'Representative',\n            chamber: rep.office_id.includes('senate') ? 'senate' : 'house',\n            level: 'national' as const,\n            contact_methods: [],\n            is_active: rep.is_current\n        };\n    }\n\n    private personalizeMessage(template: Template, user: User, rep: Representative, customMessage?: string): string {\n        // Use custom message or template body\n        const baseMessage = customMessage || template.message_body;\n        \n        // Replace [Personal Connection] placeholder if it exists\n        const messageWithCustom = customMessage \n            ? baseMessage.replace(/\\[Personal Connection\\]/g, customMessage)\n            : baseMessage;\n        \n        // Apply basic variable resolution (will be enhanced later)\n        return this.basicVariableResolution(messageWithCustom, user, rep);\n    }\n\n    private basicVariableResolution(text: string, user: User, rep: Representative): string {\n        return text\n            .replace(/\\[user\\.name\\]/g, user.name || 'Constituent')\n            .replace(/\\[user\\.first_name\\]/g, (user.name || '').split(' ')[0] || 'Constituent')\n            .replace(/\\[representative\\.name\\]/g, rep.name)\n            .replace(/\\[representative\\.title\\]/g, rep.name) // Will be enhanced\n            .replace(/\\[Name\\]/g, user.name || 'Constituent')  // Legacy support\n            .replace(/\\[Representative Name\\]/g, rep.name); // Legacy support\n    }\n}\n\nexport const deliveryPipeline = new LegislativeDeliveryPipeline();"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b625d86223b9c293ce958e8b95aa18407e15dab0"},"/Users/noot/Documents/communique/src/lib/core/legislative/resolution/variables.ts":{"path":"/Users/noot/Documents/communique/src/lib/core/legislative/resolution/variables.ts","statementMap":{"0":{"start":{"line":3,"column":30},"end":{"line":3,"column":39}},"1":{"start":{"line":5,"column":4},"end":{"line":5,"column":36}},"2":{"start":{"line":8,"column":4},"end":{"line":8,"column":83}},"3":{"start":{"line":8,"column":51},"end":{"line":8,"column":81}},"4":{"start":{"line":9,"column":4},"end":{"line":12,"column":7}},"5":{"start":{"line":10,"column":19},"end":{"line":10,"column":38}},"6":{"start":{"line":11,"column":6},"end":{"line":11,"column":49}},"7":{"start":{"line":13,"column":4},"end":{"line":13,"column":68}},"8":{"start":{"line":13,"column":52},"end":{"line":13,"column":66}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":81}},"10":{"start":{"line":14,"column":51},"end":{"line":14,"column":79}},"11":{"start":{"line":15,"column":4},"end":{"line":15,"column":83}},"12":{"start":{"line":15,"column":52},"end":{"line":15,"column":81}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":95}},"14":{"start":{"line":16,"column":58},"end":{"line":16,"column":93}},"15":{"start":{"line":17,"column":4},"end":{"line":17,"column":86}},"16":{"start":{"line":17,"column":61},"end":{"line":17,"column":84}},"17":{"start":{"line":18,"column":4},"end":{"line":24,"column":7}},"18":{"start":{"line":19,"column":22},"end":{"line":19,"column":72}},"19":{"start":{"line":20,"column":6},"end":{"line":22,"column":7}},"20":{"start":{"line":21,"column":8},"end":{"line":21,"column":68}},"21":{"start":{"line":23,"column":6},"end":{"line":23,"column":37}},"22":{"start":{"line":25,"column":4},"end":{"line":25,"column":105}},"23":{"start":{"line":25,"column":62},"end":{"line":25,"column":103}},"24":{"start":{"line":26,"column":4},"end":{"line":41,"column":7}},"25":{"start":{"line":27,"column":22},"end":{"line":27,"column":72}},"26":{"start":{"line":28,"column":6},"end":{"line":39,"column":7}},"27":{"start":{"line":29,"column":23},"end":{"line":37,"column":9}},"28":{"start":{"line":38,"column":8},"end":{"line":38,"column":49}},"29":{"start":{"line":40,"column":6},"end":{"line":40,"column":30}},"30":{"start":{"line":44,"column":19},"end":{"line":44,"column":23}},"31":{"start":{"line":45,"column":28},"end":{"line":45,"column":43}},"32":{"start":{"line":46,"column":20},"end":{"line":46,"column":62}},"33":{"start":{"line":47,"column":4},"end":{"line":59,"column":5}},"34":{"start":{"line":48,"column":26},"end":{"line":48,"column":34}},"35":{"start":{"line":49,"column":27},"end":{"line":49,"column":35}},"36":{"start":{"line":50,"column":23},"end":{"line":50,"column":55}},"37":{"start":{"line":51,"column":6},"end":{"line":58,"column":7}},"38":{"start":{"line":52,"column":8},"end":{"line":57,"column":9}},"39":{"start":{"line":53,"column":24},"end":{"line":53,"column":47}},"40":{"start":{"line":54,"column":10},"end":{"line":54,"column":58}},"41":{"start":{"line":56,"column":10},"end":{"line":56,"column":78}},"42":{"start":{"line":60,"column":4},"end":{"line":60,"column":20}},"43":{"start":{"line":63,"column":4},"end":{"line":63,"column":39}},"44":{"start":{"line":66,"column":4},"end":{"line":66,"column":52}},"45":{"start":{"line":69,"column":32},"end":{"line":69,"column":65}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":2},"end":{"line":4,"column":3}},"loc":{"start":{"line":4,"column":16},"end":{"line":6,"column":3}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":2},"end":{"line":7,"column":3}},"loc":{"start":{"line":7,"column":29},"end":{"line":42,"column":3}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":8,"column":36},"end":{"line":8,"column":37}},"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":81}},"line":8},"3":{"name":"(anonymous_3)","decl":{"start":{"line":9,"column":42},"end":{"line":9,"column":43}},"loc":{"start":{"line":9,"column":57},"end":{"line":12,"column":5}},"line":9},"4":{"name":"(anonymous_4)","decl":{"start":{"line":13,"column":37},"end":{"line":13,"column":38}},"loc":{"start":{"line":13,"column":52},"end":{"line":13,"column":66}},"line":13},"5":{"name":"(anonymous_5)","decl":{"start":{"line":14,"column":36},"end":{"line":14,"column":37}},"loc":{"start":{"line":14,"column":51},"end":{"line":14,"column":79}},"line":14},"6":{"name":"(anonymous_6)","decl":{"start":{"line":15,"column":37},"end":{"line":15,"column":38}},"loc":{"start":{"line":15,"column":52},"end":{"line":15,"column":81}},"line":15},"7":{"name":"(anonymous_7)","decl":{"start":{"line":16,"column":43},"end":{"line":16,"column":44}},"loc":{"start":{"line":16,"column":58},"end":{"line":16,"column":93}},"line":16},"8":{"name":"(anonymous_8)","decl":{"start":{"line":17,"column":46},"end":{"line":17,"column":47}},"loc":{"start":{"line":17,"column":61},"end":{"line":17,"column":84}},"line":17},"9":{"name":"(anonymous_9)","decl":{"start":{"line":18,"column":47},"end":{"line":18,"column":48}},"loc":{"start":{"line":18,"column":62},"end":{"line":24,"column":5}},"line":18},"10":{"name":"(anonymous_10)","decl":{"start":{"line":25,"column":47},"end":{"line":25,"column":48}},"loc":{"start":{"line":25,"column":62},"end":{"line":25,"column":103}},"line":25},"11":{"name":"(anonymous_11)","decl":{"start":{"line":26,"column":39},"end":{"line":26,"column":40}},"loc":{"start":{"line":26,"column":54},"end":{"line":41,"column":5}},"line":26},"12":{"name":"(anonymous_12)","decl":{"start":{"line":43,"column":2},"end":{"line":43,"column":3}},"loc":{"start":{"line":43,"column":40},"end":{"line":61,"column":3}},"line":43},"13":{"name":"(anonymous_13)","decl":{"start":{"line":62,"column":2},"end":{"line":62,"column":3}},"loc":{"start":{"line":62,"column":41},"end":{"line":64,"column":3}},"line":62},"14":{"name":"(anonymous_14)","decl":{"start":{"line":65,"column":2},"end":{"line":65,"column":3}},"loc":{"start":{"line":65,"column":26},"end":{"line":67,"column":3}},"line":65}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":81}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":64}},{"start":{"line":8,"column":68},"end":{"line":8,"column":81}}],"line":8},"1":{"loc":{"start":{"line":10,"column":19},"end":{"line":10,"column":38}},"type":"binary-expr","locations":[{"start":{"line":10,"column":19},"end":{"line":10,"column":32}},{"start":{"line":10,"column":36},"end":{"line":10,"column":38}}],"line":10},"2":{"loc":{"start":{"line":11,"column":13},"end":{"line":11,"column":48}},"type":"binary-expr","locations":[{"start":{"line":11,"column":13},"end":{"line":11,"column":31}},{"start":{"line":11,"column":35},"end":{"line":11,"column":48}}],"line":11},"3":{"loc":{"start":{"line":14,"column":51},"end":{"line":14,"column":79}},"type":"binary-expr","locations":[{"start":{"line":14,"column":51},"end":{"line":14,"column":73}},{"start":{"line":14,"column":77},"end":{"line":14,"column":79}}],"line":14},"4":{"loc":{"start":{"line":15,"column":52},"end":{"line":15,"column":81}},"type":"binary-expr","locations":[{"start":{"line":15,"column":52},"end":{"line":15,"column":75}},{"start":{"line":15,"column":79},"end":{"line":15,"column":81}}],"line":15},"5":{"loc":{"start":{"line":16,"column":58},"end":{"line":16,"column":93}},"type":"binary-expr","locations":[{"start":{"line":16,"column":58},"end":{"line":16,"column":87}},{"start":{"line":16,"column":91},"end":{"line":16,"column":93}}],"line":16},"6":{"loc":{"start":{"line":20,"column":6},"end":{"line":22,"column":7}},"type":"if","locations":[{"start":{"line":20,"column":6},"end":{"line":22,"column":7}},{"start":{},"end":{}}],"line":20},"7":{"loc":{"start":{"line":25,"column":62},"end":{"line":25,"column":103}},"type":"binary-expr","locations":[{"start":{"line":25,"column":62},"end":{"line":25,"column":86}},{"start":{"line":25,"column":90},"end":{"line":25,"column":103}}],"line":25},"8":{"loc":{"start":{"line":28,"column":6},"end":{"line":39,"column":7}},"type":"if","locations":[{"start":{"line":28,"column":6},"end":{"line":39,"column":7}},{"start":{},"end":{}}],"line":28},"9":{"loc":{"start":{"line":51,"column":6},"end":{"line":58,"column":7}},"type":"if","locations":[{"start":{"line":51,"column":6},"end":{"line":58,"column":7}},{"start":{},"end":{}}],"line":51}},"s":{"0":1,"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":1,"8":0,"9":1,"10":0,"11":1,"12":0,"13":1,"14":0,"15":1,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1},"f":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/noot/Documents/communique/src/lib/core/legislative/resolution/variables.ts"],"sourcesContent":["import type { Representative } from '../models';\nimport type { User } from '../adapters/base';\nimport { adapterRegistry } from '../adapters/registry';\n\nexport interface VariableContext {\n    user: User;\n    representative: Representative;\n    country_code: string;\n}\n\nexport class LegislativeVariableResolver {\n    private variables = new Map<string, (context: VariableContext) => Promise<string>>();\n\n    constructor() {\n        this.registerDefaultVariables();\n    }\n\n    private registerDefaultVariables() {\n        // User variables\n        this.variables.set('user.name', async (ctx) => ctx.user.name || 'Constituent');\n        this.variables.set('user.first_name', async (ctx) => {\n            const name = ctx.user.name || '';\n            return name.split(' ')[0] || 'Constituent';\n        });\n        this.variables.set('user.email', async (ctx) => ctx.user.email);\n        this.variables.set('user.city', async (ctx) => ctx.user.address?.city || '');\n        this.variables.set('user.state', async (ctx) => ctx.user.address?.state || '');\n        this.variables.set('user.postal_code', async (ctx) => ctx.user.address?.postal_code || '');\n\n        // Representative variables\n        this.variables.set('representative.name', async (ctx) => ctx.representative.name);\n        this.variables.set('representative.title', async (ctx) => {\n            const adapter = await adapterRegistry.getAdapter(ctx.country_code);\n            if (adapter) {\n                return adapter.formatRepresentativeName(ctx.representative);\n            }\n            return ctx.representative.name;\n        });\n        this.variables.set('representative.party', async (ctx) => ctx.representative.party || 'Independent');\n        \n        // Office variables\n        this.variables.set('office.title', async (ctx) => {\n            const adapter = await adapterRegistry.getAdapter(ctx.country_code);\n            if (adapter) {\n                const office = {\n                    id: ctx.representative.office_id,\n                    jurisdiction_id: '',\n                    role: '',\n                    title: '',\n                    level: 'national' as const,\n                    contact_methods: [],\n                    is_active: true\n                };\n                return adapter.formatOfficeTitle(office);\n            }\n            return 'Representative';\n        });\n    }\n\n    async resolveVariables(text: string, context: VariableContext): Promise<string> {\n        let resolved = text;\n\n        // Find all variable placeholders [variable.name]\n        const variablePattern = /\\[([^\\]]+)\\]/g;\n        const matches = Array.from(text.matchAll(variablePattern));\n\n        for (const match of matches) {\n            const placeholder = match[0];\n            const variableName = match[1];\n\n            const resolver = this.variables.get(variableName);\n            if (resolver) {\n                try {\n                    const value = await resolver(context);\n                    resolved = resolved.replace(placeholder, value);\n                } catch (error) {\n                    console.error(`Failed to resolve variable ${variableName}:`, error);\n                    // Leave placeholder as-is if resolution fails\n                }\n            }\n        }\n\n        return resolved;\n    }\n\n    registerCustomVariable(name: string, resolver: (context: VariableContext) => Promise<string>) {\n        this.variables.set(name, resolver);\n    }\n\n    getAvailableVariables(): string[] {\n        return Array.from(this.variables.keys()).sort();\n    }\n}\n\nexport const variableResolver = new LegislativeVariableResolver();"],"mappings":"AAEA,SAAS,uBAAuB;AAQzB,aAAM,4BAA4B;AAAA,EAC7B,YAAY,oBAAI,IAA2D;AAAA,EAEnF,cAAc;AACV,SAAK,yBAAyB;AAAA,EAClC;AAAA,EAEQ,2BAA2B;AAE/B,SAAK,UAAU,IAAI,aAAa,OAAO,QAAQ,IAAI,KAAK,QAAQ,aAAa;AAC7E,SAAK,UAAU,IAAI,mBAAmB,OAAO,QAAQ;AACjD,YAAM,OAAO,IAAI,KAAK,QAAQ;AAC9B,aAAO,KAAK,MAAM,GAAG,EAAE,CAAC,KAAK;AAAA,IACjC,CAAC;AACD,SAAK,UAAU,IAAI,cAAc,OAAO,QAAQ,IAAI,KAAK,KAAK;AAC9D,SAAK,UAAU,IAAI,aAAa,OAAO,QAAQ,IAAI,KAAK,SAAS,QAAQ,EAAE;AAC3E,SAAK,UAAU,IAAI,cAAc,OAAO,QAAQ,IAAI,KAAK,SAAS,SAAS,EAAE;AAC7E,SAAK,UAAU,IAAI,oBAAoB,OAAO,QAAQ,IAAI,KAAK,SAAS,eAAe,EAAE;AAGzF,SAAK,UAAU,IAAI,uBAAuB,OAAO,QAAQ,IAAI,eAAe,IAAI;AAChF,SAAK,UAAU,IAAI,wBAAwB,OAAO,QAAQ;AACtD,YAAM,UAAU,MAAM,gBAAgB,WAAW,IAAI,YAAY;AACjE,UAAI,SAAS;AACT,eAAO,QAAQ,yBAAyB,IAAI,cAAc;AAAA,MAC9D;AACA,aAAO,IAAI,eAAe;AAAA,IAC9B,CAAC;AACD,SAAK,UAAU,IAAI,wBAAwB,OAAO,QAAQ,IAAI,eAAe,SAAS,aAAa;AAGnG,SAAK,UAAU,IAAI,gBAAgB,OAAO,QAAQ;AAC9C,YAAM,UAAU,MAAM,gBAAgB,WAAW,IAAI,YAAY;AACjE,UAAI,SAAS;AACT,cAAM,SAAS;AAAA,UACX,IAAI,IAAI,eAAe;AAAA,UACvB,iBAAiB;AAAA,UACjB,MAAM;AAAA,UACN,OAAO;AAAA,UACP,OAAO;AAAA,UACP,iBAAiB,CAAC;AAAA,UAClB,WAAW;AAAA,QACf;AACA,eAAO,QAAQ,kBAAkB,MAAM;AAAA,MAC3C;AACA,aAAO;AAAA,IACX,CAAC;AAAA,EACL;AAAA,EAEA,MAAM,iBAAiB,MAAc,SAA2C;AAC5E,QAAI,WAAW;AAGf,UAAM,kBAAkB;AACxB,UAAM,UAAU,MAAM,KAAK,KAAK,SAAS,eAAe,CAAC;AAEzD,eAAW,SAAS,SAAS;AACzB,YAAM,cAAc,MAAM,CAAC;AAC3B,YAAM,eAAe,MAAM,CAAC;AAE5B,YAAM,WAAW,KAAK,UAAU,IAAI,YAAY;AAChD,UAAI,UAAU;AACV,YAAI;AACA,gBAAM,QAAQ,MAAM,SAAS,OAAO;AACpC,qBAAW,SAAS,QAAQ,aAAa,KAAK;AAAA,QAClD,SAAS,OAAO;AACZ,kBAAQ,MAAM,8BAA8B,YAAY,KAAK,KAAK;AAAA,QAEtE;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAAA,EAEA,uBAAuB,MAAc,UAAyD;AAC1F,SAAK,UAAU,IAAI,MAAM,QAAQ;AAAA,EACrC;AAAA,EAEA,wBAAkC;AAC9B,WAAO,MAAM,KAAK,KAAK,UAAU,KAAK,CAAC,EAAE,KAAK;AAAA,EAClD;AACJ;AAEO,aAAM,mBAAmB,IAAI,4BAA4B;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8c0ce9d36b94290527e33bd0d2578a1f7e4564d0"},"/Users/noot/Documents/communique/src/routes/api/civic/routing/+server.ts":{"path":"/Users/noot/Documents/communique/src/routes/api/civic/routing/+server.ts","statementMap":{"0":{"start":{"line":4,"column":20},"end":{"line":41,"column":1}},"1":{"start":{"line":5,"column":2},"end":{"line":40,"column":3}},"2":{"start":{"line":6,"column":22},"end":{"line":6,"column":42}},"3":{"start":{"line":7,"column":40},"end":{"line":7,"column":49}},"4":{"start":{"line":8,"column":24},"end":{"line":8,"column":60}},"5":{"start":{"line":9,"column":4},"end":{"line":11,"column":5}},"6":{"start":{"line":10,"column":6},"end":{"line":10,"column":58}},"7":{"start":{"line":12,"column":58},"end":{"line":12,"column":69}},"8":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"9":{"start":{"line":14,"column":6},"end":{"line":14,"column":51}},"10":{"start":{"line":16,"column":4},"end":{"line":37,"column":5}},"11":{"start":{"line":17,"column":6},"end":{"line":19,"column":7}},"12":{"start":{"line":18,"column":8},"end":{"line":18,"column":74}},"13":{"start":{"line":20,"column":6},"end":{"line":26,"column":9}},"14":{"start":{"line":28,"column":6},"end":{"line":30,"column":7}},"15":{"start":{"line":29,"column":8},"end":{"line":29,"column":76}},"16":{"start":{"line":31,"column":6},"end":{"line":36,"column":9}},"17":{"start":{"line":39,"column":4},"end":{"line":39,"column":65}},"18":{"start":{"line":43,"column":20},"end":{"line":43,"column":41}},"19":{"start":{"line":44,"column":2},"end":{"line":44,"column":54}},"20":{"start":{"line":44,"column":42},"end":{"line":44,"column":54}},"21":{"start":{"line":45,"column":22},"end":{"line":45,"column":44}},"22":{"start":{"line":46,"column":2},"end":{"line":65,"column":3}},"23":{"start":{"line":47,"column":22},"end":{"line":47,"column":46}},"24":{"start":{"line":48,"column":18},"end":{"line":48,"column":51}},"25":{"start":{"line":49,"column":4},"end":{"line":49,"column":28}},"26":{"start":{"line":49,"column":16},"end":{"line":49,"column":28}},"27":{"start":{"line":50,"column":41},"end":{"line":50,"column":46}},"28":{"start":{"line":51,"column":4},"end":{"line":55,"column":6}},"29":{"start":{"line":57,"column":18},"end":{"line":57,"column":53}},"30":{"start":{"line":58,"column":4},"end":{"line":58,"column":28}},"31":{"start":{"line":58,"column":16},"end":{"line":58,"column":28}},"32":{"start":{"line":59,"column":35},"end":{"line":59,"column":40}},"33":{"start":{"line":60,"column":4},"end":{"line":64,"column":6}},"34":{"start":{"line":73,"column":15},"end":{"line":75,"column":4}},"35":{"start":{"line":76,"column":2},"end":{"line":78,"column":3}},"36":{"start":{"line":77,"column":4},"end":{"line":77,"column":40}},"37":{"start":{"line":79,"column":19},"end":{"line":81,"column":4}},"38":{"start":{"line":82,"column":2},"end":{"line":84,"column":3}},"39":{"start":{"line":83,"column":4},"end":{"line":83,"column":44}},"40":{"start":{"line":85,"column":22},"end":{"line":107,"column":3}},"41":{"start":{"line":108,"column":17},"end":{"line":108,"column":77}},"42":{"start":{"line":109,"column":2},"end":{"line":119,"column":5}},"43":{"start":{"line":114,"column":40},"end":{"line":118,"column":5}},"44":{"start":{"line":128,"column":2},"end":{"line":134,"column":5}},"45":{"start":{"line":135,"column":2},"end":{"line":140,"column":5}},"46":{"start":{"line":141,"column":2},"end":{"line":145,"column":5}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":20},"end":{"line":4,"column":21}},"loc":{"start":{"line":4,"column":43},"end":{"line":41,"column":1}},"line":4},"1":{"name":"parseCongressionalRoutingAddress","decl":{"start":{"line":42,"column":9},"end":{"line":42,"column":41}},"loc":{"start":{"line":42,"column":51},"end":{"line":66,"column":1}},"line":42},"2":{"name":"handleAuthenticatedCongressionalRequest","decl":{"start":{"line":67,"column":15},"end":{"line":67,"column":54}},"loc":{"start":{"line":72,"column":3},"end":{"line":120,"column":1}},"line":72},"3":{"name":"(anonymous_3)","decl":{"start":{"line":114,"column":32},"end":{"line":114,"column":33}},"loc":{"start":{"line":114,"column":40},"end":{"line":118,"column":5}},"line":114},"4":{"name":"handleGuestCongressionalRequest","decl":{"start":{"line":121,"column":15},"end":{"line":121,"column":46}},"loc":{"start":{"line":127,"column":3},"end":{"line":146,"column":1}},"line":127},"5":{"name":"storeGuestCongressionalRequest","decl":{"start":{"line":147,"column":15},"end":{"line":147,"column":45}},"loc":{"start":{"line":147,"column":54},"end":{"line":148,"column":1}},"line":147},"6":{"name":"sendOnboardingEmail","decl":{"start":{"line":149,"column":15},"end":{"line":149,"column":34}},"loc":{"start":{"line":149,"column":43},"end":{"line":150,"column":1}},"line":149}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":4},"end":{"line":11,"column":5}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":11,"column":5}},{"start":{},"end":{}}],"line":9},"1":{"loc":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},{"start":{},"end":{}}],"line":13},"2":{"loc":{"start":{"line":16,"column":4},"end":{"line":37,"column":5}},"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":37,"column":5}},{"start":{"line":27,"column":11},"end":{"line":37,"column":5}}],"line":16},"3":{"loc":{"start":{"line":17,"column":6},"end":{"line":19,"column":7}},"type":"if","locations":[{"start":{"line":17,"column":6},"end":{"line":19,"column":7}},{"start":{},"end":{}}],"line":17},"4":{"loc":{"start":{"line":28,"column":6},"end":{"line":30,"column":7}},"type":"if","locations":[{"start":{"line":28,"column":6},"end":{"line":30,"column":7}},{"start":{},"end":{}}],"line":28},"5":{"loc":{"start":{"line":44,"column":2},"end":{"line":44,"column":54}},"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":54}},{"start":{},"end":{}}],"line":44},"6":{"loc":{"start":{"line":46,"column":2},"end":{"line":65,"column":3}},"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":65,"column":3}},{"start":{"line":56,"column":9},"end":{"line":65,"column":3}}],"line":46},"7":{"loc":{"start":{"line":49,"column":4},"end":{"line":49,"column":28}},"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":28}},{"start":{},"end":{}}],"line":49},"8":{"loc":{"start":{"line":58,"column":4},"end":{"line":58,"column":28}},"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":28}},{"start":{},"end":{}}],"line":58},"9":{"loc":{"start":{"line":76,"column":2},"end":{"line":78,"column":3}},"type":"if","locations":[{"start":{"line":76,"column":2},"end":{"line":78,"column":3}},{"start":{},"end":{}}],"line":76},"10":{"loc":{"start":{"line":82,"column":2},"end":{"line":84,"column":3}},"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":84,"column":3}},{"start":{},"end":{}}],"line":82},"11":{"loc":{"start":{"line":89,"column":15},"end":{"line":89,"column":42}},"type":"binary-expr","locations":[{"start":{"line":89,"column":15},"end":{"line":89,"column":31}},{"start":{"line":89,"column":35},"end":{"line":89,"column":42}}],"line":89},"12":{"loc":{"start":{"line":95,"column":12},"end":{"line":95,"column":27}},"type":"binary-expr","locations":[{"start":{"line":95,"column":12},"end":{"line":95,"column":21}},{"start":{"line":95,"column":25},"end":{"line":95,"column":27}}],"line":95},"13":{"loc":{"start":{"line":98,"column":16},"end":{"line":98,"column":33}},"type":"binary-expr","locations":[{"start":{"line":98,"column":16},"end":{"line":98,"column":27}},{"start":{"line":98,"column":31},"end":{"line":98,"column":33}}],"line":98},"14":{"loc":{"start":{"line":99,"column":14},"end":{"line":99,"column":29}},"type":"binary-expr","locations":[{"start":{"line":99,"column":14},"end":{"line":99,"column":23}},{"start":{"line":99,"column":27},"end":{"line":99,"column":29}}],"line":99},"15":{"loc":{"start":{"line":100,"column":15},"end":{"line":100,"column":31}},"type":"binary-expr","locations":[{"start":{"line":100,"column":15},"end":{"line":100,"column":25}},{"start":{"line":100,"column":29},"end":{"line":100,"column":31}}],"line":100},"16":{"loc":{"start":{"line":101,"column":21},"end":{"line":101,"column":35}},"type":"binary-expr","locations":[{"start":{"line":101,"column":21},"end":{"line":101,"column":29}},{"start":{"line":101,"column":33},"end":{"line":101,"column":35}}],"line":101},"17":{"loc":{"start":{"line":111,"column":13},"end":{"line":111,"column":123}},"type":"cond-expr","locations":[{"start":{"line":111,"column":48},"end":{"line":111,"column":92}},{"start":{"line":111,"column":95},"end":{"line":111,"column":123}}],"line":111}},"s":{"0":1,"1":6,"2":6,"3":6,"4":6,"5":6,"6":0,"7":6,"8":6,"9":0,"10":6,"11":1,"12":0,"13":1,"14":5,"15":0,"16":5,"17":0,"18":6,"19":6,"20":0,"21":6,"22":6,"23":1,"24":1,"25":1,"26":0,"27":1,"28":1,"29":5,"30":5,"31":0,"32":5,"33":5,"34":5,"35":5,"36":0,"37":5,"38":5,"39":0,"40":5,"41":5,"42":5,"43":13,"44":1,"45":1,"46":1},"f":{"0":6,"1":6,"2":5,"3":13,"4":1,"5":1,"6":1},"b":{"0":[0,6],"1":[0,6],"2":[1,5],"3":[0,1],"4":[0,5],"5":[0,6],"6":[1,5],"7":[0,1],"8":[0,5],"9":[0,5],"10":[0,5],"11":[5,0],"12":[5,0],"13":[5,0],"14":[5,0],"15":[5,0],"16":[5,0],"17":[4,1]},"inputSourceMap":{"version":3,"sources":["/Users/noot/Documents/communique/src/routes/api/civic/routing/+server.ts"],"sourcesContent":["import { json, error } from '@sveltejs/kit';\nimport { db } from '$lib/core/db';\nimport type { RequestHandler } from './$types';\nimport { deliveryPipeline } from '$lib/core/legislative';\n\n/**\n * Congressional Email Routing Handler\n * \n * This endpoint processes emails sent to congressional routing addresses:\n * - congress.{templateId}.{userId}@communique.org (authenticated users)\n * - congress.{templateId}.guest.{sessionToken}@communique.org (anonymous users)\n * \n * Flow:\n * 1. Parse routing email to extract template ID and user info\n * 2. Look up user's address to determine their representatives\n * 3. Route message to appropriate congressional offices via CWC\n * 4. For guest users, trigger account creation flow\n */\nexport const POST: RequestHandler = async ({ request }) => {\n\ttry {\n\t\tconst emailData = await request.json();\n\t\tconst { to, from, subject, body } = emailData;\n\t\t\n\t\t// Parse the routing address\n\t\tconst routingInfo = parseCongressionalRoutingAddress(to);\n\t\tif (!routingInfo) {\n\t\t\treturn error(400, 'Invalid routing address format');\n\t\t}\n\n\t\tconst { templateId, userId, isGuest, sessionToken } = routingInfo;\n\t\t\n\t\tif (!templateId) {\n\t\t\treturn error(400, 'Template ID is required');\n\t\t}\n\n\t\tif (isGuest) {\n\t\t\t// Handle anonymous user flow\n\t\t\tif (!sessionToken) {\n\t\t\t\treturn error(400, 'Session token is required for guest requests');\n\t\t\t}\n\t\t\treturn await handleGuestCongressionalRequest({\n\t\t\t\ttemplateId,\n\t\t\t\tsessionToken,\n\t\t\t\tsenderEmail: from,\n\t\t\t\tsubject,\n\t\t\t\tbody\n\t\t\t});\n\t\t} else {\n\t\t\t// Handle authenticated user flow\n\t\t\tif (!userId) {\n\t\t\t\treturn error(400, 'User ID is required for authenticated requests');\n\t\t\t}\n\t\t\treturn await handleAuthenticatedCongressionalRequest({\n\t\t\t\ttemplateId,\n\t\t\t\tuserId,\n\t\t\t\tsubject,\n\t\t\t\tbody\n\t\t\t});\n\t\t}\n\n\t} catch (err) {\n\t\treturn error(500, 'Failed to process congressional routing');\n\t}\n};\n\ninterface CongressionalRoutingInfo {\n\ttemplateId: string;\n\tuserId?: string;\n\tisGuest: boolean;\n\tsessionToken?: string;\n}\n\nfunction parseCongressionalRoutingAddress(address: string): CongressionalRoutingInfo | null {\n\t// Format: congress+{templateId}-{userId}@communique.org\n\t// or: congress+guest-{templateId}-{sessionToken}@communique.org\n\n\tconst localPart = address.split('@')[0];\n\tif (!localPart.startsWith('congress+')) return null;\n\n\tconst routingPart = localPart.substring(9); // Remove 'congress+'\n\n\tif (routingPart.startsWith('guest-')) {\n\t\tconst guestPart = routingPart.substring(6); // Remove 'guest-'\n\t\tconst match = guestPart.match(/^([^-]+)-(.+)$/);\n\t\tif (!match) return null;\n\n\t\tconst [, templateId, sessionToken] = match;\n\t\treturn {\n\t\t\ttemplateId,\n\t\t\tisGuest: true,\n\t\t\tsessionToken\n\t\t};\n\t} else {\n\t\tconst match = routingPart.match(/^([^-]+)-(.+)$/);\n\t\tif (!match) return null;\n\n\t\tconst [, templateId, userId] = match;\n\t\treturn {\n\t\t\ttemplateId,\n\t\t\tuserId,\n\t\t\tisGuest: false\n\t\t};\n\t}\n}\n\nasync function handleAuthenticatedCongressionalRequest({\n\ttemplateId,\n\tuserId,\n\tsubject,\n\tbody\n}: {\n\ttemplateId: string;\n\tuserId: string;\n\tsubject: string;\n\tbody: string;\n}) {\n\t// 1. Look up user\n\tconst user = await db.user.findUnique({\n\t\twhere: { id: userId }\n\t});\n\n\tif (!user) {\n\t\treturn error(404, 'User not found');\n\t}\n\n\t// 2. Get template\n\tconst template = await db.template.findUnique({\n\t\twhere: { id: templateId }\n\t});\n\n\tif (!template) {\n\t\treturn error(404, 'Template not found');\n\t}\n\n\t// 3. Use new delivery pipeline\n\tconst deliveryJob = {\n\t\tid: `${templateId}-${userId}-${Date.now()}`,\n\t\ttemplate: {\n\t\t\tid: template.id,\n\t\t\tsubject: template.subject || subject,\n\t\t\tmessage_body: template.message_body,\n\t\t\tvariables: {}\n\t\t},\n\t\tuser: {\n\t\t\tid: user.id,\n\t\t\tname: user.name || '',\n\t\t\temail: user.email,\n\t\t\taddress: {\n\t\t\t\tstreet: user.street || '',\n\t\t\t\tcity: user.city || '',\n\t\t\t\tstate: user.state || '',\n\t\t\t\tpostal_code: user.zip || '',\n\t\t\t\tcountry_code: 'US'\n\t\t\t}\n\t\t},\n\t\tcustom_message: body,\n\t\tcreated_at: new Date()\n\t};\n\n\tconst result = await deliveryPipeline.deliverToRepresentatives(deliveryJob);\n\n\treturn json({\n\t\tsuccess: result.successful_deliveries > 0,\n\t\tmessage: result.successful_deliveries > 0 \n\t\t\t? 'Congressional messages queued for delivery' \n\t\t\t: 'Failed to deliver messages',\n\t\tdeliveryCount: result.successful_deliveries,\n\t\ttotalRecipients: result.total_recipients,\n\t\tresults: result.results.map(r => ({\n\t\t\tsuccess: r.success,\n\t\t\terror: r.error,\n\t\t\trepresentative: r.metadata?.representative\n\t\t}))\n\t});\n}\n\nasync function handleGuestCongressionalRequest({\n\ttemplateId,\n\tsessionToken,\n\tsenderEmail,\n\tsubject,\n\tbody\n}: {\n\ttemplateId: string;\n\tsessionToken: string;\n\tsenderEmail: string;\n\tsubject: string;\n\tbody: string;\n}) {\n\t// 1. Store the request temporarily\n\tawait storeGuestCongressionalRequest({\n\t\ttemplateId,\n\t\tsessionToken,\n\t\tsenderEmail,\n\t\tsubject,\n\t\tbody\n\t});\n\n\t// 2. Send onboarding email to user\n\tawait sendOnboardingEmail({\n\t\temail: senderEmail,\n\t\ttemplateId,\n\t\tsessionToken,\n\t\tsubject\n\t});\n\n\treturn json({\n\t\tsuccess: true,\n\t\tmessage: 'Onboarding email sent. Complete your account to deliver your message to Congress.',\n\t\tnextStep: 'check_email'\n\t});\n}\n\n// Helper functions (kept for guest flow compatibility)\nasync function storeGuestCongressionalRequest(params: Record<string, unknown>) {\n\t// TODO: Store pending request in database\n}\n\nasync function sendOnboardingEmail(params: Record<string, unknown>) {\n\t// TODO: Send onboarding email with account creation link\n} "],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ba0047bd881a06d059dba12edec5a962eca42c49"}}