{"/Users/noot/Documents/communique/src/lib/stores/templates.ts":{"path":"/Users/noot/Documents/communique/src/lib/stores/templates.ts","statementMap":{"0":{"start":{"line":3,"column":37},"end":{"line":9,"column":4}},"1":{"start":{"line":10,"column":2},"end":{"line":151,"column":4}},"2":{"start":{"line":14,"column":6},"end":{"line":14,"column":56}},"3":{"start":{"line":14,"column":25},"end":{"line":14,"column":53}},"4":{"start":{"line":17,"column":6},"end":{"line":23,"column":9}},"5":{"start":{"line":18,"column":25},"end":{"line":18,"column":69}},"6":{"start":{"line":18,"column":53},"end":{"line":18,"column":68}},"7":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"8":{"start":{"line":20,"column":10},"end":{"line":20,"column":55}},"9":{"start":{"line":22,"column":8},"end":{"line":22,"column":21}},"10":{"start":{"line":27,"column":6},"end":{"line":32,"column":9}},"11":{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},"12":{"start":{"line":29,"column":10},"end":{"line":29,"column":65}},"13":{"start":{"line":31,"column":8},"end":{"line":31,"column":21}},"14":{"start":{"line":36,"column":6},"end":{"line":36,"column":68}},"15":{"start":{"line":36,"column":25},"end":{"line":36,"column":65}},"16":{"start":{"line":37,"column":6},"end":{"line":67,"column":7}},"17":{"start":{"line":38,"column":33},"end":{"line":38,"column":69}},"18":{"start":{"line":39,"column":23},"end":{"line":39,"column":48}},"19":{"start":{"line":40,"column":8},"end":{"line":40,"column":53}},"20":{"start":{"line":41,"column":8},"end":{"line":44,"column":9}},"21":{"start":{"line":42,"column":10},"end":{"line":42,"column":62}},"22":{"start":{"line":43,"column":10},"end":{"line":43,"column":71}},"23":{"start":{"line":45,"column":21},"end":{"line":45,"column":32}},"24":{"start":{"line":46,"column":8},"end":{"line":59,"column":11}},"25":{"start":{"line":47,"column":27},"end":{"line":54,"column":11}},"26":{"start":{"line":55,"column":10},"end":{"line":57,"column":11}},"27":{"start":{"line":55,"column":56},"end":{"line":55,"column":84}},"28":{"start":{"line":56,"column":12},"end":{"line":56,"column":54}},"29":{"start":{"line":58,"column":10},"end":{"line":58,"column":26}},"30":{"start":{"line":61,"column":8},"end":{"line":61,"column":52}},"31":{"start":{"line":62,"column":8},"end":{"line":66,"column":12}},"32":{"start":{"line":62,"column":27},"end":{"line":66,"column":9}},"33":{"start":{"line":71,"column":6},"end":{"line":92,"column":7}},"34":{"start":{"line":72,"column":33},"end":{"line":72,"column":69}},"35":{"start":{"line":73,"column":23},"end":{"line":73,"column":58}},"36":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"37":{"start":{"line":75,"column":10},"end":{"line":75,"column":71}},"38":{"start":{"line":77,"column":28},"end":{"line":77,"column":39}},"39":{"start":{"line":78,"column":8},"end":{"line":84,"column":12}},"40":{"start":{"line":78,"column":27},"end":{"line":84,"column":9}},"41":{"start":{"line":85,"column":8},"end":{"line":85,"column":27}},"42":{"start":{"line":87,"column":8},"end":{"line":90,"column":12}},"43":{"start":{"line":87,"column":27},"end":{"line":90,"column":9}},"44":{"start":{"line":91,"column":8},"end":{"line":91,"column":18}},"45":{"start":{"line":95,"column":6},"end":{"line":114,"column":7}},"46":{"start":{"line":96,"column":33},"end":{"line":96,"column":69}},"47":{"start":{"line":97,"column":23},"end":{"line":97,"column":61}},"48":{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},"49":{"start":{"line":99,"column":10},"end":{"line":99,"column":71}},"50":{"start":{"line":101,"column":32},"end":{"line":101,"column":43}},"51":{"start":{"line":102,"column":8},"end":{"line":106,"column":12}},"52":{"start":{"line":102,"column":27},"end":{"line":106,"column":9}},"53":{"start":{"line":104,"column":48},"end":{"line":104,"column":81}},"54":{"start":{"line":107,"column":8},"end":{"line":107,"column":31}},"55":{"start":{"line":109,"column":8},"end":{"line":112,"column":12}},"56":{"start":{"line":109,"column":27},"end":{"line":112,"column":9}},"57":{"start":{"line":113,"column":8},"end":{"line":113,"column":18}},"58":{"start":{"line":117,"column":6},"end":{"line":139,"column":7}},"59":{"start":{"line":118,"column":33},"end":{"line":118,"column":69}},"60":{"start":{"line":119,"column":23},"end":{"line":119,"column":52}},"61":{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},"62":{"start":{"line":121,"column":10},"end":{"line":121,"column":71}},"63":{"start":{"line":123,"column":8},"end":{"line":132,"column":11}},"64":{"start":{"line":124,"column":31},"end":{"line":124,"column":73}},"65":{"start":{"line":124,"column":61},"end":{"line":124,"column":72}},"66":{"start":{"line":125,"column":32},"end":{"line":125,"column":104}},"67":{"start":{"line":126,"column":10},"end":{"line":131,"column":12}},"68":{"start":{"line":134,"column":8},"end":{"line":137,"column":12}},"69":{"start":{"line":134,"column":27},"end":{"line":137,"column":9}},"70":{"start":{"line":138,"column":8},"end":{"line":138,"column":18}},"71":{"start":{"line":143,"column":6},"end":{"line":149,"column":9}},"72":{"start":{"line":153,"column":29},"end":{"line":153,"column":50}},"73":{"start":{"line":154,"column":32},"end":{"line":157,"column":1}},"74":{"start":{"line":156,"column":14},"end":{"line":156,"column":70}},"75":{"start":{"line":156,"column":43},"end":{"line":156,"column":69}},"76":{"start":{"line":158,"column":25},"end":{"line":158,"column":75}},"77":{"start":{"line":158,"column":60},"end":{"line":158,"column":74}},"78":{"start":{"line":159,"column":24},"end":{"line":159,"column":74}},"79":{"start":{"line":159,"column":59},"end":{"line":159,"column":73}},"80":{"start":{"line":160,"column":29},"end":{"line":160,"column":83}},"81":{"start":{"line":160,"column":64},"end":{"line":160,"column":82}}},"fnMap":{"0":{"name":"createTemplateStore","decl":{"start":{"line":2,"column":9},"end":{"line":2,"column":28}},"loc":{"start":{"line":2,"column":31},"end":{"line":152,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":20},"end":{"line":13,"column":21}},"loc":{"start":{"line":13,"column":28},"end":{"line":15,"column":5}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":13},"end":{"line":14,"column":14}},"loc":{"start":{"line":14,"column":25},"end":{"line":14,"column":53}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":16,"column":26},"end":{"line":16,"column":27}},"loc":{"start":{"line":16,"column":36},"end":{"line":24,"column":5}},"line":16},"4":{"name":"(anonymous_4)","decl":{"start":{"line":17,"column":13},"end":{"line":17,"column":14}},"loc":{"start":{"line":17,"column":24},"end":{"line":23,"column":7}},"line":17},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":46},"end":{"line":18,"column":47}},"loc":{"start":{"line":18,"column":53},"end":{"line":18,"column":68}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":22},"end":{"line":33,"column":5}},"line":26},"7":{"name":"(anonymous_7)","decl":{"start":{"line":27,"column":13},"end":{"line":27,"column":14}},"loc":{"start":{"line":27,"column":24},"end":{"line":32,"column":7}},"line":27},"8":{"name":"(anonymous_8)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":27},"end":{"line":68,"column":5}},"line":35},"9":{"name":"(anonymous_9)","decl":{"start":{"line":36,"column":13},"end":{"line":36,"column":14}},"loc":{"start":{"line":36,"column":25},"end":{"line":36,"column":65}},"line":36},"10":{"name":"(anonymous_10)","decl":{"start":{"line":46,"column":15},"end":{"line":46,"column":16}},"loc":{"start":{"line":46,"column":26},"end":{"line":59,"column":9}},"line":46},"11":{"name":"(anonymous_11)","decl":{"start":{"line":55,"column":49},"end":{"line":55,"column":50}},"loc":{"start":{"line":55,"column":56},"end":{"line":55,"column":84}},"line":55},"12":{"name":"(anonymous_12)","decl":{"start":{"line":62,"column":15},"end":{"line":62,"column":16}},"loc":{"start":{"line":62,"column":27},"end":{"line":66,"column":9}},"line":62},"13":{"name":"(anonymous_13)","decl":{"start":{"line":70,"column":4},"end":{"line":70,"column":5}},"loc":{"start":{"line":70,"column":32},"end":{"line":93,"column":5}},"line":70},"14":{"name":"(anonymous_14)","decl":{"start":{"line":78,"column":15},"end":{"line":78,"column":16}},"loc":{"start":{"line":78,"column":27},"end":{"line":84,"column":9}},"line":78},"15":{"name":"(anonymous_15)","decl":{"start":{"line":87,"column":15},"end":{"line":87,"column":16}},"loc":{"start":{"line":87,"column":27},"end":{"line":90,"column":9}},"line":87},"16":{"name":"(anonymous_16)","decl":{"start":{"line":94,"column":4},"end":{"line":94,"column":5}},"loc":{"start":{"line":94,"column":38},"end":{"line":115,"column":5}},"line":94},"17":{"name":"(anonymous_17)","decl":{"start":{"line":102,"column":15},"end":{"line":102,"column":16}},"loc":{"start":{"line":102,"column":27},"end":{"line":106,"column":9}},"line":102},"18":{"name":"(anonymous_18)","decl":{"start":{"line":104,"column":41},"end":{"line":104,"column":42}},"loc":{"start":{"line":104,"column":48},"end":{"line":104,"column":81}},"line":104},"19":{"name":"(anonymous_19)","decl":{"start":{"line":109,"column":15},"end":{"line":109,"column":16}},"loc":{"start":{"line":109,"column":27},"end":{"line":112,"column":9}},"line":109},"20":{"name":"(anonymous_20)","decl":{"start":{"line":116,"column":4},"end":{"line":116,"column":5}},"loc":{"start":{"line":116,"column":29},"end":{"line":140,"column":5}},"line":116},"21":{"name":"(anonymous_21)","decl":{"start":{"line":123,"column":15},"end":{"line":123,"column":16}},"loc":{"start":{"line":123,"column":26},"end":{"line":132,"column":9}},"line":123},"22":{"name":"(anonymous_22)","decl":{"start":{"line":124,"column":54},"end":{"line":124,"column":55}},"loc":{"start":{"line":124,"column":61},"end":{"line":124,"column":72}},"line":124},"23":{"name":"(anonymous_23)","decl":{"start":{"line":134,"column":15},"end":{"line":134,"column":16}},"loc":{"start":{"line":134,"column":27},"end":{"line":137,"column":9}},"line":134},"24":{"name":"(anonymous_24)","decl":{"start":{"line":142,"column":11},"end":{"line":142,"column":12}},"loc":{"start":{"line":142,"column":17},"end":{"line":150,"column":5}},"line":142},"25":{"name":"(anonymous_25)","decl":{"start":{"line":156,"column":2},"end":{"line":156,"column":3}},"loc":{"start":{"line":156,"column":14},"end":{"line":156,"column":70}},"line":156},"26":{"name":"(anonymous_26)","decl":{"start":{"line":156,"column":36},"end":{"line":156,"column":37}},"loc":{"start":{"line":156,"column":43},"end":{"line":156,"column":69}},"line":156},"27":{"name":"(anonymous_27)","decl":{"start":{"line":158,"column":48},"end":{"line":158,"column":49}},"loc":{"start":{"line":158,"column":60},"end":{"line":158,"column":74}},"line":158},"28":{"name":"(anonymous_28)","decl":{"start":{"line":159,"column":47},"end":{"line":159,"column":48}},"loc":{"start":{"line":159,"column":59},"end":{"line":159,"column":73}},"line":159},"29":{"name":"(anonymous_29)","decl":{"start":{"line":160,"column":52},"end":{"line":160,"column":53}},"loc":{"start":{"line":160,"column":64},"end":{"line":160,"column":82}},"line":160}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},{"start":{},"end":{}}],"line":19},"1":{"loc":{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},{"start":{},"end":{}}],"line":28},"2":{"loc":{"start":{"line":28,"column":12},"end":{"line":28,"column":59}},"type":"binary-expr","locations":[{"start":{"line":28,"column":12},"end":{"line":28,"column":38}},{"start":{"line":28,"column":42},"end":{"line":28,"column":59}}],"line":28},"3":{"loc":{"start":{"line":41,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":44,"column":9}},{"start":{},"end":{}}],"line":41},"4":{"loc":{"start":{"line":43,"column":26},"end":{"line":43,"column":69}},"type":"binary-expr","locations":[{"start":{"line":43,"column":26},"end":{"line":43,"column":38}},{"start":{"line":43,"column":42},"end":{"line":43,"column":69}}],"line":43},"5":{"loc":{"start":{"line":55,"column":10},"end":{"line":57,"column":11}},"type":"if","locations":[{"start":{"line":55,"column":10},"end":{"line":57,"column":11}},{"start":{},"end":{}}],"line":55},"6":{"loc":{"start":{"line":55,"column":14},"end":{"line":55,"column":85}},"type":"binary-expr","locations":[{"start":{"line":55,"column":14},"end":{"line":55,"column":34}},{"start":{"line":55,"column":38},"end":{"line":55,"column":85}}],"line":55},"7":{"loc":{"start":{"line":56,"column":34},"end":{"line":56,"column":53}},"type":"binary-expr","locations":[{"start":{"line":56,"column":34},"end":{"line":56,"column":45}},{"start":{"line":56,"column":49},"end":{"line":56,"column":53}}],"line":56},"8":{"loc":{"start":{"line":65,"column":17},"end":{"line":65,"column":81}},"type":"cond-expr","locations":[{"start":{"line":65,"column":40},"end":{"line":65,"column":51}},{"start":{"line":65,"column":54},"end":{"line":65,"column":81}}],"line":65},"9":{"loc":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},{"start":{},"end":{}}],"line":74},"10":{"loc":{"start":{"line":75,"column":26},"end":{"line":75,"column":69}},"type":"binary-expr","locations":[{"start":{"line":75,"column":26},"end":{"line":75,"column":38}},{"start":{"line":75,"column":42},"end":{"line":75,"column":69}}],"line":75},"11":{"loc":{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},"type":"if","locations":[{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},{"start":{},"end":{}}],"line":98},"12":{"loc":{"start":{"line":99,"column":26},"end":{"line":99,"column":69}},"type":"binary-expr","locations":[{"start":{"line":99,"column":26},"end":{"line":99,"column":38}},{"start":{"line":99,"column":42},"end":{"line":99,"column":69}}],"line":99},"13":{"loc":{"start":{"line":104,"column":48},"end":{"line":104,"column":81}},"type":"cond-expr","locations":[{"start":{"line":104,"column":62},"end":{"line":104,"column":77}},{"start":{"line":104,"column":80},"end":{"line":104,"column":81}}],"line":104},"14":{"loc":{"start":{"line":111,"column":17},"end":{"line":111,"column":81}},"type":"cond-expr","locations":[{"start":{"line":111,"column":40},"end":{"line":111,"column":51}},{"start":{"line":111,"column":54},"end":{"line":111,"column":81}}],"line":111},"15":{"loc":{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},"type":"if","locations":[{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},{"start":{},"end":{}}],"line":120},"16":{"loc":{"start":{"line":121,"column":26},"end":{"line":121,"column":69}},"type":"binary-expr","locations":[{"start":{"line":121,"column":26},"end":{"line":121,"column":38}},{"start":{"line":121,"column":42},"end":{"line":121,"column":69}}],"line":121},"17":{"loc":{"start":{"line":125,"column":32},"end":{"line":125,"column":104}},"type":"cond-expr","locations":[{"start":{"line":125,"column":58},"end":{"line":125,"column":85}},{"start":{"line":125,"column":88},"end":{"line":125,"column":104}}],"line":125},"18":{"loc":{"start":{"line":125,"column":58},"end":{"line":125,"column":85}},"type":"binary-expr","locations":[{"start":{"line":125,"column":58},"end":{"line":125,"column":77}},{"start":{"line":125,"column":81},"end":{"line":125,"column":85}}],"line":125},"19":{"loc":{"start":{"line":136,"column":17},"end":{"line":136,"column":81}},"type":"cond-expr","locations":[{"start":{"line":136,"column":40},"end":{"line":136,"column":51}},{"start":{"line":136,"column":54},"end":{"line":136,"column":81}}],"line":136}},"s":{"0":1,"1":1,"2":10,"3":10,"4":2,"5":2,"6":4,"7":2,"8":1,"9":1,"10":2,"11":2,"12":1,"13":1,"14":25,"15":25,"16":25,"17":25,"18":25,"19":24,"20":24,"21":2,"22":2,"23":22,"24":22,"25":22,"26":22,"27":4,"28":20,"29":22,"30":3,"31":3,"32":3,"33":2,"34":2,"35":2,"36":2,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":2,"46":2,"47":2,"48":2,"49":1,"50":1,"51":1,"52":1,"53":2,"54":1,"55":1,"56":1,"57":1,"58":4,"59":4,"60":4,"61":4,"62":1,"63":3,"64":3,"65":5,"66":3,"67":3,"68":1,"69":1,"70":1,"71":26,"72":1,"73":1,"74":3,"75":4,"76":1,"77":1,"78":1,"79":3,"80":1,"81":2},"f":{"0":1,"1":10,"2":10,"3":2,"4":2,"5":4,"6":2,"7":2,"8":25,"9":25,"10":22,"11":4,"12":3,"13":2,"14":1,"15":1,"16":2,"17":1,"18":2,"19":1,"20":4,"21":3,"22":5,"23":1,"24":26,"25":3,"26":4,"27":1,"28":3,"29":2},"b":{"0":[1,1],"1":[1,1],"2":[2,2],"3":[2,22],"4":[2,0],"5":[20,2],"6":[22,3],"7":[20,0],"8":[3,0],"9":[1,1],"10":[1,0],"11":[1,1],"12":[1,0],"13":[1,1],"14":[1,0],"15":[1,3],"16":[1,0],"17":[3,0],"18":[3,1],"19":[1,0]},"inputSourceMap":{"version":3,"sources":["/Users/noot/Documents/communique/src/lib/stores/templates.ts"],"sourcesContent":["import { writable, derived } from 'svelte/store';\nimport type { Template } from '$lib/types/template';\n\ninterface TemplateState {\n\ttemplates: Template[];\n\tselectedId: string | null;\n\tloading: boolean;\n\terror: string | null;\n\tlastUpdated?: Date;\n\tinitialized: boolean;\n}\n\nfunction createTemplateStore() {\n\tconst { subscribe, set, update } = writable<TemplateState>({\n\t\ttemplates: [],\n\t\tselectedId: null,\n\t\tloading: false,\n\t\terror: null,\n\t\tinitialized: false\n\t});\n\n\treturn {\n\t\tsubscribe,\n\t\t\n\n\t\t// Core template management\n\t\tselectTemplate: (id: string) => {\n\t\t\tupdate((state) => ({ ...state, selectedId: id }));\n\t\t},\n\t\t\n\t\tselectTemplateBySlug: (slug: string) => {\n\t\t\tupdate((state) => {\n\t\t\t\tconst template = state.templates.find(t => t.slug === slug);\n\t\t\t\tif (template) {\n\t\t\t\t\treturn { ...state, selectedId: template.id };\n\t\t\t\t}\n\t\t\t\treturn state;\n\t\t\t});\n\t\t},\n\n\t\t// Auto-select first template when templates change\n\t\tautoSelectFirst() {\n\t\t\tupdate((state) => {\n\t\t\t\tif (state.templates.length > 0 && !state.selectedId) {\n\t\t\t\t\treturn { ...state, selectedId: state.templates[0].id };\n\t\t\t\t}\n\t\t\t\treturn state;\n\t\t\t});\n\t\t},\n\n\t\t// API Integration with progressive enhancement\n\t\tasync fetchTemplates() {\n\t\t\tupdate((state) => ({ ...state, loading: true, error: null }));\n\t\t\ttry {\n\t\t\t\tconst { templatesApi } = await import('$lib/utils/apiClient');\n\t\t\t\tconst result = await templatesApi.list();\n\t\t\t\tconsole.log('Templates API result:', result);\n\t\t\t\tif (!result.success) {\n\t\t\t\t\tconsole.error('Templates API error:', result.error);\n\t\t\t\t\tthrow new Error(result.error || 'Failed to fetch templates');\n\t\t\t\t}\n\t\t\t\tconst data = result.data;\n\t\t\t\t\n\t\t\t\tupdate((state) => {\n\t\t\t\t\tconst newState = {\n\t\t\t\t\t\t...state,\n\t\t\t\t\t\ttemplates: data,\n\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\terror: null,\n\t\t\t\t\t\tlastUpdated: new Date(),\n\t\t\t\t\t\tinitialized: true\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\t// Auto-select first template if none selected or selected template no longer exists\n\t\t\t\t\tif (!newState.selectedId || !data.find((t: Template) => t.id === newState.selectedId)) {\n\t\t\t\t\t\tnewState.selectedId = data[0]?.id || null;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn newState;\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error('Template fetch error:', err);\n\t\t\t\tupdate((state) => ({\n\t\t\t\t\t...state,\n\t\t\t\t\tloading: false,\n\t\t\t\t\terror: err instanceof Error ? err.message : 'Failed to fetch templates'\n\t\t\t\t}));\n\t\t\t\t\n\t\t\t\t// No fallback to static data - API-only approach\n\t\t\t}\n\t\t},\n\n\t\t// Template CRUD operations\n\t\tasync addTemplate(template: Omit<Template, 'id'>) {\n\t\t\ttry {\n\t\t\t\tconst { templatesApi } = await import('$lib/utils/apiClient');\n\t\t\t\tconst result = await templatesApi.create(template);\n\n\t\t\t\tif (!result.success) {\n\t\t\t\t\tthrow new Error(result.error || 'Failed to create template');\n\t\t\t\t}\n\n\t\t\t\tconst newTemplate = result.data;\n\t\t\t\tupdate((store) => ({\n\t\t\t\t\t...store,\n\t\t\t\t\ttemplates: [...store.templates, newTemplate],\n\t\t\t\t\tselectedId: newTemplate.id, // Auto-select newly created template\n\t\t\t\t\terror: null\n\t\t\t\t}));\n\n\t\t\t\treturn newTemplate;\n\t\t\t} catch (err) {\n\t\t\t\tupdate((store) => ({\n\t\t\t\t\t...store,\n\t\t\t\t\terror: 'Template could not be added.'\n\t\t\t\t}));\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t},\n\n\t\tasync updateTemplate(id: string, updates: Partial<Template>) {\n\t\t\ttry {\n\t\t\t\tconst { templatesApi } = await import('$lib/utils/apiClient');\n\t\t\t\tconst result = await templatesApi.update(id, updates);\n\n\t\t\t\tif (!result.success) {\n\t\t\t\t\tthrow new Error(result.error || 'Failed to update template');\n\t\t\t\t}\n\n\t\t\t\tconst updatedTemplate = result.data;\n\t\t\t\tupdate((store) => ({\n\t\t\t\t\t...store,\n\t\t\t\t\ttemplates: store.templates.map((t) => (t.id === id ? updatedTemplate : t)),\n\t\t\t\t\terror: null\n\t\t\t\t}));\n\n\t\t\t\treturn updatedTemplate;\n\t\t\t} catch (err) {\n\t\t\t\tupdate((store) => ({\n\t\t\t\t\t...store,\n\t\t\t\t\terror: err instanceof Error ? err.message : 'Failed to update template'\n\t\t\t\t}));\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t},\n\n\t\tasync deleteTemplate(id: string) {\n\t\t\ttry {\n\t\t\t\tconst { templatesApi } = await import('$lib/utils/apiClient');\n\t\t\t\tconst result = await templatesApi.delete(id);\n\n\t\t\t\tif (!result.success) {\n\t\t\t\t\tthrow new Error(result.error || 'Failed to delete template');\n\t\t\t\t}\n\n\t\t\t\tupdate((store) => {\n\t\t\t\t\tconst newTemplates = store.templates.filter((t) => t.id !== id);\n\t\t\t\t\tconst newSelectedId = store.selectedId === id ? (newTemplates[0]?.id || null) : store.selectedId;\n\t\t\t\t\t\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...store,\n\t\t\t\t\t\ttemplates: newTemplates,\n\t\t\t\t\t\tselectedId: newSelectedId,\n\t\t\t\t\t\terror: null\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\tupdate((store) => ({\n\t\t\t\t\t...store,\n\t\t\t\t\terror: err instanceof Error ? err.message : 'Failed to delete template'\n\t\t\t\t}));\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t},\n\n\t\t// Development helpers\n\t\treset: () => {\n\t\t\tset({\n\t\t\t\ttemplates: [],\n\t\t\t\tselectedId: null,\n\t\t\t\tloading: false,\n\t\t\t\terror: null,\n\t\t\t\tinitialized: false\n\t\t\t});\n\t\t}\n\t};\n}\n\nexport const templateStore = createTemplateStore();\n\nexport const selectedTemplate = derived(\n\ttemplateStore,\n\t($store) => $store.templates.find((t) => t.id === $store.selectedId)\n);\n\n// Helper derived stores for better UX\nexport const isLoading = derived(templateStore, ($store) => $store.loading);\nexport const hasError = derived(templateStore, ($store) => !!$store.error);\nexport const isInitialized = derived(templateStore, ($store) => $store.initialized);\n\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d9966d74aacf02f0946269e0bcf982a82513a67c"}}