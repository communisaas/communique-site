{"/Users/noot/Documents/communique/src/routes/api/civic/routing/+server.ts":{"path":"/Users/noot/Documents/communique/src/routes/api/civic/routing/+server.ts","statementMap":{"0":{"start":{"line":4,"column":20},"end":{"line":41,"column":1}},"1":{"start":{"line":5,"column":2},"end":{"line":40,"column":3}},"2":{"start":{"line":6,"column":22},"end":{"line":6,"column":42}},"3":{"start":{"line":7,"column":40},"end":{"line":7,"column":49}},"4":{"start":{"line":8,"column":24},"end":{"line":8,"column":60}},"5":{"start":{"line":9,"column":4},"end":{"line":11,"column":5}},"6":{"start":{"line":10,"column":6},"end":{"line":10,"column":58}},"7":{"start":{"line":12,"column":58},"end":{"line":12,"column":69}},"8":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"9":{"start":{"line":14,"column":6},"end":{"line":14,"column":51}},"10":{"start":{"line":16,"column":4},"end":{"line":37,"column":5}},"11":{"start":{"line":17,"column":6},"end":{"line":19,"column":7}},"12":{"start":{"line":18,"column":8},"end":{"line":18,"column":74}},"13":{"start":{"line":20,"column":6},"end":{"line":26,"column":9}},"14":{"start":{"line":28,"column":6},"end":{"line":30,"column":7}},"15":{"start":{"line":29,"column":8},"end":{"line":29,"column":76}},"16":{"start":{"line":31,"column":6},"end":{"line":36,"column":9}},"17":{"start":{"line":39,"column":4},"end":{"line":39,"column":65}},"18":{"start":{"line":43,"column":20},"end":{"line":43,"column":41}},"19":{"start":{"line":44,"column":2},"end":{"line":44,"column":54}},"20":{"start":{"line":44,"column":42},"end":{"line":44,"column":54}},"21":{"start":{"line":45,"column":22},"end":{"line":45,"column":44}},"22":{"start":{"line":46,"column":2},"end":{"line":65,"column":3}},"23":{"start":{"line":47,"column":22},"end":{"line":47,"column":46}},"24":{"start":{"line":48,"column":18},"end":{"line":48,"column":51}},"25":{"start":{"line":49,"column":4},"end":{"line":49,"column":28}},"26":{"start":{"line":49,"column":16},"end":{"line":49,"column":28}},"27":{"start":{"line":50,"column":41},"end":{"line":50,"column":46}},"28":{"start":{"line":51,"column":4},"end":{"line":55,"column":6}},"29":{"start":{"line":57,"column":18},"end":{"line":57,"column":53}},"30":{"start":{"line":58,"column":4},"end":{"line":58,"column":28}},"31":{"start":{"line":58,"column":16},"end":{"line":58,"column":28}},"32":{"start":{"line":59,"column":35},"end":{"line":59,"column":40}},"33":{"start":{"line":60,"column":4},"end":{"line":64,"column":6}},"34":{"start":{"line":73,"column":15},"end":{"line":82,"column":4}},"35":{"start":{"line":83,"column":2},"end":{"line":85,"column":3}},"36":{"start":{"line":84,"column":4},"end":{"line":84,"column":40}},"37":{"start":{"line":86,"column":24},"end":{"line":86,"column":73}},"38":{"start":{"line":86,"column":56},"end":{"line":86,"column":72}},"39":{"start":{"line":87,"column":2},"end":{"line":94,"column":3}},"40":{"start":{"line":88,"column":4},"end":{"line":93,"column":7}},"41":{"start":{"line":95,"column":26},"end":{"line":101,"column":4}},"42":{"start":{"line":102,"column":2},"end":{"line":106,"column":5}},"43":{"start":{"line":115,"column":2},"end":{"line":121,"column":5}},"44":{"start":{"line":122,"column":2},"end":{"line":127,"column":5}},"45":{"start":{"line":128,"column":2},"end":{"line":132,"column":5}},"46":{"start":{"line":135,"column":2},"end":{"line":161,"column":3}},"47":{"start":{"line":136,"column":30},"end":{"line":136,"column":74}},"48":{"start":{"line":137,"column":26},"end":{"line":142,"column":5}},"49":{"start":{"line":143,"column":21},"end":{"line":143,"column":75}},"50":{"start":{"line":144,"column":4},"end":{"line":157,"column":6}},"51":{"start":{"line":151,"column":43},"end":{"line":156,"column":7}},"52":{"start":{"line":159,"column":4},"end":{"line":159,"column":59}},"53":{"start":{"line":160,"column":4},"end":{"line":160,"column":14}},"54":{"start":{"line":170,"column":26},"end":{"line":170,"column":28}},"55":{"start":{"line":171,"column":19},"end":{"line":174,"column":4}},"56":{"start":{"line":175,"column":2},"end":{"line":176,"column":3}},"57":{"start":{"line":177,"column":28},"end":{"line":177,"column":109}},"58":{"start":{"line":178,"column":2},"end":{"line":235,"column":3}},"59":{"start":{"line":179,"column":29},"end":{"line":179,"column":75}},"60":{"start":{"line":180,"column":4},"end":{"line":234,"column":5}},"61":{"start":{"line":181,"column":28},"end":{"line":181,"column":68}},"62":{"start":{"line":182,"column":34},"end":{"line":191,"column":7}},"63":{"start":{"line":192,"column":36},"end":{"line":204,"column":7}},"64":{"start":{"line":206,"column":6},"end":{"line":220,"column":7}},"65":{"start":{"line":207,"column":8},"end":{"line":212,"column":10}},"66":{"start":{"line":214,"column":8},"end":{"line":219,"column":10}},"67":{"start":{"line":221,"column":6},"end":{"line":226,"column":9}},"68":{"start":{"line":228,"column":6},"end":{"line":228,"column":64}},"69":{"start":{"line":229,"column":6},"end":{"line":233,"column":9}},"70":{"start":{"line":236,"column":2},"end":{"line":236,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":20},"end":{"line":4,"column":21}},"loc":{"start":{"line":4,"column":43},"end":{"line":41,"column":1}},"line":4},"1":{"name":"parseCongressionalRoutingAddress","decl":{"start":{"line":42,"column":9},"end":{"line":42,"column":41}},"loc":{"start":{"line":42,"column":51},"end":{"line":66,"column":1}},"line":42},"2":{"name":"handleAuthenticatedCongressionalRequest","decl":{"start":{"line":67,"column":15},"end":{"line":67,"column":54}},"loc":{"start":{"line":72,"column":3},"end":{"line":107,"column":1}},"line":72},"3":{"name":"(anonymous_3)","decl":{"start":{"line":86,"column":49},"end":{"line":86,"column":50}},"loc":{"start":{"line":86,"column":56},"end":{"line":86,"column":72}},"line":86},"4":{"name":"handleGuestCongressionalRequest","decl":{"start":{"line":108,"column":15},"end":{"line":108,"column":46}},"loc":{"start":{"line":114,"column":3},"end":{"line":133,"column":1}},"line":114},"5":{"name":"lookupRepresentativesByAddress","decl":{"start":{"line":134,"column":15},"end":{"line":134,"column":45}},"loc":{"start":{"line":134,"column":55},"end":{"line":162,"column":1}},"line":134},"6":{"name":"(anonymous_6)","decl":{"start":{"line":151,"column":29},"end":{"line":151,"column":30}},"loc":{"start":{"line":151,"column":43},"end":{"line":156,"column":7}},"line":151},"7":{"name":"routeToRepresentatives","decl":{"start":{"line":163,"column":15},"end":{"line":163,"column":37}},"loc":{"start":{"line":169,"column":3},"end":{"line":237,"column":1}},"line":169},"8":{"name":"storeGuestCongressionalRequest","decl":{"start":{"line":238,"column":15},"end":{"line":238,"column":45}},"loc":{"start":{"line":238,"column":54},"end":{"line":239,"column":1}},"line":238},"9":{"name":"sendOnboardingEmail","decl":{"start":{"line":240,"column":15},"end":{"line":240,"column":34}},"loc":{"start":{"line":240,"column":43},"end":{"line":241,"column":1}},"line":240}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":4},"end":{"line":11,"column":5}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":11,"column":5}},{"start":{},"end":{}}],"line":9},"1":{"loc":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},{"start":{},"end":{}}],"line":13},"2":{"loc":{"start":{"line":16,"column":4},"end":{"line":37,"column":5}},"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":37,"column":5}},{"start":{"line":27,"column":11},"end":{"line":37,"column":5}}],"line":16},"3":{"loc":{"start":{"line":17,"column":6},"end":{"line":19,"column":7}},"type":"if","locations":[{"start":{"line":17,"column":6},"end":{"line":19,"column":7}},{"start":{},"end":{}}],"line":17},"4":{"loc":{"start":{"line":28,"column":6},"end":{"line":30,"column":7}},"type":"if","locations":[{"start":{"line":28,"column":6},"end":{"line":30,"column":7}},{"start":{},"end":{}}],"line":28},"5":{"loc":{"start":{"line":44,"column":2},"end":{"line":44,"column":54}},"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":54}},{"start":{},"end":{}}],"line":44},"6":{"loc":{"start":{"line":46,"column":2},"end":{"line":65,"column":3}},"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":65,"column":3}},{"start":{"line":56,"column":9},"end":{"line":65,"column":3}}],"line":46},"7":{"loc":{"start":{"line":49,"column":4},"end":{"line":49,"column":28}},"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":28}},{"start":{},"end":{}}],"line":49},"8":{"loc":{"start":{"line":58,"column":4},"end":{"line":58,"column":28}},"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":28}},{"start":{},"end":{}}],"line":58},"9":{"loc":{"start":{"line":83,"column":2},"end":{"line":85,"column":3}},"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":85,"column":3}},{"start":{},"end":{}}],"line":83},"10":{"loc":{"start":{"line":87,"column":2},"end":{"line":94,"column":3}},"type":"if","locations":[{"start":{"line":87,"column":2},"end":{"line":94,"column":3}},{"start":{},"end":{}}],"line":87},"11":{"loc":{"start":{"line":87,"column":6},"end":{"line":87,"column":41}},"type":"binary-expr","locations":[{"start":{"line":87,"column":6},"end":{"line":87,"column":29}},{"start":{"line":87,"column":33},"end":{"line":87,"column":41}}],"line":87},"12":{"loc":{"start":{"line":89,"column":14},"end":{"line":89,"column":31}},"type":"binary-expr","locations":[{"start":{"line":89,"column":14},"end":{"line":89,"column":25}},{"start":{"line":89,"column":29},"end":{"line":89,"column":31}}],"line":89},"13":{"loc":{"start":{"line":90,"column":12},"end":{"line":90,"column":27}},"type":"binary-expr","locations":[{"start":{"line":90,"column":12},"end":{"line":90,"column":21}},{"start":{"line":90,"column":25},"end":{"line":90,"column":27}}],"line":90},"14":{"loc":{"start":{"line":91,"column":13},"end":{"line":91,"column":29}},"type":"binary-expr","locations":[{"start":{"line":91,"column":13},"end":{"line":91,"column":23}},{"start":{"line":91,"column":27},"end":{"line":91,"column":29}}],"line":91},"15":{"loc":{"start":{"line":138,"column":21},"end":{"line":138,"column":41}},"type":"binary-expr","locations":[{"start":{"line":138,"column":21},"end":{"line":138,"column":35}},{"start":{"line":138,"column":39},"end":{"line":138,"column":41}}],"line":138},"16":{"loc":{"start":{"line":139,"column":19},"end":{"line":139,"column":37}},"type":"binary-expr","locations":[{"start":{"line":139,"column":19},"end":{"line":139,"column":31}},{"start":{"line":139,"column":35},"end":{"line":139,"column":37}}],"line":139},"17":{"loc":{"start":{"line":140,"column":20},"end":{"line":140,"column":39}},"type":"binary-expr","locations":[{"start":{"line":140,"column":20},"end":{"line":140,"column":33}},{"start":{"line":140,"column":37},"end":{"line":140,"column":39}}],"line":140},"18":{"loc":{"start":{"line":141,"column":18},"end":{"line":141,"column":35}},"type":"binary-expr","locations":[{"start":{"line":141,"column":18},"end":{"line":141,"column":29}},{"start":{"line":141,"column":33},"end":{"line":141,"column":35}}],"line":141},"19":{"loc":{"start":{"line":175,"column":2},"end":{"line":176,"column":3}},"type":"if","locations":[{"start":{"line":175,"column":2},"end":{"line":176,"column":3}},{"start":{},"end":{}}],"line":175},"20":{"loc":{"start":{"line":177,"column":28},"end":{"line":177,"column":109}},"type":"cond-expr","locations":[{"start":{"line":177,"column":39},"end":{"line":177,"column":102}},{"start":{"line":177,"column":105},"end":{"line":177,"column":109}}],"line":177},"21":{"loc":{"start":{"line":183,"column":20},"end":{"line":183,"column":77}},"type":"binary-expr","locations":[{"start":{"line":183,"column":20},"end":{"line":183,"column":35}},{"start":{"line":183,"column":39},"end":{"line":183,"column":77}}],"line":183},"22":{"loc":{"start":{"line":183,"column":42},"end":{"line":183,"column":75}},"type":"binary-expr","locations":[{"start":{"line":183,"column":42},"end":{"line":183,"column":56}},{"start":{"line":183,"column":60},"end":{"line":183,"column":75}}],"line":183},"23":{"loc":{"start":{"line":186,"column":20},"end":{"line":186,"column":59}},"type":"binary-expr","locations":[{"start":{"line":186,"column":20},"end":{"line":186,"column":34}},{"start":{"line":186,"column":38},"end":{"line":186,"column":53}},{"start":{"line":186,"column":57},"end":{"line":186,"column":59}}],"line":186},"24":{"loc":{"start":{"line":187,"column":15},"end":{"line":187,"column":44}},"type":"binary-expr","locations":[{"start":{"line":187,"column":15},"end":{"line":187,"column":24}},{"start":{"line":187,"column":28},"end":{"line":187,"column":38}},{"start":{"line":187,"column":42},"end":{"line":187,"column":44}}],"line":187},"25":{"loc":{"start":{"line":188,"column":18},"end":{"line":188,"column":69}},"type":"binary-expr","locations":[{"start":{"line":188,"column":18},"end":{"line":188,"column":30}},{"start":{"line":188,"column":34},"end":{"line":188,"column":61}},{"start":{"line":188,"column":65},"end":{"line":188,"column":69}}],"line":188},"26":{"loc":{"start":{"line":190,"column":15},"end":{"line":190,"column":37}},"type":"binary-expr","locations":[{"start":{"line":190,"column":15},"end":{"line":190,"column":24}},{"start":{"line":190,"column":28},"end":{"line":190,"column":37}}],"line":190},"27":{"loc":{"start":{"line":192,"column":36},"end":{"line":204,"column":7}},"type":"cond-expr","locations":[{"start":{"line":192,"column":47},"end":{"line":198,"column":7}},{"start":{"line":198,"column":10},"end":{"line":204,"column":7}}],"line":192},"28":{"loc":{"start":{"line":194,"column":17},"end":{"line":194,"column":66}},"type":"binary-expr","locations":[{"start":{"line":194,"column":17},"end":{"line":194,"column":33}},{"start":{"line":194,"column":37},"end":{"line":194,"column":66}}],"line":194},"29":{"loc":{"start":{"line":206,"column":6},"end":{"line":220,"column":7}},"type":"if","locations":[{"start":{"line":206,"column":6},"end":{"line":220,"column":7}},{"start":{"line":213,"column":13},"end":{"line":220,"column":7}}],"line":206},"30":{"loc":{"start":{"line":223,"column":16},"end":{"line":223,"column":65}},"type":"cond-expr","locations":[{"start":{"line":223,"column":43},"end":{"line":223,"column":54}},{"start":{"line":223,"column":57},"end":{"line":223,"column":65}}],"line":223},"31":{"loc":{"start":{"line":232,"column":15},"end":{"line":232,"column":77}},"type":"cond-expr","locations":[{"start":{"line":232,"column":41},"end":{"line":232,"column":55}},{"start":{"line":232,"column":58},"end":{"line":232,"column":77}}],"line":232}},"s":{"0":1,"1":6,"2":6,"3":6,"4":6,"5":6,"6":0,"7":6,"8":6,"9":0,"10":6,"11":1,"12":0,"13":1,"14":5,"15":0,"16":5,"17":0,"18":6,"19":6,"20":0,"21":6,"22":6,"23":1,"24":1,"25":1,"26":0,"27":1,"28":1,"29":5,"30":5,"31":0,"32":5,"33":5,"34":5,"35":5,"36":0,"37":5,"38":5,"39":5,"40":2,"41":5,"42":5,"43":1,"44":1,"45":1,"46":2,"47":2,"48":2,"49":2,"50":1,"51":2,"52":1,"53":1,"54":5,"55":5,"56":5,"57":5,"58":5,"59":8,"60":8,"61":8,"62":8,"63":8,"64":8,"65":4,"66":4,"67":7,"68":1,"69":1,"70":5},"f":{"0":6,"1":6,"2":5,"3":5,"4":1,"5":2,"6":2,"7":5,"8":1,"9":1},"b":{"0":[0,6],"1":[0,6],"2":[1,5],"3":[0,1],"4":[0,5],"5":[0,6],"6":[1,5],"7":[0,1],"8":[0,5],"9":[0,5],"10":[2,3],"11":[5,2],"12":[2,0],"13":[2,0],"14":[2,0],"15":[2,0],"16":[2,0],"17":[2,0],"18":[2,0],"19":[0,5],"20":[5,0],"21":[8,8],"22":[8,0],"23":[8,0,0],"24":[8,4,2],"25":[8,5,5],"26":[8,8],"27":[8,0],"28":[8,0],"29":[4,4],"30":[7,0],"31":[1,0]},"inputSourceMap":{"version":3,"sources":["/Users/noot/Documents/communique/src/routes/api/civic/routing/+server.ts"],"sourcesContent":["import { json, error } from '@sveltejs/kit';\nimport { db } from '$lib/server/db';\nimport type { RequestHandler } from './$types';\nimport { resolveVariables } from '$lib/services/personalization';\n\n/**\n * Congressional Email Routing Handler\n * \n * This endpoint processes emails sent to congressional routing addresses:\n * - congress.{templateId}.{userId}@communique.org (authenticated users)\n * - congress.{templateId}.guest.{sessionToken}@communique.org (anonymous users)\n * \n * Flow:\n * 1. Parse routing email to extract template ID and user info\n * 2. Look up user's address to determine their representatives\n * 3. Route message to appropriate congressional offices via CWC\n * 4. For guest users, trigger account creation flow\n */\nexport const POST: RequestHandler = async ({ request }) => {\n\ttry {\n\t\tconst emailData = await request.json();\n\t\tconst { to, from, subject, body } = emailData;\n\t\t\n\t\t// Parse the routing address\n\t\tconst routingInfo = parseCongressionalRoutingAddress(to);\n\t\tif (!routingInfo) {\n\t\t\treturn error(400, 'Invalid routing address format');\n\t\t}\n\n\t\tconst { templateId, userId, isGuest, sessionToken } = routingInfo;\n\t\t\n\t\tif (!templateId) {\n\t\t\treturn error(400, 'Template ID is required');\n\t\t}\n\n\t\tif (isGuest) {\n\t\t\t// Handle anonymous user flow\n\t\t\tif (!sessionToken) {\n\t\t\t\treturn error(400, 'Session token is required for guest requests');\n\t\t\t}\n\t\t\treturn await handleGuestCongressionalRequest({\n\t\t\t\ttemplateId,\n\t\t\t\tsessionToken,\n\t\t\t\tsenderEmail: from,\n\t\t\t\tsubject,\n\t\t\t\tbody\n\t\t\t});\n\t\t} else {\n\t\t\t// Handle authenticated user flow\n\t\t\tif (!userId) {\n\t\t\t\treturn error(400, 'User ID is required for authenticated requests');\n\t\t\t}\n\t\t\treturn await handleAuthenticatedCongressionalRequest({\n\t\t\t\ttemplateId,\n\t\t\t\tuserId,\n\t\t\t\tsubject,\n\t\t\t\tbody\n\t\t\t});\n\t\t}\n\n\t} catch (err) {\n\t\treturn error(500, 'Failed to process congressional routing');\n\t}\n};\n\ninterface CongressionalRoutingInfo {\n\ttemplateId: string;\n\tuserId?: string;\n\tisGuest: boolean;\n\tsessionToken?: string;\n}\n\nfunction parseCongressionalRoutingAddress(address: string): CongressionalRoutingInfo | null {\n\t// Format: congress+{templateId}-{userId}@communique.org\n\t// or: congress+guest-{templateId}-{sessionToken}@communique.org\n\n\tconst localPart = address.split('@')[0];\n\tif (!localPart.startsWith('congress+')) return null;\n\n\tconst routingPart = localPart.substring(9); // Remove 'congress+'\n\n\tif (routingPart.startsWith('guest-')) {\n\t\tconst guestPart = routingPart.substring(6); // Remove 'guest-'\n\t\tconst match = guestPart.match(/^([^-]+)-(.+)$/);\n\t\tif (!match) return null;\n\n\t\tconst [, templateId, sessionToken] = match;\n\t\treturn {\n\t\t\ttemplateId,\n\t\t\tisGuest: true,\n\t\t\tsessionToken\n\t\t};\n\t} else {\n\t\tconst match = routingPart.match(/^([^-]+)-(.+)$/);\n\t\tif (!match) return null;\n\n\t\tconst [, templateId, userId] = match;\n\t\treturn {\n\t\t\ttemplateId,\n\t\t\tuserId,\n\t\t\tisGuest: false\n\t\t};\n\t}\n}\n\nasync function handleAuthenticatedCongressionalRequest({\n\ttemplateId,\n\tuserId,\n\tsubject,\n\tbody\n}: {\n\ttemplateId: string;\n\tuserId: string;\n\tsubject: string;\n\tbody: string;\n}) {\n\t// 1. Look up user and their address\n\tconst user = await db.user.findUnique({\n\t\twhere: { id: userId },\n\t\tinclude: {\n\t\t\trepresentatives: {\n\t\t\t\tinclude: {\n\t\t\t\t\trepresentative: true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tif (!user) {\n\t\treturn error(404, 'User not found');\n\t}\n\n\t// 2. Get user's representatives (if not cached, look them up)\n\tlet representatives = user.representatives.map((r) => r.representative);\n\tif (!representatives.length && user.zip) {\n\t\t// Look up representatives based on user's address\n\t\t// Lookup representatives using real address lookup service\n\t\trepresentatives = await lookupRepresentativesByAddress({\n\t\t\tstreet: user.street || '',\n\t\t\tcity: user.city || '',\n\t\t\tstate: user.state || '',\n\t\t\tzip: user.zip\n\t\t});\n\t}\n\n\t// 3. Route to representatives via CWC\n\tconst deliveryResults = await routeToRepresentatives({\n\t\ttemplateId,\n\t\tuser,\n\t\trepresentatives,\n\t\tsubject,\n\t\tbody\n\t});\n\n\treturn json({\n\t\tsuccess: true,\n\t\tmessage: 'Congressional messages queued for delivery',\n\t\tdeliveryCount: deliveryResults.length\n\t});\n}\n\nasync function handleGuestCongressionalRequest({\n\ttemplateId,\n\tsessionToken,\n\tsenderEmail,\n\tsubject,\n\tbody\n}: {\n\ttemplateId: string;\n\tsessionToken: string;\n\tsenderEmail: string;\n\tsubject: string;\n\tbody: string;\n}) {\n\t// 1. Store the request temporarily\n\tawait storeGuestCongressionalRequest({\n\t\ttemplateId,\n\t\tsessionToken,\n\t\tsenderEmail,\n\t\tsubject,\n\t\tbody\n\t});\n\n\t// 2. Send onboarding email to user\n\tawait sendOnboardingEmail({\n\t\temail: senderEmail,\n\t\ttemplateId,\n\t\tsessionToken,\n\t\tsubject\n\t});\n\n\treturn json({\n\t\tsuccess: true,\n\t\tmessage: 'Onboarding email sent. Complete your account to deliver your message to Congress.',\n\t\tnextStep: 'check_email'\n\t});\n}\n\n// Helper functions\nasync function lookupRepresentativesByAddress(address: Record<string, unknown>) {\n\ttry {\n\t\tconst { addressLookup } = await import('$lib/congress/address-lookup');\n\t\t\n\t\t// Convert to proper Address interface\n\t\tconst properAddress = {\n\t\t\tstreet: String(address.street || ''),\n\t\t\tcity: String(address.city || ''),\n\t\t\tstate: String(address.state || ''),\n\t\t\tzip: String(address.zip || '')\n\t\t};\n\t\t\n\t\tconst userReps = await addressLookup.lookupRepsByAddress(properAddress);\n\t\t\n\t\t// Convert to format expected by routing function\n\t\treturn [\n\t\t\t{\n\t\t\t\tname: userReps.house.name,\n\t\t\t\tchamber: 'house',\n\t\t\t\tofficeCode: userReps.house.officeCode,\n\t\t\t\tdistrict: userReps.district\n\t\t\t},\n\t\t\t...userReps.senate.map(senator => ({\n\t\t\t\tname: senator.name,\n\t\t\t\tchamber: 'senate',\n\t\t\t\tofficeCode: senator.officeCode,\n\t\t\t\tstate: senator.state\n\t\t\t}))\n\t\t];\n\t\t\n\t} catch (error) {\n\t\tconsole.error('Representative lookup failed:', error);\n\t\treturn [];\n\t}\n}\n\nasync function routeToRepresentatives({\n\ttemplateId,\n\tuser,\n\trepresentatives,\n\tsubject,\n\tbody\n}: {\n\ttemplateId: string;\n\tuser: Record<string, unknown>;\n\trepresentatives: Array<Record<string, unknown>>;\n\tsubject: string;\n\tbody: string;\n}) {\n\tconst deliveryResults = [];\n\n\t// Fetch the original template to ensure variables are present\n\tconst template = await db.template.findUnique({\n\t\twhere: { id: templateId },\n\t\tselect: { message_body: true }\n\t});\n\n\tif (!template) {\n\t\t// Continue with the user-provided body as a fallback\n\t}\n\n\t// Use the database template body for variable resolution, but preserve user's custom message.\n\t// We assume the user's custom message replaces the '[Personal Connection]' variable.\n\tconst bodyForResolution = template\n\t\t? template.message_body.replace(/\\[Personal Connection\\]/g, body)\n\t\t: body;\n\n\tfor (const rep of representatives) {\n\t\tconst personalizedBody = resolveVariables(bodyForResolution, user as any, rep as any);\n\n\t\t// Submit to representative via CWC API\n\t\ttry {\n\t\t\tconst { cwcClient } = await import('$lib/congress/cwc-client');\n\t\t\t\n\t\t\t// Convert representative data to expected format\n\t\t\tconst congressionalOffice = {\n\t\t\t\tbioguideId: rep.bioguide_id || `${rep.officeCode || rep.office_code}`,\n\t\t\t\tname: rep.name,\n\t\t\t\tchamber: rep.chamber as 'house' | 'senate',\n\t\t\t\tofficeCode: rep.officeCode || rep.office_code || '',\n\t\t\t\tstate: rep.state || user.state || '',\n\t\t\t\tdistrict: rep.district || user.congressional_district || '00', // Default for senators\n\t\t\t\tparty: rep.party || 'Unknown'\n\t\t\t};\n\n\t\t\t// Use the template from the outer scope (already fetched)\n\t\t\tconst templateForSubmission = template ? {\n\t\t\t\tid: templateId,\n\t\t\t\tsubject: template.subject || 'Congressional Communication',\n\t\t\t\tmessage_body: personalizedBody,\n\t\t\t\tdelivery_config: {},\n\t\t\t\tcwc_config: {}\n\t\t\t} : {\n\t\t\t\tid: templateId,\n\t\t\t\tsubject: subject,\n\t\t\t\tmessage_body: personalizedBody,\n\t\t\t\tdelivery_config: {},\n\t\t\t\tcwc_config: {}\n\t\t\t};\n\n\t\t\tlet submissionResult;\n\t\t\tif (congressionalOffice.chamber === 'senate') {\n\t\t\t\tsubmissionResult = await cwcClient.submitToSenate(\n\t\t\t\t\ttemplateForSubmission as any,\n\t\t\t\t\tuser as any,\n\t\t\t\t\tcongressionalOffice,\n\t\t\t\t\tpersonalizedBody\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tsubmissionResult = await cwcClient.submitToHouse(\n\t\t\t\t\ttemplateForSubmission as any,\n\t\t\t\t\tuser as any,\n\t\t\t\t\tcongressionalOffice,\n\t\t\t\t\tpersonalizedBody\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tdeliveryResults.push({\n\t\t\t\trepresentative: rep.name,\n\t\t\t\tstatus: submissionResult.success ? 'submitted' : 'failed',\n\t\t\t\tmessageId: submissionResult.messageId,\n\t\t\t\terror: submissionResult.error\n\t\t\t});\n\n\t\t} catch (error) {\n\t\t\tconsole.error(`Failed to submit to ${rep.name}:`, error);\n\t\t\tdeliveryResults.push({\n\t\t\t\trepresentative: rep.name,\n\t\t\t\tstatus: 'failed',\n\t\t\t\terror: error instanceof Error ? error.message : 'Submission failed'\n\t\t\t});\n\t\t}\n\t}\n\n\treturn deliveryResults;\n}\n\nasync function storeGuestCongressionalRequest(params: Record<string, unknown>) {\n\t// TODO: Store pending request in database\n}\n\nasync function sendOnboardingEmail(params: Record<string, unknown>) {\n\t// TODO: Send onboarding email with account creation link\n} "],"mappings":"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","names":["error"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4b7c8bea48527dab0fddad0bc458eb66bc6acc50"}}